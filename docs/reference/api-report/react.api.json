{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.50.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@default",
          "syntaxKind": "block"
        },
        {
          "tagName": "@ignore",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true,
        "@default": true,
        "@ignore": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/mui/base-ui/tree/master/packages/react",
  "kind": "Package",
  "canonicalReference": "@base-ui-components/react!",
  "docComment": "",
  "name": "@base-ui-components/react",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@base-ui-components/react!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Accordion:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/accordion/index.ts",
          "releaseTag": "None",
          "name": "Accordion",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Accordion.Header:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AccordionHeader "
                }
              ],
              "fileUrlPath": "src/accordion/header/AccordionHeader.tsx",
              "releaseTag": "Public",
              "name": "Header",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Accordion.Header.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'h3', "
                    },
                    {
                      "kind": "Reference",
                      "text": "AccordionItem.State",
                      "canonicalReference": "@base-ui-components/react!Accordion.AccordionItem.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Accordion.Header:var",
              "docComment": "/**\n * A heading that labels the corresponding panel. Renders an `<h3>` element.\n *\n * Documentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AccordionHeader: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccordionHeader.Props",
                  "canonicalReference": "@base-ui-components/react!Accordion.AccordionHeader.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLHeadingElement",
                  "canonicalReference": "!HTMLHeadingElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/accordion/header/AccordionHeader.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Header",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Accordion.Item:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AccordionItem "
                }
              ],
              "fileUrlPath": "src/accordion/item/AccordionItem.tsx",
              "releaseTag": "Public",
              "name": "Item",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Accordion.Item.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Accordion.AccordionItem.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Partial",
                      "canonicalReference": "!Partial:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Pick",
                      "canonicalReference": "!Pick:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "useCollapsibleRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useCollapsibleRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", 'disabled' | 'onOpenChange'>>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Item.Props#value:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "AccordionItemValue",
                          "canonicalReference": "@base-ui-components/react!~AccordionItemValue:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    },
                    {
                      "startIndex": 6,
                      "endIndex": 12
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Accordion.Item.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "AccordionRoot.State",
                      "canonicalReference": "@base-ui-components/react!Accordion.AccordionRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Item.State#index:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "index: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "index",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Item.State#open:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Item.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Accordion.Item:var",
              "docComment": "/**\n * Groups an accordion header with the corresponding panel. Renders a `<div>` element.\n *\n * Documentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AccordionItem: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccordionItem.Props",
                  "canonicalReference": "@base-ui-components/react!Accordion.AccordionItem.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/accordion/item/AccordionItem.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Item",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Accordion.Panel:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AccordionPanel "
                }
              ],
              "fileUrlPath": "src/accordion/panel/AccordionPanel.tsx",
              "releaseTag": "Public",
              "name": "Panel",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Accordion.Panel.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "AccordionItem.State",
                      "canonicalReference": "@base-ui-components/react!Accordion.AccordionItem.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Pick",
                      "canonicalReference": "!Pick:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "AccordionRoot.Props",
                      "canonicalReference": "@base-ui-components/react!Accordion.AccordionRoot.Props:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", 'hiddenUntilFound' | 'keepMounted'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    },
                    {
                      "startIndex": 6,
                      "endIndex": 10
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Accordion.Panel:var",
              "docComment": "/**\n * A collapsible panel with the accordion item contents. Renders a `<div>` element.\n *\n * Documentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AccordionPanel: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccordionPanel.Props",
                  "canonicalReference": "@base-ui-components/react!Accordion.AccordionPanel.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/accordion/panel/AccordionPanel.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Panel",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Accordion.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AccordionRoot "
                }
              ],
              "fileUrlPath": "src/accordion/root/AccordionRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Accordion.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Partial",
                      "canonicalReference": "!Partial:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Pick",
                      "canonicalReference": "!Pick:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "useAccordionRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useAccordionRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", 'value' | 'defaultValue' | 'disabled' | 'loop' | 'onValueChange' | 'openMultiple' | 'orientation'>>"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Accordion.AccordionRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'defaultValue'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Root.Props#hiddenUntilFound:member",
                      "docComment": "/**\n * Allows the browser’s built-in page search to find and expand the panel contents.\n *\n * Overrides the `keepMounted` prop and uses `hidden=\"until-found\"` to hide the element without removing it from the DOM.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "hiddenUntilFound?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "hiddenUntilFound",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Root.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the element in the DOM while the panel is closed. This prop is ignored when `hiddenUntilFound` is used.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 7
                    },
                    {
                      "startIndex": 8,
                      "endIndex": 14
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Accordion.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Root.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Root.State#orientation:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation: "
                        },
                        {
                          "kind": "Reference",
                          "text": "AccordionOrientation",
                          "canonicalReference": "@base-ui-components/react!~AccordionOrientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Accordion.Root.State#value:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value: "
                        },
                        {
                          "kind": "Reference",
                          "text": "AccordionValue",
                          "canonicalReference": "@base-ui-components/react!~AccordionValue:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Accordion.Root:var",
              "docComment": "/**\n * Groups all parts of the accordion. Renders a `<div>` element.\n *\n * Documentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AccordionRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccordionRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Accordion.AccordionRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/accordion/root/AccordionRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Accordion.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AccordionTrigger "
                }
              ],
              "fileUrlPath": "src/accordion/trigger/AccordionTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Accordion.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "AccordionItem.State",
                      "canonicalReference": "@base-ui-components/react!Accordion.AccordionItem.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Accordion.Trigger:var",
              "docComment": "/**\n * A button that opens and closes the corresponding panel. Renders a `<button>` element.\n *\n * Documentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AccordionTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AccordionTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!Accordion.AccordionTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/accordion/trigger/AccordionTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!AlertDialog:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/alert-dialog/index.ts",
          "releaseTag": "None",
          "name": "AlertDialog",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Backdrop:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AlertDialogBackdrop "
                }
              ],
              "fileUrlPath": "src/alert-dialog/backdrop/AlertDialogBackdrop.tsx",
              "releaseTag": "Public",
              "name": "Backdrop",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Backdrop.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogBackdrop.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Backdrop.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Backdrop.State#open:member",
                      "docComment": "/**\n * Whether the dialog is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Backdrop.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Backdrop:var",
              "docComment": "/**\n * An overlay displayed beneath the popup. Renders a `<div>` element.\n *\n * Documentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AlertDialogBackdrop: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AlertDialogBackdrop.Props",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogBackdrop.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/alert-dialog/backdrop/AlertDialogBackdrop.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Backdrop",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Close:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AlertDialogClose "
                }
              ],
              "fileUrlPath": "src/alert-dialog/close/AlertDialogClose.tsx",
              "releaseTag": "Public",
              "name": "Close",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Close.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogClose.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Close.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Close:var",
              "docComment": "/**\n * A button that closes the alert dialog. Renders a `<button>` element.\n *\n * Documentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AlertDialogClose: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AlertDialogClose.Props",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogClose.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/alert-dialog/close/AlertDialogClose.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Close",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Description:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AlertDialogDescription "
                }
              ],
              "fileUrlPath": "src/alert-dialog/description/AlertDialogDescription.tsx",
              "releaseTag": "Public",
              "name": "Description",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Description.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'p', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogDescription.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Description.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Description:var",
              "docComment": "/**\n * A paragraph with additional information about the alert dialog. Renders a `<p>` element.\n *\n * Documentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AlertDialogDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AlertDialogDescription.Props",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogDescription.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLParagraphElement",
                  "canonicalReference": "!HTMLParagraphElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/alert-dialog/description/AlertDialogDescription.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Description",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Popup:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AlertDialogPopup "
                }
              ],
              "fileUrlPath": "src/alert-dialog/popup/AlertDialogPopup.tsx",
              "releaseTag": "Public",
              "name": "Popup",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Popup.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogPopup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Popup.Props#finalFocus:member",
                      "docComment": "/**\n * Determines the element to focus when the dialog is closed. By default, focus returns to the trigger.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "finalFocus?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "finalFocus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Popup.Props#initialFocus:member",
                      "docComment": "/**\n * Determines the element to focus when the dialog is opened. By default, the first focusable element is focused.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "initialFocus?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null> | ((interactionType: "
                        },
                        {
                          "kind": "Reference",
                          "text": "InteractionType",
                          "canonicalReference": "@base-ui-components/react!~InteractionType:type"
                        },
                        {
                          "kind": "Content",
                          "text": ") => "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>)"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "initialFocus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 11
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Popup.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Popup.State#hasNestedDialogs:member",
                      "docComment": "/**\n * Whether the dialog has nested dialogs open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "hasNestedDialogs: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "hasNestedDialogs",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Popup.State#nested:member",
                      "docComment": "/**\n * Whether the dialog is nested within a parent dialog.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "nested: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "nested",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Popup.State#open:member",
                      "docComment": "/**\n * Whether the dialog is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Popup.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Popup:var",
              "docComment": "/**\n * A container for the alert dialog contents. Renders a `<div>` element.\n *\n * Documentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AlertDialogPopup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AlertDialogPopup.Props",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogPopup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/alert-dialog/popup/AlertDialogPopup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Popup",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Portal:function(1)",
              "docComment": "/**\n * A portal element that moves the popup to a different part of the DOM. By default, the portal element is appended to `<body>`.\n *\n * Documentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare function AlertDialogPortal(props: "
                },
                {
                  "kind": "Reference",
                  "text": "AlertDialogPortal.Props",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogPortal.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.JSX.Element",
                  "canonicalReference": "@types/react!React.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/alert-dialog/portal/AlertDialogPortal.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Portal"
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Portal:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AlertDialogPortal "
                }
              ],
              "fileUrlPath": "src/alert-dialog/portal/AlertDialogPortal.tsx",
              "releaseTag": "Public",
              "name": "Portal",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Portal.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Portal.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Portal.Props#container:member",
                      "docComment": "/**\n * A parent element to render the portal element into.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "container?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null | "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "container",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 7
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Portal.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the portal mounted in the DOM while the popup is hidden.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Portal.propTypes:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "propTypes: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    }
                  ],
                  "isReadonly": false,
                  "releaseTag": "Public",
                  "name": "propTypes",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AlertDialogRoot "
                }
              ],
              "fileUrlPath": "src/alert-dialog/root/AlertDialogRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Root.Actions:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type Actions = "
                    },
                    {
                      "kind": "Reference",
                      "text": "DialogRoot.Actions",
                      "canonicalReference": "@base-ui-components/react!Dialog.DialogRoot.Actions:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Actions",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "DialogRoot.Props",
                      "canonicalReference": "@base-ui-components/react!Dialog.DialogRoot.Props:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", 'modal' | 'dismissible'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Root:var",
              "docComment": "/**\n * Groups all parts of the alert dialog. Doesn’t render its own HTML element.\n *\n * Documentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AlertDialogRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FC",
                  "canonicalReference": "@types/react!React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AlertDialogRoot.Props",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/alert-dialog/root/AlertDialogRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Title:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AlertDialogTitle "
                }
              ],
              "fileUrlPath": "src/alert-dialog/title/AlertDialogTitle.tsx",
              "releaseTag": "Public",
              "name": "Title",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Title.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'h2', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogTitle.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Title.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Title:var",
              "docComment": "/**\n * A heading that labels the dialog. Renders an `<h2>` element.\n *\n * Documentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AlertDialogTitle: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AlertDialogTitle.Props",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogTitle.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLParagraphElement",
                  "canonicalReference": "!HTMLParagraphElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/alert-dialog/title/AlertDialogTitle.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Title",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AlertDialogTrigger "
                }
              ],
              "fileUrlPath": "src/alert-dialog/trigger/AlertDialogTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogTrigger.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.Trigger.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!AlertDialog.Trigger.State#open:member",
                      "docComment": "/**\n * Whether the dialog is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!AlertDialog.Trigger:var",
              "docComment": "/**\n * A button that opens the alert dialog. Renders a `<button>` element.\n *\n * Documentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AlertDialogTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AlertDialogTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!AlertDialog.AlertDialogTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/alert-dialog/trigger/AlertDialogTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Avatar:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/avatar/index.ts",
          "releaseTag": "None",
          "name": "Avatar",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Avatar.Fallback:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AvatarFallback "
                }
              ],
              "fileUrlPath": "src/avatar/fallback/AvatarFallback.tsx",
              "releaseTag": "Public",
              "name": "Fallback",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Avatar.Fallback.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "AvatarRoot.State",
                      "canonicalReference": "@base-ui-components/react!Avatar.AvatarRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Avatar.Fallback.Props#delay:member",
                      "docComment": "/**\n * How long to wait before showing the fallback. Specified in milliseconds.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "delay?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "delay",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Avatar.Fallback:var",
              "docComment": "/**\n * Rendered when the image fails to load or when no image is provided. Renders a `<span>` element.\n *\n * Documentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AvatarFallback: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AvatarFallback.Props",
                  "canonicalReference": "@base-ui-components/react!Avatar.AvatarFallback.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/avatar/fallback/AvatarFallback.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Fallback",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Avatar.Image:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AvatarImage "
                }
              ],
              "fileUrlPath": "src/avatar/image/AvatarImage.tsx",
              "releaseTag": "Public",
              "name": "Image",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Avatar.Image.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'img', "
                    },
                    {
                      "kind": "Reference",
                      "text": "AvatarRoot.State",
                      "canonicalReference": "@base-ui-components/react!Avatar.AvatarRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Avatar.Image.Props#onLoadingStatusChange:member",
                      "docComment": "/**\n * Callback fired when the loading status changes.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onLoadingStatusChange?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(status: "
                        },
                        {
                          "kind": "Reference",
                          "text": "ImageLoadingStatus",
                          "canonicalReference": "@base-ui-components/react!~ImageLoadingStatus_2:type"
                        },
                        {
                          "kind": "Content",
                          "text": ") => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onLoadingStatusChange",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Avatar.Image:var",
              "docComment": "/**\n * The image to be displayed in the avatar. Renders an `<img>` element.\n *\n * Documentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AvatarImage: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AvatarImage.Props",
                  "canonicalReference": "@base-ui-components/react!Avatar.AvatarImage.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLImageElement",
                  "canonicalReference": "!HTMLImageElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/avatar/image/AvatarImage.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Image",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Avatar.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace AvatarRoot "
                }
              ],
              "fileUrlPath": "src/avatar/root/AvatarRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Avatar.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Avatar.AvatarRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Avatar.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Avatar.Root.State#imageLoadingStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "imageLoadingStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "ImageLoadingStatus",
                          "canonicalReference": "@base-ui-components/react!~ImageLoadingStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "imageLoadingStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Avatar.Root:var",
              "docComment": "/**\n * Displays a user's profile picture, initials, or fallback icon. Renders a `<span>` element.\n *\n * Documentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AvatarRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AvatarRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Avatar.AvatarRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/avatar/root/AvatarRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Checkbox:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/checkbox/index.ts",
          "releaseTag": "None",
          "name": "Checkbox",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Checkbox.Indicator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace CheckboxIndicator "
                }
              ],
              "fileUrlPath": "src/checkbox/indicator/CheckboxIndicator.tsx",
              "releaseTag": "Public",
              "name": "Indicator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Checkbox.Indicator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Checkbox.CheckboxIndicator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Checkbox.Indicator.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the element in the DOM when the checkbox is not checked.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Checkbox.Indicator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "CheckboxRoot.State",
                      "canonicalReference": "@base-ui-components/react!Checkbox.CheckboxRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Checkbox.Indicator.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Checkbox.Indicator:var",
              "docComment": "/**\n * Indicates whether the checkbox is ticked. Renders a `<span>` element.\n *\n * Documentation: [Base UI Checkbox](https://base-ui.com/react/components/checkbox)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CheckboxIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxIndicator.Props",
                  "canonicalReference": "@base-ui-components/react!Checkbox.CheckboxIndicator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/checkbox/indicator/CheckboxIndicator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Indicator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Checkbox.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace CheckboxRoot "
                }
              ],
              "fileUrlPath": "src/checkbox/root/CheckboxRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Checkbox.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "useCheckboxRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useCheckboxRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Checkbox.CheckboxRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'onChange' | 'value'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    },
                    {
                      "startIndex": 3,
                      "endIndex": 9
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Checkbox.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "FieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Checkbox.Root.State#checked:member",
                      "docComment": "/**\n * Whether the checkbox is currently ticked.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "checked: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "checked",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Checkbox.Root.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Checkbox.Root.State#indeterminate:member",
                      "docComment": "/**\n * Whether the checkbox is in a mixed state: neither ticked, nor unticked.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "indeterminate: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "indeterminate",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Checkbox.Root.State#readOnly:member",
                      "docComment": "/**\n * Whether the user should be unable to tick or untick the checkbox.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "readOnly: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "readOnly",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Checkbox.Root.State#required:member",
                      "docComment": "/**\n * Whether the user must tick the checkbox before submitting a form.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "required: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "required",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Checkbox.Root:var",
              "docComment": "/**\n * Represents the checkbox itself. Renders a `<button>` element and a hidden `<input>` beside.\n *\n * Documentation: [Base UI Checkbox](https://base-ui.com/react/components/checkbox)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CheckboxRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Checkbox.CheckboxRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/checkbox/root/CheckboxRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!CheckboxGroup:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace CheckboxGroup "
            }
          ],
          "fileUrlPath": "src/checkbox-group/CheckboxGroup.tsx",
          "releaseTag": "Public",
          "name": "CheckboxGroup",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!CheckboxGroup.Props:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "BaseUIComponentProps",
                  "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<'div', "
                },
                {
                  "kind": "Reference",
                  "text": "State",
                  "canonicalReference": "@base-ui-components/react!CheckboxGroup.State:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Props",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!CheckboxGroup.Props#allValues:member",
                  "docComment": "/**\n * Names of all checkboxes in the group. Use this when creating a parent checkbox.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allValues?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "allValues",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!CheckboxGroup.Props#defaultValue:member",
                  "docComment": "/**\n * Names of the checkboxes in the group that should be initially ticked.\n *\n * To render a controlled checkbox group, use the `value` prop instead.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "defaultValue?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "defaultValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!CheckboxGroup.Props#disabled:member",
                  "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disabled?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "disabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!CheckboxGroup.Props#onValueChange:member",
                  "docComment": "/**\n * Event handler called when a checkbox in the group is ticked or unticked. Provides the new value as an argument.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onValueChange?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(value: string[], event: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Event",
                      "canonicalReference": "!Event:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onValueChange",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!CheckboxGroup.Props#value:member",
                  "docComment": "/**\n * Names of the checkboxes in the group that should be ticked.\n *\n * To render an uncontrolled checkbox group, use the `defaultValue` prop instead.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "value",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!CheckboxGroup.State:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface State extends "
                },
                {
                  "kind": "Reference",
                  "text": "FieldRoot.State",
                  "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "State",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!CheckboxGroup.State#disabled:member",
                  "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "disabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!CheckboxGroup:var",
          "docComment": "/**\n * Provides a shared state to a series of checkboxes.\n *\n * Documentation: [Base UI Checkbox Group](https://base-ui.com/react/components/checkbox-group)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CheckboxGroup: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroup.Props",
              "canonicalReference": "@base-ui-components/react!CheckboxGroup.Props:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/checkbox-group/CheckboxGroup.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "CheckboxGroup",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Collapsible:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/collapsible/index.ts",
          "releaseTag": "None",
          "name": "Collapsible",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Collapsible.Panel:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace CollapsiblePanel "
                }
              ],
              "fileUrlPath": "src/collapsible/panel/CollapsiblePanel.tsx",
              "releaseTag": "Public",
              "name": "Panel",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Collapsible.Panel.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollapsibleRoot.State",
                      "canonicalReference": "@base-ui-components/react!Collapsible.CollapsibleRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Collapsible.Panel.Props#hiddenUntilFound:member",
                      "docComment": "/**\n * Allows the browser’s built-in page search to find and expand the panel contents.\n *\n * Overrides the `keepMounted` prop and uses `hidden=\"until-found\"` to hide the element without removing it from the DOM.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "hiddenUntilFound?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "hiddenUntilFound",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Collapsible.Panel.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the element in the DOM while the panel is hidden. This prop is ignored when `hiddenUntilFound` is used.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Collapsible.Panel:var",
              "docComment": "/**\n * A panel with the collapsible contents. Renders a `<div>` element.\n *\n * Documentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CollapsiblePanel: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollapsiblePanel.Props",
                  "canonicalReference": "@base-ui-components/react!Collapsible.CollapsiblePanel.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/collapsible/panel/CollapsiblePanel.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Panel",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Collapsible.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace CollapsibleRoot "
                }
              ],
              "fileUrlPath": "src/collapsible/root/CollapsibleRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Collapsible.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Partial",
                      "canonicalReference": "!Partial:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "useCollapsibleRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useCollapsibleRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Collapsible.CollapsibleRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'render'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Collapsible.Root.Props#render:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "render?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "BaseUIComponentProps",
                          "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                        },
                        {
                          "kind": "Content",
                          "text": "<'div', "
                        },
                        {
                          "kind": "Reference",
                          "text": "State",
                          "canonicalReference": "@base-ui-components/react!Collapsible.CollapsibleRoot.State:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ">['render'] | null"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "render",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    },
                    {
                      "startIndex": 6,
                      "endIndex": 12
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Collapsible.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Pick",
                      "canonicalReference": "!Pick:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "useCollapsibleRoot.ReturnValue",
                      "canonicalReference": "@base-ui-components/react!~useCollapsibleRoot.ReturnValue:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", 'open' | 'disabled' | 'transitionStatus'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Collapsible.Root:var",
              "docComment": "/**\n * Groups all parts of the collapsible. Renders a `<div>` element.\n *\n * Documentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CollapsibleRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollapsibleRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Collapsible.CollapsibleRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/collapsible/root/CollapsibleRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Collapsible.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace CollapsibleTrigger "
                }
              ],
              "fileUrlPath": "src/collapsible/trigger/CollapsibleTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Collapsible.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollapsibleRoot.State",
                      "canonicalReference": "@base-ui-components/react!Collapsible.CollapsibleRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Collapsible.Trigger:var",
              "docComment": "/**\n * A button that opens and closes the collapsible panel. Renders a `<button>` element.\n *\n * Documentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CollapsibleTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollapsibleTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!Collapsible.CollapsibleTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/collapsible/trigger/CollapsibleTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Dialog:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/dialog/index.ts",
          "releaseTag": "None",
          "name": "Dialog",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Dialog.Backdrop:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace DialogBackdrop "
                }
              ],
              "fileUrlPath": "src/dialog/backdrop/DialogBackdrop.tsx",
              "releaseTag": "Public",
              "name": "Backdrop",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Backdrop.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Dialog.DialogBackdrop.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Backdrop.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Backdrop.State#open:member",
                      "docComment": "/**\n * Whether the dialog is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Backdrop.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Dialog.Backdrop:var",
              "docComment": "/**\n * An overlay displayed beneath the popup. Renders a `<div>` element.\n *\n * Documentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DialogBackdrop: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DialogBackdrop.Props",
                  "canonicalReference": "@base-ui-components/react!Dialog.DialogBackdrop.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/dialog/backdrop/DialogBackdrop.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Backdrop",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Dialog.Close:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace DialogClose "
                }
              ],
              "fileUrlPath": "src/dialog/close/DialogClose.tsx",
              "releaseTag": "Public",
              "name": "Close",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Close.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Dialog.DialogClose.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Close.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Dialog.Close:var",
              "docComment": "/**\n * A button that closes the dialog. Renders a `<button>` element.\n *\n * Documentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DialogClose: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DialogClose.Props",
                  "canonicalReference": "@base-ui-components/react!Dialog.DialogClose.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/dialog/close/DialogClose.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Close",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Dialog.Description:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace DialogDescription "
                }
              ],
              "fileUrlPath": "src/dialog/description/DialogDescription.tsx",
              "releaseTag": "Public",
              "name": "Description",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Description.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'p', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Dialog.DialogDescription.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Description.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Dialog.Description:var",
              "docComment": "/**\n * A paragraph with additional information about the dialog. Renders a `<p>` element.\n *\n * Documentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DialogDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DialogDescription.Props",
                  "canonicalReference": "@base-ui-components/react!Dialog.DialogDescription.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLParagraphElement",
                  "canonicalReference": "!HTMLParagraphElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/dialog/description/DialogDescription.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Description",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Dialog.Popup:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace DialogPopup "
                }
              ],
              "fileUrlPath": "src/dialog/popup/DialogPopup.tsx",
              "releaseTag": "Public",
              "name": "Popup",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Popup.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Dialog.DialogPopup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Popup.Props#finalFocus:member",
                      "docComment": "/**\n * Determines the element to focus when the dialog is closed. By default, focus returns to the trigger.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "finalFocus?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "finalFocus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Popup.Props#initialFocus:member",
                      "docComment": "/**\n * Determines the element to focus when the dialog is opened. By default, the first focusable element is focused.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "initialFocus?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null> | ((interactionType: "
                        },
                        {
                          "kind": "Reference",
                          "text": "InteractionType",
                          "canonicalReference": "@base-ui-components/react!~InteractionType:type"
                        },
                        {
                          "kind": "Content",
                          "text": ") => "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>)"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "initialFocus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 11
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Popup.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Popup.State#hasNestedDialogs:member",
                      "docComment": "/**\n * Whether the dialog has nested dialogs open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "hasNestedDialogs: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "hasNestedDialogs",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Popup.State#nested:member",
                      "docComment": "/**\n * Whether the dialog is nested within a parent dialog.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "nested: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "nested",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Popup.State#open:member",
                      "docComment": "/**\n * Whether the dialog is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Popup.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Dialog.Popup:var",
              "docComment": "/**\n * A container for the dialog contents. Renders a `<div>` element.\n *\n * Documentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DialogPopup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DialogPopup.Props",
                  "canonicalReference": "@base-ui-components/react!Dialog.DialogPopup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/dialog/popup/DialogPopup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Popup",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!Dialog.Portal:function(1)",
              "docComment": "/**\n * A portal element that moves the popup to a different part of the DOM. By default, the portal element is appended to `<body>`.\n *\n * Documentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare function DialogPortal(props: "
                },
                {
                  "kind": "Reference",
                  "text": "DialogPortal.Props",
                  "canonicalReference": "@base-ui-components/react!Dialog.DialogPortal.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.JSX.Element",
                  "canonicalReference": "@types/react!React.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/dialog/portal/DialogPortal.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Portal"
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Dialog.Portal:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace DialogPortal "
                }
              ],
              "fileUrlPath": "src/dialog/portal/DialogPortal.tsx",
              "releaseTag": "Public",
              "name": "Portal",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Portal.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Portal.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Portal.Props#container:member",
                      "docComment": "/**\n * A parent element to render the portal element into.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "container?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null | "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "container",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 7
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Portal.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the portal mounted in the DOM while the popup is hidden.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@base-ui-components/react!Dialog.Portal.propTypes:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "propTypes: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    }
                  ],
                  "isReadonly": false,
                  "releaseTag": "Public",
                  "name": "propTypes",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Dialog.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace DialogRoot "
                }
              ],
              "fileUrlPath": "src/dialog/root/DialogRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Dialog.Root.Actions:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type Actions = "
                    },
                    {
                      "kind": "Reference",
                      "text": "useDialogRoot.Actions",
                      "canonicalReference": "@base-ui-components/react!~useDialogRoot.Actions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Actions",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "SharedParameters",
                      "canonicalReference": "@base-ui-components/react!~SharedParameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Root.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Dialog.Root:var",
              "docComment": "/**\n * Groups all parts of the dialog. Doesn’t render its own HTML element.\n *\n * Documentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DialogRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FC",
                  "canonicalReference": "@types/react!React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DialogRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Dialog.DialogRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/dialog/root/DialogRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Dialog.Title:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace DialogTitle "
                }
              ],
              "fileUrlPath": "src/dialog/title/DialogTitle.tsx",
              "releaseTag": "Public",
              "name": "Title",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Title.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'h2', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Dialog.DialogTitle.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Title.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Dialog.Title:var",
              "docComment": "/**\n * A heading that labels the dialog. Renders an `<h2>` element.\n *\n * Documentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DialogTitle: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DialogTitle.Props",
                  "canonicalReference": "@base-ui-components/react!Dialog.DialogTitle.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLParagraphElement",
                  "canonicalReference": "!HTMLParagraphElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/dialog/title/DialogTitle.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Title",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Dialog.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace DialogTrigger "
                }
              ],
              "fileUrlPath": "src/dialog/trigger/DialogTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Dialog.DialogTrigger.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Dialog.Trigger.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Dialog.Trigger.State#open:member",
                      "docComment": "/**\n * Whether the dialog is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Dialog.Trigger:var",
              "docComment": "/**\n * A button that opens the dialog. Renders a `<button>` element.\n *\n * Documentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DialogTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DialogTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!Dialog.DialogTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/dialog/trigger/DialogTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!DirectionProvider:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace DirectionProvider "
            }
          ],
          "fileUrlPath": "src/direction-provider/DirectionProvider.tsx",
          "releaseTag": "Public",
          "name": "DirectionProvider",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!DirectionProvider.Props:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Props "
                }
              ],
              "releaseTag": "Public",
              "name": "Props",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!DirectionProvider.Props#children:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "children?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "React.ReactNode",
                      "canonicalReference": "@types/react!React.ReactNode:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "children",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!DirectionProvider.Props#direction:member",
                  "docComment": "/**\n * The reading direction of the text\n *\n * @default\n *\n * 'ltr'\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "direction?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextDirection",
                      "canonicalReference": "@base-ui-components/react!TextDirection:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "direction",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!DirectionProvider:var",
          "docComment": "/**\n * Enables RTL behavior for Base UI components.\n *\n * Documentation: [Base UI Direction Provider](https://base-ui.com/react/utils/direction-provider)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DirectionProvider: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DirectionProvider.Props",
              "canonicalReference": "@base-ui-components/react!DirectionProvider.Props:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/direction-provider/DirectionProvider.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DirectionProvider",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Field:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/field/index.ts",
          "releaseTag": "None",
          "name": "Field",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Field.Control:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace FieldControl "
                }
              ],
              "fileUrlPath": "src/field/control/FieldControl.tsx",
              "releaseTag": "Public",
              "name": "Control",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Field.Control.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'input', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldControl.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Control.Props#onValueChange:member",
                      "docComment": "/**\n * Callback fired when the `value` changes. Use when controlled.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onValueChange?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(value: string | number | readonly string[] | undefined, event: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Event",
                          "canonicalReference": "!Event:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ") => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onValueChange",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Field.Control.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Reference",
                      "text": "FieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Field.Control:var",
              "docComment": "/**\n * The form control to label and validate. Renders an `<input>` element.\n *\n * You can omit this part and use any Base UI input component instead. For example, [Input](https://base-ui.com/react/components/input), [Checkbox](https://base-ui.com/react/components/checkbox), or [Select](https://base-ui.com/react/components/select), among others, will work with Field out of the box.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FieldControl: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FieldControl.Props",
                  "canonicalReference": "@base-ui-components/react!Field.FieldControl.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLInputElement",
                  "canonicalReference": "!HTMLInputElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/field/control/FieldControl.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Control",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Field.Description:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace FieldDescription "
                }
              ],
              "fileUrlPath": "src/field/description/FieldDescription.tsx",
              "releaseTag": "Public",
              "name": "Description",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Field.Description.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'p', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldDescription.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Field.Description.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Reference",
                      "text": "FieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Field.Description:var",
              "docComment": "/**\n * A paragraph with additional information about the field. Renders a `<p>` element.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FieldDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FieldDescription.Props",
                  "canonicalReference": "@base-ui-components/react!Field.FieldDescription.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLParagraphElement",
                  "canonicalReference": "!HTMLParagraphElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/field/description/FieldDescription.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Description",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Field.Error:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace FieldError "
                }
              ],
              "fileUrlPath": "src/field/error/FieldError.tsx",
              "releaseTag": "Public",
              "name": "Error",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Field.Error.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldError.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Error.Props#forceShow:member",
                      "docComment": "/**\n * Whether the error message should be shown regardless of the field’s validity.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "forceShow?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "forceShow",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Error.Props#match:member",
                      "docComment": "/**\n * Determines whether to show the error message according to the field’s [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState).\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "match?: "
                        },
                        {
                          "kind": "Content",
                          "text": "keyof "
                        },
                        {
                          "kind": "Reference",
                          "text": "ValidityState",
                          "canonicalReference": "!ValidityState:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "match",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Field.Error.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Reference",
                      "text": "FieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Field.Error:var",
              "docComment": "/**\n * An error message displayed if the field control fails validation. Renders a `<div>` element.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FieldError: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FieldError.Props",
                  "canonicalReference": "@base-ui-components/react!Field.FieldError.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/field/error/FieldError.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Error",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Field.Label:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace FieldLabel "
                }
              ],
              "fileUrlPath": "src/field/label/FieldLabel.tsx",
              "releaseTag": "Public",
              "name": "Label",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Field.Label.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldLabel.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Field.Label.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Reference",
                      "text": "FieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Field.Label:var",
              "docComment": "/**\n * An accessible label that is automatically associated with the field control. Renders a `<label>` element.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FieldLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FieldLabel.Props",
                  "canonicalReference": "@base-ui-components/react!Field.FieldLabel.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                }
              ],
              "fileUrlPath": "src/field/label/FieldLabel.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Label",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Field.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace FieldRoot "
                }
              ],
              "fileUrlPath": "src/field/root/FieldRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Field.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction. Takes precedence over the `disabled` prop on the `<Field.Control>` component.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.Props#invalid:member",
                      "docComment": "/**\n * Whether the field is forcefully marked as invalid.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "invalid?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "invalid",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.Props#name:member",
                      "docComment": "/**\n * Identifies the field when a form is submitted. Takes precedence over the `name` prop on the `<Field.Control>` component.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "name?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "name",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.Props#validate:member",
                      "docComment": "/**\n * A function for custom validation. Return a string or an array of strings with the error message(s) if the value is invalid, or `null` if the value is valid.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "validate?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(value: unknown) => string | string[] | null | "
                        },
                        {
                          "kind": "Reference",
                          "text": "Promise",
                          "canonicalReference": "!Promise:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<string | string[] | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "validate",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.Props#validationDebounceTime:member",
                      "docComment": "/**\n * How long to wait between `validate` callbacks if `validationMode=\"onChange\"` is used. Specified in milliseconds.\n *\n * @default\n *\n * 0\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "validationDebounceTime?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "validationDebounceTime",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.Props#validationMode:member",
                      "docComment": "/**\n * Determines when the field should be validated.\n *\n * - **onBlur** triggers validation when the control loses focus - **onChange** triggers validation on every change to the control value\n *\n * @default\n *\n * 'onBlur'\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "validationMode?: "
                        },
                        {
                          "kind": "Content",
                          "text": "'onBlur' | 'onChange'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "validationMode",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Field.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.State#dirty:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "dirty: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "dirty",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.State#filled:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "filled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "filled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.State#focused:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "focused: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "focused",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.State#touched:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "touched: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "touched",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Root.State#valid:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "valid: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean | null"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "valid",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Field.Root:var",
              "docComment": "/**\n * Groups all parts of the field. Renders a `<div>` element.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FieldRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FieldRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Field.FieldRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/field/root/FieldRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Field.Validity:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace FieldValidity "
                }
              ],
              "fileUrlPath": "src/field/validity/FieldValidity.tsx",
              "releaseTag": "Public",
              "name": "Validity",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Field.Validity.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Field.Validity.Props#children:member",
                      "docComment": "/**\n * A function that accepts the field validity state as an argument.\n * ```jsx\n * <Field.Validity>\n *   {(validity) => {\n *     return <div>...</div>\n *   }}\n * </Field.Validity>\n * ```\n *\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children: "
                        },
                        {
                          "kind": "Content",
                          "text": "(state: "
                        },
                        {
                          "kind": "Reference",
                          "text": "FieldValidityState",
                          "canonicalReference": "@base-ui-components/react!~FieldValidityState:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ") => "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Field.Validity.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Field.Validity:var",
              "docComment": "/**\n * Used to display a custom message based on the field’s validity. Requires `children` to be a function that accepts field validity state as an argument.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FieldValidity: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FC",
                  "canonicalReference": "@types/react!React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FieldValidity.Props",
                  "canonicalReference": "@base-ui-components/react!Field.FieldValidity.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/field/validity/FieldValidity.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Validity",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Field.ValidityData:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FieldValidityData "
                }
              ],
              "fileUrlPath": "src/field/root/FieldRoot.tsx",
              "releaseTag": "Public",
              "name": "ValidityData",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Field.ValidityData#error:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "error: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "error",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Field.ValidityData#errors:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errors: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "errors",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Field.ValidityData#initialValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "initialValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "unknown"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "initialValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Field.ValidityData#state:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "state: "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        badInput: boolean;\n        customError: boolean;\n        patternMismatch: boolean;\n        rangeOverflow: boolean;\n        rangeUnderflow: boolean;\n        stepMismatch: boolean;\n        tooLong: boolean;\n        tooShort: boolean;\n        typeMismatch: boolean;\n        valueMissing: boolean;\n        valid: boolean | null;\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "state",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Field.ValidityData#value:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value: "
                    },
                    {
                      "kind": "Content",
                      "text": "unknown"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "value",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Fieldset:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/fieldset/index.ts",
          "releaseTag": "None",
          "name": "Fieldset",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Fieldset.Legend:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace FieldsetLegend "
                }
              ],
              "fileUrlPath": "src/fieldset/legend/FieldsetLegend.tsx",
              "releaseTag": "Public",
              "name": "Legend",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Fieldset.Legend.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Fieldset.FieldsetLegend.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Fieldset.Legend.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Fieldset.Legend.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Fieldset.Legend:var",
              "docComment": "/**\n * An accessible label that is automatically associated with the fieldset. Renders a `<div>` element.\n *\n * Documentation: [Base UI Fieldset](https://base-ui.com/react/components/fieldset)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FieldsetLegend: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FieldsetLegend.Props",
                  "canonicalReference": "@base-ui-components/react!Fieldset.FieldsetLegend.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/fieldset/legend/FieldsetLegend.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Legend",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Fieldset.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace FieldsetRoot "
                }
              ],
              "fileUrlPath": "src/fieldset/root/FieldsetRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Fieldset.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'fieldset', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Fieldset.FieldsetRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Fieldset.Root.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        disabled: boolean;\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Fieldset.Root:var",
              "docComment": "/**\n * Groups the fieldset legend and the associated fields. Renders a `<fieldset>` element.\n *\n * Documentation: [Base UI Fieldset](https://base-ui.com/react/components/fieldset)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FieldsetRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FieldsetRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Fieldset.FieldsetRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLFieldSetElement",
                  "canonicalReference": "!HTMLFieldSetElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/fieldset/root/FieldsetRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Form:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace Form "
            }
          ],
          "fileUrlPath": "src/form/Form.tsx",
          "releaseTag": "Public",
          "name": "Form",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Form.Props:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "BaseUIComponentProps",
                  "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<'form', "
                },
                {
                  "kind": "Reference",
                  "text": "State",
                  "canonicalReference": "@base-ui-components/react!Form.State:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Props",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Form.Props#errors:member",
                  "docComment": "/**\n * An object where the keys correspond to the `name` attribute of the form fields, and the values correspond to the error(s) related to that field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errors?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FormContext",
                      "canonicalReference": "@base-ui-components/react!~FormContext:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "['errors']"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "errors",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Form.Props#onClearErrors:member",
                  "docComment": "/**\n * Event handler called when the `errors` object is cleared.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onClearErrors?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FormContext",
                      "canonicalReference": "@base-ui-components/react!~FormContext:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "['onClearErrors']"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onClearErrors",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Form.State:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface State "
                }
              ],
              "releaseTag": "Public",
              "name": "State",
              "preserveMemberOrder": false,
              "members": [],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!Form:var",
          "docComment": "/**\n * A native form element with consolidated error handling. Renders a `<form>` element.\n *\n * Documentation: [Base UI Form](https://base-ui.com/react/components/form)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Form: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Form.Props",
              "canonicalReference": "@base-ui-components/react!Form.Props:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLFormElement",
              "canonicalReference": "!HTMLFormElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/form/Form.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Form",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Input:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace Input "
            }
          ],
          "fileUrlPath": "src/input/Input.tsx",
          "releaseTag": "Public",
          "name": "Input",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Input.Props:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "BaseUIComponentProps",
                  "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<'input', "
                },
                {
                  "kind": "Reference",
                  "text": "State",
                  "canonicalReference": "@base-ui-components/react!Input.State:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Props",
              "preserveMemberOrder": false,
              "members": [],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Input.State:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface State "
                }
              ],
              "releaseTag": "Public",
              "name": "State",
              "preserveMemberOrder": false,
              "members": [],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!Input:var",
          "docComment": "/**\n * A native input element that automatically works with [Field](https://base-ui.com/react/components/field). Renders an `<input>` element.\n *\n * Documentation: [Base UI Input](https://base-ui.com/react/components/input)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Input: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Input.Props",
              "canonicalReference": "@base-ui-components/react!Input.Props:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLInputElement",
              "canonicalReference": "!HTMLInputElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/input/Input.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Input",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Menu:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/menu/index.ts",
          "releaseTag": "None",
          "name": "Menu",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Arrow:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuArrow "
                }
              ],
              "fileUrlPath": "src/menu/arrow/MenuArrow.tsx",
              "releaseTag": "Public",
              "name": "Arrow",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Arrow.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuArrow.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Arrow.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Arrow.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Arrow.State#open:member",
                      "docComment": "/**\n * Whether the menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Arrow.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Arrow.State#uncentered:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "uncentered: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "uncentered",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Arrow:var",
              "docComment": "/**\n * Displays an element positioned against the menu anchor. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuArrow: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuArrow.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuArrow.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/arrow/MenuArrow.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Arrow",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Backdrop:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuBackdrop "
                }
              ],
              "fileUrlPath": "src/menu/backdrop/MenuBackdrop.tsx",
              "releaseTag": "Public",
              "name": "Backdrop",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Backdrop.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuBackdrop.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Backdrop.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Backdrop.State#open:member",
                      "docComment": "/**\n * Whether the menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Backdrop.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Backdrop:var",
              "docComment": "/**\n * An overlay displayed beneath the menu popup. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuBackdrop: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuBackdrop.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuBackdrop.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/backdrop/MenuBackdrop.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Backdrop",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuCheckboxItem "
                }
              ],
              "fileUrlPath": "src/menu/checkbox-item/MenuCheckboxItem.tsx",
              "releaseTag": "Public",
              "name": "CheckboxItem",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuCheckboxItem.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#checked:member",
                      "docComment": "/**\n * Whether the checkbox item is currently ticked.\n *\n * To render an uncontrolled checkbox item, use the `defaultChecked` prop instead.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "checked?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "checked",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#closeOnClick:member",
                      "docComment": "/**\n * Whether to close the menu when the item is clicked.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "closeOnClick?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "closeOnClick",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#defaultChecked:member",
                      "docComment": "/**\n * Whether the checkbox item is initially ticked.\n *\n * To render a controlled checkbox item, use the `checked` prop instead.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "defaultChecked?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "defaultChecked",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#id:member",
                      "docComment": "/**\n * @ignore\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "id?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "id",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#label:member",
                      "docComment": "/**\n * Overrides the text label to use when the item is matched during keyboard text navigation.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "label?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "label",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#onCheckedChange:member",
                      "docComment": "/**\n * Event handler called when the checkbox item is ticked or unticked.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onCheckedChange?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(checked: boolean, event: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Event",
                          "canonicalReference": "!Event:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ") => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onCheckedChange",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.Props#onClick:member",
                      "docComment": "/**\n * The click handler for the menu item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onClick?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.MouseEventHandler",
                          "canonicalReference": "@types/react!React.MouseEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ">"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onClick",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        disabled: boolean;\n        highlighted: boolean;\n        checked: boolean;\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.CheckboxItem:var",
              "docComment": "/**\n * A menu item that toggles a setting on or off. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuCheckboxItem: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuCheckboxItem.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuCheckboxItem.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/checkbox-item/MenuCheckboxItem.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "CheckboxItem",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuCheckboxItemIndicator "
                }
              ],
              "fileUrlPath": "src/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.tsx",
              "releaseTag": "Public",
              "name": "CheckboxItemIndicator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuCheckboxItemIndicator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the HTML element in the DOM when the checkbox item is not checked.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator.State#checked:member",
                      "docComment": "/**\n * Whether the checkbox item is currently ticked.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "checked: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "checked",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator.State#highlighted:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "highlighted: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "highlighted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.CheckboxItemIndicator:var",
              "docComment": "/**\n * Indicates whether the checkbox item is ticked. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuCheckboxItemIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuCheckboxItemIndicator.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuCheckboxItemIndicator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "CheckboxItemIndicator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Group:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuGroup "
                }
              ],
              "fileUrlPath": "src/menu/group/MenuGroup.tsx",
              "releaseTag": "Public",
              "name": "Group",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Group.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuGroup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Group.Props#children:member",
                      "docComment": "/**\n * The content of the component.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Group.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Group:var",
              "docComment": "/**\n * Groups related menu items with the corresponding label. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuGroup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuGroup.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuGroup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/group/MenuGroup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Group",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.GroupLabel:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuGroupLabel "
                }
              ],
              "fileUrlPath": "src/menu/group-label/MenuGroupLabel.tsx",
              "releaseTag": "Public",
              "name": "GroupLabel",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.GroupLabel.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuGroupLabel.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.GroupLabel.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.GroupLabel:var",
              "docComment": "/**\n * An accessible label that is automatically associated with its parent group. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuGroupLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuGroupLabel.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuGroupLabel.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/group-label/MenuGroupLabel.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "GroupLabel",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Item:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuItem "
                }
              ],
              "fileUrlPath": "src/menu/item/MenuItem.tsx",
              "releaseTag": "Public",
              "name": "Item",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Item.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuItem.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Item.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Item.Props#closeOnClick:member",
                      "docComment": "/**\n * Whether to close the menu when the item is clicked.\n *\n * @default\n *\n * true\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "closeOnClick?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "closeOnClick",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Item.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Item.Props#id:member",
                      "docComment": "/**\n * @ignore\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "id?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "id",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Item.Props#label:member",
                      "docComment": "/**\n * Overrides the text label to use when the item is matched during keyboard text navigation.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "label?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "label",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Item.Props#onClick:member",
                      "docComment": "/**\n * The click handler for the menu item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onClick?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.MouseEventHandler",
                          "canonicalReference": "@types/react!React.MouseEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ">"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onClick",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Menu.Item.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        disabled: boolean;\n        highlighted: boolean;\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Item:var",
              "docComment": "/**\n * An individual interactive item in the menu. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuItem: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuItem.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuItem.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/item/MenuItem.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Item",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Popup:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuPopup "
                }
              ],
              "fileUrlPath": "src/menu/popup/MenuPopup.tsx",
              "releaseTag": "Public",
              "name": "Popup",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Popup.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuPopup.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Popup.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Popup.Props#id:member",
                      "docComment": "/**\n * @ignore\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "id?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "id",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Menu.Popup.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        transitionStatus: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TransitionStatus",
                      "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";\n        side: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Side",
                      "canonicalReference": "@base-ui-components/react!~Side:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";\n        align: 'start' | 'end' | 'center';\n        open: boolean;\n        nested: boolean;\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Popup:var",
              "docComment": "/**\n * A container for the menu items. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuPopup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuPopup.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuPopup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/popup/MenuPopup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Popup",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!Menu.Portal:function(1)",
              "docComment": "/**\n * A portal element that moves the popup to a different part of the DOM. By default, the portal element is appended to `<body>`.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare function MenuPortal(props: "
                },
                {
                  "kind": "Reference",
                  "text": "MenuPortal.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuPortal.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.JSX.Element",
                  "canonicalReference": "@types/react!React.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/menu/portal/MenuPortal.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Portal"
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Portal:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuPortal "
                }
              ],
              "fileUrlPath": "src/menu/portal/MenuPortal.tsx",
              "releaseTag": "Public",
              "name": "Portal",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Portal.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Portal.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Portal.Props#container:member",
                      "docComment": "/**\n * A parent element to render the portal element into.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "container?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null | "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "container",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 7
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Portal.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the portal mounted in the DOM while the popup is hidden.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@base-ui-components/react!Menu.Portal.propTypes:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "propTypes: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    }
                  ],
                  "isReadonly": false,
                  "releaseTag": "Public",
                  "name": "propTypes",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Positioner:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuPositioner "
                }
              ],
              "fileUrlPath": "src/menu/positioner/MenuPositioner.tsx",
              "releaseTag": "Public",
              "name": "Positioner",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Positioner.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "useMenuPositioner.SharedParameters",
                      "canonicalReference": "@base-ui-components/react!~useMenuPositioner.SharedParameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuPositioner.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    },
                    {
                      "startIndex": 3,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Positioner.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Positioner.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Positioner.State#anchorHidden:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "anchorHidden: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "anchorHidden",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Positioner.State#nested:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "nested: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "nested",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Positioner.State#open:member",
                      "docComment": "/**\n * Whether the menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Positioner.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Positioner:var",
              "docComment": "/**\n * Positions the menu popup against the trigger. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuPositioner: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuPositioner.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuPositioner.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/positioner/MenuPositioner.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Positioner",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.RadioGroup:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MemoizedMenuRadioGroup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.NamedExoticComponent",
                  "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuRadioGroup.Props",
                  "canonicalReference": "@base-ui-components/react!~MenuRadioGroup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/radio-group/MenuRadioGroup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "RadioGroup",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.RadioItem:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuRadioItem "
                }
              ],
              "fileUrlPath": "src/menu/radio-item/MenuRadioItem.tsx",
              "releaseTag": "Public",
              "name": "RadioItem",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.RadioItem.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuRadioItem.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItem.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItem.Props#closeOnClick:member",
                      "docComment": "/**\n * Whether to close the menu when the item is clicked.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "closeOnClick?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "closeOnClick",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItem.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItem.Props#id:member",
                      "docComment": "/**\n * @ignore\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "id?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "id",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItem.Props#label:member",
                      "docComment": "/**\n * Overrides the text label to use when the item is matched during keyboard text navigation.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "label?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "label",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItem.Props#onClick:member",
                      "docComment": "/**\n * The click handler for the menu item.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onClick?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.MouseEventHandler",
                          "canonicalReference": "@types/react!React.MouseEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ">"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onClick",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItem.Props#value:member",
                      "docComment": "/**\n * Value of the radio item. This is the value that will be set in the MenuRadioGroup when the item is selected.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value: "
                        },
                        {
                          "kind": "Content",
                          "text": "any"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Menu.RadioItem.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        disabled: boolean;\n        highlighted: boolean;\n        checked: boolean;\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.RadioItem:var",
              "docComment": "/**\n * A menu item that works like a radio button in a given group. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuRadioItem: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuRadioItem.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuRadioItem.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/radio-item/MenuRadioItem.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "RadioItem",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuRadioItemIndicator "
                }
              ],
              "fileUrlPath": "src/menu/radio-item-indicator/MenuRadioItemIndicator.tsx",
              "releaseTag": "Public",
              "name": "RadioItemIndicator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuRadioItemIndicator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the HTML element in the DOM when the radio item is inactive.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator.State#checked:member",
                      "docComment": "/**\n * Whether the radio item is currently selected.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "checked: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "checked",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator.State#highlighted:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "highlighted: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "highlighted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.RadioItemIndicator:var",
              "docComment": "/**\n * Indicates whether the radio item is selected. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuRadioItemIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuRadioItemIndicator.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuRadioItemIndicator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/radio-item-indicator/MenuRadioItemIndicator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "RadioItemIndicator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuRoot "
                }
              ],
              "fileUrlPath": "src/menu/root/MenuRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Root.Actions:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Actions "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Actions",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Actions#unmount:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "unmount: "
                        },
                        {
                          "kind": "Content",
                          "text": "() => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "unmount",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#actionsRef:member",
                      "docComment": "/**\n * A ref to imperative actions.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "actionsRef?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<{\n            unmount: () => void;\n        }>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "actionsRef",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#closeParentOnEsc:member",
                      "docComment": "/**\n * When in a submenu, determines whether pressing the Escape key closes the entire menu, or only the current child menu.\n *\n * @default\n *\n * true\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "closeParentOnEsc?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "closeParentOnEsc",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#defaultOpen:member",
                      "docComment": "/**\n * Whether the menu is initially open.\n *\n * To render a controlled menu, use the `open` prop instead.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "defaultOpen?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "defaultOpen",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#delay:member",
                      "docComment": "/**\n * How long to wait before the menu may be opened on hover. Specified in milliseconds.\n *\n * Requires the `openOnHover` prop.\n *\n * @default\n *\n * 100\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "delay?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "delay",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#loop:member",
                      "docComment": "/**\n * Whether to loop keyboard focus back to the first item when the end of the list is reached while using the arrow keys.\n *\n * @default\n *\n * true\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "loop?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "loop",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#modal:member",
                      "docComment": "/**\n * Whether the menu should prevent outside clicks and lock page scroll when open.\n *\n * @default\n *\n * true\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "modal?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "modal",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#onOpenChange:member",
                      "docComment": "/**\n * Event handler called when the menu is opened or closed.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onOpenChange?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(open: boolean, event?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Event",
                          "canonicalReference": "!Event:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ", reason?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "OpenChangeReason",
                          "canonicalReference": "@base-ui-components/react!~OpenChangeReason:type"
                        },
                        {
                          "kind": "Content",
                          "text": ") => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onOpenChange",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#onOpenChangeComplete:member",
                      "docComment": "/**\n * Event handler called after any animations complete when the menu is closed.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onOpenChangeComplete?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(open: boolean) => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onOpenChangeComplete",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#open:member",
                      "docComment": "/**\n * Whether the menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#openOnHover:member",
                      "docComment": "/**\n * Whether the menu should also open when the trigger is hovered.\n *\n * Defaults to `true` for nested menus.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "openOnHover?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "openOnHover",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Root.Props#orientation:member",
                      "docComment": "/**\n * The visual orientation of the menu. Controls whether roving focus uses up/down or left/right arrow keys.\n *\n * @default\n *\n * 'vertical'\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "MenuOrientation",
                          "canonicalReference": "@base-ui-components/react!~MenuOrientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Root:var",
              "docComment": "/**\n * Groups all parts of the menu. Doesn’t render its own HTML element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FC",
                  "canonicalReference": "@types/react!React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/menu/root/MenuRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Separator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace Separator "
                }
              ],
              "fileUrlPath": "src/separator/Separator.tsx",
              "releaseTag": "Public",
              "name": "Separator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Separator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Separator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Separator.Props#orientation:member",
                      "docComment": "/**\n * The orientation of the separator.\n *\n * @default\n *\n * 'horizontal'\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Orientation",
                          "canonicalReference": "@base-ui-components/react!~Orientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Separator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Separator.State#orientation:member",
                      "docComment": "/**\n * The orientation of the separator.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Orientation",
                          "canonicalReference": "@base-ui-components/react!~Orientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Separator:var",
              "docComment": "/**\n * A separator element accessible to screen readers. Renders a `<div>` element.\n *\n * Documentation: [Base UI Separator](https://base-ui.com/react/components/separator)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Separator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Separator.Props",
                  "canonicalReference": "@base-ui-components/react!Separator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/separator/Separator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Separator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuSubmenuTrigger "
                }
              ],
              "fileUrlPath": "src/menu/submenu-trigger/MenuSubmenuTrigger.tsx",
              "releaseTag": "Public",
              "name": "SubmenuTrigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuSubmenuTrigger.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.Props#id:member",
                      "docComment": "/**\n * @ignore\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "id?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "id",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.Props#label:member",
                      "docComment": "/**\n * Overrides the text label to use when the item is matched during keyboard text navigation.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "label?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "label",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.Props#onClick:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onClick?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.MouseEventHandler",
                          "canonicalReference": "@types/react!React.MouseEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ">"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onClick",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.State#highlighted:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "highlighted: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "highlighted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger.State#open:member",
                      "docComment": "/**\n * Whether the menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.SubmenuTrigger:var",
              "docComment": "/**\n * A menu item that opens a submenu. Renders a `<div>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuSubmenuTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuSubmenuTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuSubmenuTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/submenu-trigger/MenuSubmenuTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "SubmenuTrigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Menu.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace MenuTrigger "
                }
              ],
              "fileUrlPath": "src/menu/trigger/MenuTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Menu.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Menu.MenuTrigger.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Trigger.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Menu.Trigger.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Menu.Trigger.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        open: boolean;\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Menu.Trigger:var",
              "docComment": "/**\n * A button that opens the menu. Renders a `<button>` element.\n *\n * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MenuTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MenuTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!Menu.MenuTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/menu/trigger/MenuTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!MIN_THUMB_SIZE:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MIN_THUMB_SIZE = "
            },
            {
              "kind": "Content",
              "text": "16"
            }
          ],
          "fileUrlPath": "src/scroll-area/constants.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "MIN_THUMB_SIZE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!NumberField:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/number-field/index.ts",
          "releaseTag": "None",
          "name": "NumberField",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!NumberField.Decrement:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace NumberFieldDecrement "
                }
              ],
              "fileUrlPath": "src/number-field/decrement/NumberFieldDecrement.tsx",
              "releaseTag": "Public",
              "name": "Decrement",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Decrement.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldDecrement.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Decrement.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "NumberFieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!NumberField.Decrement:var",
              "docComment": "/**\n * A stepper button that decreases the field value when clicked. Renders an `<button>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NumberFieldDecrement: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NumberFieldDecrement.Props",
                  "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldDecrement.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/number-field/decrement/NumberFieldDecrement.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Decrement",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!NumberField.Group:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace NumberFieldGroup "
                }
              ],
              "fileUrlPath": "src/number-field/group/NumberFieldGroup.tsx",
              "releaseTag": "Public",
              "name": "Group",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Group.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldGroup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Group.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "NumberFieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!NumberField.Group:var",
              "docComment": "/**\n * Groups the input with the increment and decrement buttons. Renders a `<div>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NumberFieldGroup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NumberFieldGroup.Props",
                  "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldGroup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/number-field/group/NumberFieldGroup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Group",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!NumberField.Increment:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace NumberFieldIncrement "
                }
              ],
              "fileUrlPath": "src/number-field/increment/NumberFieldIncrement.tsx",
              "releaseTag": "Public",
              "name": "Increment",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Increment.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldIncrement.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Increment.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "NumberFieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!NumberField.Increment:var",
              "docComment": "/**\n * A stepper button that increases the field value when clicked. Renders an `<button>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NumberFieldIncrement: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NumberFieldIncrement.Props",
                  "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldIncrement.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/number-field/increment/NumberFieldIncrement.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Increment",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!NumberField.Input:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace NumberFieldInput "
                }
              ],
              "fileUrlPath": "src/number-field/input/NumberFieldInput.tsx",
              "releaseTag": "Public",
              "name": "Input",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Input.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'input', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldInput.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Input.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "NumberFieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!NumberField.Input:var",
              "docComment": "/**\n * The native input control in the number field. Renders an `<input>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NumberFieldInput: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NumberFieldInput.Props",
                  "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldInput.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLInputElement",
                  "canonicalReference": "!HTMLInputElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/number-field/input/NumberFieldInput.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Input",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!NumberField.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace NumberFieldRoot "
                }
              ],
              "fileUrlPath": "src/number-field/root/NumberFieldRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "useNumberFieldRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useNumberFieldRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'onChange' | 'defaultValue'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    },
                    {
                      "startIndex": 3,
                      "endIndex": 9
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "FieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.Root.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.Root.State#inputValue:member",
                      "docComment": "/**\n * The formatted string value presented in the input element.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "inputValue: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "inputValue",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.Root.State#invalid:member",
                      "docComment": "/**\n * Whether the field is currently invalid.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "invalid: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "invalid",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.Root.State#readOnly:member",
                      "docComment": "/**\n * Whether the user should be unable to change the field value.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "readOnly: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "readOnly",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.Root.State#required:member",
                      "docComment": "/**\n * Whether the user must enter a value before submitting a form.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "required: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "required",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.Root.State#scrubbing:member",
                      "docComment": "/**\n * Whether the user is currently scrubbing the field.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "scrubbing: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "scrubbing",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.Root.State#value:member",
                      "docComment": "/**\n * The raw numeric value of the field.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value: "
                        },
                        {
                          "kind": "Content",
                          "text": "number | null"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!NumberField.Root:var",
              "docComment": "/**\n * Groups all parts of the number field and manages its state. Renders a `<div>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NumberFieldRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NumberFieldRoot.Props",
                  "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/number-field/root/NumberFieldRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!NumberField.ScrubArea:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace NumberFieldScrubArea "
                }
              ],
              "fileUrlPath": "src/number-field/scrub-area/NumberFieldScrubArea.tsx",
              "releaseTag": "Public",
              "name": "ScrubArea",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.ScrubArea.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldScrubArea.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.ScrubArea.Props#direction:member",
                      "docComment": "/**\n * Cursor movement direction in the scrub area.\n *\n * @default\n *\n * 'horizontal'\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "direction?: "
                        },
                        {
                          "kind": "Content",
                          "text": "'horizontal' | 'vertical'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "direction",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.ScrubArea.Props#pixelSensitivity:member",
                      "docComment": "/**\n * Determines how many pixels the cursor must move before the value changes. A higher value will make scrubbing less sensitive.\n *\n * @default\n *\n * 2\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "pixelSensitivity?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "pixelSensitivity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!NumberField.ScrubArea.Props#teleportDistance:member",
                      "docComment": "/**\n * If specified, determines the distance that the cursor may move from the center of the scrub area before it will loop back around.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "teleportDistance?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number | undefined"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "teleportDistance",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.ScrubArea.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "NumberFieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!NumberField.ScrubArea:var",
              "docComment": "/**\n * An interactive area where the user can click and drag to change the field value. Renders a `<div>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NumberFieldScrubArea: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NumberFieldScrubArea.Props",
                  "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldScrubArea.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/number-field/scrub-area/NumberFieldScrubArea.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "ScrubArea",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!NumberField.ScrubAreaCursor:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace NumberFieldScrubAreaCursor "
                }
              ],
              "fileUrlPath": "src/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.tsx",
              "releaseTag": "Public",
              "name": "ScrubAreaCursor",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.ScrubAreaCursor.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldScrubAreaCursor.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!NumberField.ScrubAreaCursor.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "NumberFieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!NumberField.ScrubAreaCursor:var",
              "docComment": "/**\n * A custom element to display instead of the native cursor while using the scrub area. Renders a `<span>` element.\n *\n * This component uses the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API), which may prompt the browser to display a related notification. It is disabled in Safari to avoid a layout shift that this notification causes there.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NumberFieldScrubAreaCursor: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NumberFieldScrubAreaCursor.Props",
                  "canonicalReference": "@base-ui-components/react!NumberField.NumberFieldScrubAreaCursor.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "ScrubAreaCursor",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Popover:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/popover/index.ts",
          "releaseTag": "None",
          "name": "Popover",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Arrow:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverArrow "
                }
              ],
              "fileUrlPath": "src/popover/arrow/PopoverArrow.tsx",
              "releaseTag": "Public",
              "name": "Arrow",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Arrow.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Popover.PopoverArrow.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Arrow.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Arrow.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Arrow.State#open:member",
                      "docComment": "/**\n * Whether the popover is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Arrow.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Arrow.State#uncentered:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "uncentered: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "uncentered",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Arrow:var",
              "docComment": "/**\n * Displays an element positioned against the popover anchor. Renders a `<div>` element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverArrow: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverArrow.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverArrow.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/popover/arrow/PopoverArrow.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Arrow",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Backdrop:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverBackdrop "
                }
              ],
              "fileUrlPath": "src/popover/backdrop/PopoverBackdrop.tsx",
              "releaseTag": "Public",
              "name": "Backdrop",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Backdrop.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Popover.PopoverBackdrop.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Backdrop.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Backdrop.State#open:member",
                      "docComment": "/**\n * Whether the popover is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Backdrop.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Backdrop:var",
              "docComment": "/**\n * An overlay displayed beneath the popover. Renders a `<div>` element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverBackdrop: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverBackdrop.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverBackdrop.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/popover/backdrop/PopoverBackdrop.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Backdrop",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Close:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverClose "
                }
              ],
              "fileUrlPath": "src/popover/close/PopoverClose.tsx",
              "releaseTag": "Public",
              "name": "Close",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Close.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Popover.PopoverClose.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Close.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Close:var",
              "docComment": "/**\n * A button that closes the popover. Renders a `<button>` element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverClose: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverClose.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverClose.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/popover/close/PopoverClose.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Close",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Description:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverDescription "
                }
              ],
              "fileUrlPath": "src/popover/description/PopoverDescription.tsx",
              "releaseTag": "Public",
              "name": "Description",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Description.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'p', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Popover.PopoverDescription.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Description.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Description:var",
              "docComment": "/**\n * A paragraph with additional information about the popover. Renders a `<p>` element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverDescription.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverDescription.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLParagraphElement",
                  "canonicalReference": "!HTMLParagraphElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/popover/description/PopoverDescription.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Description",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Popup:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverPopup "
                }
              ],
              "fileUrlPath": "src/popover/popup/PopoverPopup.tsx",
              "releaseTag": "Public",
              "name": "Popup",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Popup.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Popover.PopoverPopup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Popup.Props#finalFocus:member",
                      "docComment": "/**\n * Determines the element to focus when the popover is closed. By default, focus returns to the trigger.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "finalFocus?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "finalFocus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Popup.Props#initialFocus:member",
                      "docComment": "/**\n * Determines the element to focus when the popover is opened. By default, the first focusable element is focused.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "initialFocus?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null> | ((interactionType: "
                        },
                        {
                          "kind": "Reference",
                          "text": "InteractionType",
                          "canonicalReference": "@base-ui-components/react!~InteractionType:type"
                        },
                        {
                          "kind": "Content",
                          "text": ") => "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>)"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "initialFocus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 11
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Popup.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Popup.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Popup.State#open:member",
                      "docComment": "/**\n * Whether the popover is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Popup.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Popup.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Popup:var",
              "docComment": "/**\n * A container for the popover contents. Renders a `<div>` element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverPopup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverPopup.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverPopup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/popover/popup/PopoverPopup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Popup",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!Popover.Portal:function(1)",
              "docComment": "/**\n * A portal element that moves the popup to a different part of the DOM. By default, the portal element is appended to `<body>`.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare function PopoverPortal(props: "
                },
                {
                  "kind": "Reference",
                  "text": "PopoverPortal.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverPortal.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.JSX.Element",
                  "canonicalReference": "@types/react!React.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/popover/portal/PopoverPortal.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Portal"
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Portal:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverPortal "
                }
              ],
              "fileUrlPath": "src/popover/portal/PopoverPortal.tsx",
              "releaseTag": "Public",
              "name": "Portal",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Portal.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Portal.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Portal.Props#container:member",
                      "docComment": "/**\n * A parent element to render the portal element into.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "container?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null | "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "container",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 7
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Portal.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the portal mounted in the DOM while the popup is hidden.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@base-ui-components/react!Popover.Portal.propTypes:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "propTypes: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    }
                  ],
                  "isReadonly": false,
                  "releaseTag": "Public",
                  "name": "propTypes",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Positioner:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverPositioner "
                }
              ],
              "fileUrlPath": "src/popover/positioner/PopoverPositioner.tsx",
              "releaseTag": "Public",
              "name": "Positioner",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Positioner.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "usePopoverPositioner.SharedParameters",
                      "canonicalReference": "@base-ui-components/react!~usePopoverPositioner.SharedParameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Popover.PopoverPositioner.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    },
                    {
                      "startIndex": 3,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Positioner.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Positioner.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Positioner.State#anchorHidden:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "anchorHidden: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "anchorHidden",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Positioner.State#open:member",
                      "docComment": "/**\n * Whether the popover is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Positioner.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Positioner:var",
              "docComment": "/**\n * Positions the popover against the trigger. Renders a `<div>` element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverPositioner: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverPositioner.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverPositioner.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/popover/positioner/PopoverPositioner.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Positioner",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverRoot "
                }
              ],
              "fileUrlPath": "src/popover/root/PopoverRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Popover.Root.Actions:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type Actions = "
                    },
                    {
                      "kind": "Reference",
                      "text": "usePopoverRoot.Actions",
                      "canonicalReference": "@base-ui-components/react!~usePopoverRoot.Actions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Actions",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "usePopoverRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~usePopoverRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Root.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Root:var",
              "docComment": "/**\n * Groups all parts of the popover. Doesn’t render its own HTML element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FC",
                  "canonicalReference": "@types/react!React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/popover/root/PopoverRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Title:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverTitle "
                }
              ],
              "fileUrlPath": "src/popover/title/PopoverTitle.tsx",
              "releaseTag": "Public",
              "name": "Title",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Title.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Popover.PopoverTitle.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Title.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Title:var",
              "docComment": "/**\n * A heading that labels the popover. Renders an `<h2>` element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverTitle: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverTitle.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverTitle.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLHeadingElement",
                  "canonicalReference": "!HTMLHeadingElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/popover/title/PopoverTitle.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Title",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Popover.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PopoverTrigger "
                }
              ],
              "fileUrlPath": "src/popover/trigger/PopoverTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Popover.PopoverTrigger.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Popover.Trigger.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Popover.Trigger.State#open:member",
                      "docComment": "/**\n * Whether the popover is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Popover.Trigger:var",
              "docComment": "/**\n * A button that opens the popover. Renders a `<button>` element.\n *\n * Documentation: [Base UI Popover](https://base-ui.com/react/components/popover)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PopoverTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopoverTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!Popover.PopoverTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                }
              ],
              "fileUrlPath": "src/popover/trigger/PopoverTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!PreviewCard:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/preview-card/index.ts",
          "releaseTag": "None",
          "name": "PreviewCard",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Arrow:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PreviewCardArrow "
                }
              ],
              "fileUrlPath": "src/preview-card/arrow/PreviewCardArrow.tsx",
              "releaseTag": "Public",
              "name": "Arrow",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Arrow.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardArrow.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Arrow.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Arrow.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Arrow.State#open:member",
                      "docComment": "/**\n * Whether the preview card is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Arrow.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Arrow.State#uncentered:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "uncentered: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "uncentered",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Arrow:var",
              "docComment": "/**\n * Displays an element positioned against the preview card anchor. Renders a `<div>` element.\n *\n * Documentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PreviewCardArrow: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PreviewCardArrow.Props",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardArrow.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/preview-card/arrow/PreviewCardArrow.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Arrow",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Backdrop:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PreviewCardBackdrop "
                }
              ],
              "fileUrlPath": "src/preview-card/backdrop/PreviewCardBackdrop.tsx",
              "releaseTag": "Public",
              "name": "Backdrop",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Backdrop.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardBackdrop.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Backdrop.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Backdrop.State#open:member",
                      "docComment": "/**\n * Whether the preview card is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Backdrop.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Backdrop:var",
              "docComment": "/**\n * An overlay displayed beneath the popup. Renders a `<div>` element.\n *\n * Documentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PreviewCardBackdrop: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PreviewCardBackdrop.Props",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardBackdrop.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/preview-card/backdrop/PreviewCardBackdrop.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Backdrop",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Popup:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PreviewCardPopup "
                }
              ],
              "fileUrlPath": "src/preview-card/popup/PreviewCardPopup.tsx",
              "releaseTag": "Public",
              "name": "Popup",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Popup.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardPopup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Popup.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Popup.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Popup.State#open:member",
                      "docComment": "/**\n * Whether the preview card is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Popup.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Popup.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Popup:var",
              "docComment": "/**\n * A container for the preview card contents. Renders a `<div>` element.\n *\n * Documentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PreviewCardPopup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PreviewCardPopup.Props",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardPopup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/preview-card/popup/PreviewCardPopup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Popup",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Portal:function(1)",
              "docComment": "/**\n * A portal element that moves the popup to a different part of the DOM. By default, the portal element is appended to `<body>`.\n *\n * Documentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare function PreviewCardPortal(props: "
                },
                {
                  "kind": "Reference",
                  "text": "PreviewCardPortal.Props",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardPortal.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.JSX.Element",
                  "canonicalReference": "@types/react!React.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/preview-card/portal/PreviewCardPortal.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Portal"
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Portal:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PreviewCardPortal "
                }
              ],
              "fileUrlPath": "src/preview-card/portal/PreviewCardPortal.tsx",
              "releaseTag": "Public",
              "name": "Portal",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Portal.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Portal.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Portal.Props#container:member",
                      "docComment": "/**\n * A parent element to render the portal element into.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "container?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null | "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "container",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 7
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Portal.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the portal mounted in the DOM while the popup is hidden.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Portal.propTypes:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "propTypes: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    }
                  ],
                  "isReadonly": false,
                  "releaseTag": "Public",
                  "name": "propTypes",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Positioner:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PreviewCardPositioner "
                }
              ],
              "fileUrlPath": "src/preview-card/positioner/PreviewCardPositioner.tsx",
              "releaseTag": "Public",
              "name": "Positioner",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Positioner.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "usePreviewCardPositioner.SharedParameters",
                      "canonicalReference": "@base-ui-components/react!~usePreviewCardPositioner.SharedParameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardPositioner.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    },
                    {
                      "startIndex": 3,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Positioner.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Positioner.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Positioner.State#anchorHidden:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "anchorHidden: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "anchorHidden",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Positioner.State#open:member",
                      "docComment": "/**\n * Whether the preview card is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Positioner.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Positioner:var",
              "docComment": "/**\n * Positions the popup against the trigger. Renders a `<div>` element.\n *\n * Documentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PreviewCardPositioner: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PreviewCardPositioner.Props",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardPositioner.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/preview-card/positioner/PreviewCardPositioner.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Positioner",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PreviewCardRoot "
                }
              ],
              "fileUrlPath": "src/preview-card/root/PreviewCardRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Root.Actions:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type Actions = "
                    },
                    {
                      "kind": "Reference",
                      "text": "usePreviewCardRoot.Actions",
                      "canonicalReference": "@base-ui-components/react!~usePreviewCardRoot.Actions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Actions",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "usePreviewCardRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~usePreviewCardRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Root.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Root:var",
              "docComment": "/**\n * Groups all parts of the preview card. Doesn’t render its own HTML element.\n *\n * Documentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PreviewCardRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FC",
                  "canonicalReference": "@types/react!React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PreviewCardRoot.Props",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/preview-card/root/PreviewCardRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace PreviewCardTrigger "
                }
              ],
              "fileUrlPath": "src/preview-card/trigger/PreviewCardTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'a', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardTrigger.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.Trigger.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!PreviewCard.Trigger.State#open:member",
                      "docComment": "/**\n * Whether the preview card is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!PreviewCard.Trigger:var",
              "docComment": "/**\n * A link that opens the preview card. Renders an `<a>` element.\n *\n * Documentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PreviewCardTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PreviewCardTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!PreviewCard.PreviewCardTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLAnchorElement",
                  "canonicalReference": "!HTMLAnchorElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/preview-card/trigger/PreviewCardTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Progress:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/progress/index.ts",
          "releaseTag": "None",
          "name": "Progress",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Progress.Indicator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ProgressIndicator "
                }
              ],
              "fileUrlPath": "src/progress/indicator/ProgressIndicator.tsx",
              "releaseTag": "Public",
              "name": "Indicator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Progress.Indicator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Progress.ProgressIndicator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Progress.Indicator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "ProgressRoot.State",
                      "canonicalReference": "@base-ui-components/react!Progress.ProgressRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Progress.Indicator:var",
              "docComment": "/**\n * Visualizes the completion status of the task. Renders a `<div>` element.\n *\n * Documentation: [Base UI Progress](https://base-ui.com/react/components/progress)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProgressIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProgressIndicator.Props",
                  "canonicalReference": "@base-ui-components/react!Progress.ProgressIndicator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/progress/indicator/ProgressIndicator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Indicator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Progress.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ProgressRoot "
                }
              ],
              "fileUrlPath": "src/progress/root/ProgressRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Progress.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "useProgressRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useProgressRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Progress.ProgressRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    },
                    {
                      "startIndex": 3,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Progress.Root.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        max: number;\n        min: number;\n        status: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ProgressStatus",
                      "canonicalReference": "@base-ui-components/react!Progress.ProgressStatus:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Progress.Root:var",
              "docComment": "/**\n * Groups all parts of the progress bar and provides the task completion status to screen readers. Renders a `<div>` element.\n *\n * Documentation: [Base UI Progress](https://base-ui.com/react/components/progress)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProgressRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProgressRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Progress.ProgressRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/progress/root/ProgressRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@base-ui-components/react!Progress.Status:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type ProgressStatus = "
                },
                {
                  "kind": "Content",
                  "text": "'indeterminate' | 'progressing' | 'complete'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/progress/root/useProgressRoot.ts",
              "releaseTag": "Public",
              "name": "Status",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Progress.Track:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ProgressTrack "
                }
              ],
              "fileUrlPath": "src/progress/track/ProgressTrack.tsx",
              "releaseTag": "Public",
              "name": "Track",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Progress.Track.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Progress.ProgressTrack.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Progress.Track.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "ProgressRoot.State",
                      "canonicalReference": "@base-ui-components/react!Progress.ProgressRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Progress.Track:var",
              "docComment": "/**\n * Contains the progress bar indicator. Renders a `<div>` element.\n *\n * Documentation: [Base UI Progress](https://base-ui.com/react/components/progress)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProgressTrack: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProgressTrack.Props",
                  "canonicalReference": "@base-ui-components/react!Progress.ProgressTrack.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/progress/track/ProgressTrack.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Track",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Progress.Value:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ProgressValue "
                }
              ],
              "fileUrlPath": "src/progress/value/ProgressValue.tsx",
              "releaseTag": "Public",
              "name": "Value",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Progress.Value.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Progress.ProgressValue.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'children'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Progress.Value.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Content",
                          "text": "null | ((formattedValue: string | null, value: number | null) => "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ")"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Progress.Value.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "ProgressRoot.State",
                      "canonicalReference": "@base-ui-components/react!Progress.ProgressRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Progress.Value:var",
              "docComment": "/**\n * A text label displaying the current value. Renders a `<span>` element.\n *\n * Documentation: [Base UI Progress](https://base-ui.com/react/components/progress)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProgressValue: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProgressValue.Props",
                  "canonicalReference": "@base-ui-components/react!Progress.ProgressValue.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/progress/value/ProgressValue.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Value",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Radio:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/radio/index.ts",
          "releaseTag": "None",
          "name": "Radio",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Radio.Indicator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace RadioIndicator "
                }
              ],
              "fileUrlPath": "src/radio/indicator/RadioIndicator.tsx",
              "releaseTag": "Public",
              "name": "Indicator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Radio.Indicator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Radio.RadioIndicator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Indicator.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the HTML element in the DOM when the radio button is inactive.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Radio.Indicator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Indicator.State#checked:member",
                      "docComment": "/**\n * Whether the radio button is currently selected.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "checked: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "checked",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Indicator.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Radio.Indicator:var",
              "docComment": "/**\n * Indicates whether the radio button is selected. Renders a `<span>` element.\n *\n * Documentation: [Base UI Radio](https://base-ui.com/react/components/radio)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RadioIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RadioIndicator.Props",
                  "canonicalReference": "@base-ui-components/react!Radio.RadioIndicator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/radio/indicator/RadioIndicator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Indicator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Radio.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace RadioRoot "
                }
              ],
              "fileUrlPath": "src/radio/root/RadioRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Radio.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Radio.RadioRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'value'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Root.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Root.Props#readOnly:member",
                      "docComment": "/**\n * Whether the user should be unable to select the radio button.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "readOnly?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "readOnly",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Root.Props#required:member",
                      "docComment": "/**\n * Whether the user must choose a value before submitting a form.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "required?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "required",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Root.Props#value:member",
                      "docComment": "/**\n * The unique identifying value of the radio in a group.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value: "
                        },
                        {
                          "kind": "Content",
                          "text": "unknown"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Radio.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Root.State#checked:member",
                      "docComment": "/**\n * Whether the radio button is currently selected.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "checked: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "checked",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Root.State#disabled:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Root.State#readOnly:member",
                      "docComment": "/**\n * Whether the user should be unable to select the radio button.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "readOnly: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "readOnly",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Radio.Root.State#required:member",
                      "docComment": "/**\n * Whether the user must choose a value before submitting a form.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "required: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "required",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Radio.Root:var",
              "docComment": "/**\n * Represents the radio button itself. Renders a `<button>` element and a hidden `<input>` beside.\n *\n * Documentation: [Base UI Radio](https://base-ui.com/react/components/radio)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RadioRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RadioRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Radio.RadioRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/radio/root/RadioRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!RadioGroup:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace RadioGroup "
            }
          ],
          "fileUrlPath": "src/radio-group/RadioGroup.tsx",
          "releaseTag": "Public",
          "name": "RadioGroup",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!RadioGroup.Props:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseUIComponentProps",
                  "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<'div', "
                },
                {
                  "kind": "Reference",
                  "text": "State",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.State:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, 'value' | 'defaultValue'>"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Props",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.Props#defaultValue:member",
                  "docComment": "/**\n * The uncontrolled value of the radio button that should be initially selected.\n *\n * To render a controlled radio group, use the `value` prop instead.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "defaultValue?: "
                    },
                    {
                      "kind": "Content",
                      "text": "unknown"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "defaultValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.Props#disabled:member",
                  "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disabled?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "disabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.Props#name:member",
                  "docComment": "/**\n * Identifies the field when a form is submitted.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.Props#onValueChange:member",
                  "docComment": "/**\n * Callback fired when the value changes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onValueChange?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(value: unknown, event: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Event",
                      "canonicalReference": "!Event:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onValueChange",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.Props#readOnly:member",
                  "docComment": "/**\n * Whether the user should be unable to select a different radio button in the group.\n *\n * @default\n *\n * false\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "readOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.Props#required:member",
                  "docComment": "/**\n * Whether the user must choose a value before submitting a form.\n *\n * @default\n *\n * false\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "required?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "required",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.Props#value:member",
                  "docComment": "/**\n * The controlled value of the radio item that should be currently selected.\n *\n * To render an uncontrolled radio group, use the `defaultValue` prop instead.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value?: "
                    },
                    {
                      "kind": "Content",
                      "text": "unknown"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "value",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 7
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!RadioGroup.State:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface State extends "
                },
                {
                  "kind": "Reference",
                  "text": "FieldRoot.State",
                  "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "State",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!RadioGroup.State#readOnly:member",
                  "docComment": "/**\n * Whether the user should be unable to select a different radio button in the group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "readOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!RadioGroup:var",
          "docComment": "/**\n * Provides a shared state to a series of radio buttons. Renders a `<div>` element.\n *\n * Documentation: [Base UI Radio Group](https://base-ui.com/react/components/radio)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "RadioGroup: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RadioGroup.Props",
              "canonicalReference": "@base-ui-components/react!RadioGroup.Props:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/radio-group/RadioGroup.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "RadioGroup",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!SCROLL_TIMEOUT:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "SCROLL_TIMEOUT = "
            },
            {
              "kind": "Content",
              "text": "500"
            }
          ],
          "fileUrlPath": "src/scroll-area/constants.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "SCROLL_TIMEOUT",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!ScrollArea:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/scroll-area/index.ts",
          "releaseTag": "None",
          "name": "ScrollArea",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Corner:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ScrollAreaCorner "
                }
              ],
              "fileUrlPath": "src/scroll-area/corner/ScrollAreaCorner.tsx",
              "releaseTag": "Public",
              "name": "Corner",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Corner.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaCorner.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Corner.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Corner:var",
              "docComment": "/**\n * A small rectangular area that appears at the intersection of horizontal and vertical scrollbars. Renders a `<div>` element.\n *\n * Documentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ScrollAreaCorner: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ScrollAreaCorner.Props",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaCorner.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/scroll-area/corner/ScrollAreaCorner.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Corner",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ScrollAreaRoot "
                }
              ],
              "fileUrlPath": "src/scroll-area/root/ScrollAreaRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Root:var",
              "docComment": "/**\n * Groups all parts of the scroll area. Renders a `<div>` element.\n *\n * Documentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ScrollAreaRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ScrollAreaRoot.Props",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/scroll-area/root/ScrollAreaRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ScrollAreaScrollbar "
                }
              ],
              "fileUrlPath": "src/scroll-area/scrollbar/ScrollAreaScrollbar.tsx",
              "releaseTag": "Public",
              "name": "Scrollbar",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaScrollbar.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the HTML element in the DOM when the viewport isn’t scrollable.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar.Props#orientation:member",
                      "docComment": "/**\n * Whether the scrollbar controls vertical or horizontal scroll.\n *\n * @default\n *\n * 'vertical'\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation?: "
                        },
                        {
                          "kind": "Content",
                          "text": "'vertical' | 'horizontal'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar.State#hovering:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "hovering: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "hovering",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar.State#orientation:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation: "
                        },
                        {
                          "kind": "Content",
                          "text": "'vertical' | 'horizontal'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar.State#scrolling:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "scrolling: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "scrolling",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Scrollbar:var",
              "docComment": "/**\n * A vertical or horizontal scrollbar for the scroll area. Renders a `<div>` element.\n *\n * Documentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ScrollAreaScrollbar: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ScrollAreaScrollbar.Props",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaScrollbar.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/scroll-area/scrollbar/ScrollAreaScrollbar.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Scrollbar",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Thumb:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ScrollAreaThumb "
                }
              ],
              "fileUrlPath": "src/scroll-area/thumb/ScrollAreaThumb.tsx",
              "releaseTag": "Public",
              "name": "Thumb",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Thumb.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaThumb.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Thumb.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.Thumb.State#orientation:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation?: "
                        },
                        {
                          "kind": "Content",
                          "text": "'horizontal' | 'vertical'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Thumb:var",
              "docComment": "/**\n * The draggable part of the the scrollbar that indicates the current scroll position. Renders a `<div>` element.\n *\n * Documentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ScrollAreaThumb: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ScrollAreaThumb.Props",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaThumb.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/scroll-area/thumb/ScrollAreaThumb.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Thumb",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Viewport:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace ScrollAreaViewport "
                }
              ],
              "fileUrlPath": "src/scroll-area/viewport/ScrollAreaViewport.tsx",
              "releaseTag": "Public",
              "name": "Viewport",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Viewport.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaViewport.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.Viewport.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!ScrollArea.Viewport:var",
              "docComment": "/**\n * The actual scrollable container of the scroll area. Renders a `<div>` element.\n *\n * Documentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ScrollAreaViewport: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ScrollAreaViewport.Props",
                  "canonicalReference": "@base-ui-components/react!ScrollArea.ScrollAreaViewport.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/scroll-area/viewport/ScrollAreaViewport.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Viewport",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Select:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/select/index.ts",
          "releaseTag": "None",
          "name": "Select",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Arrow:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectArrow "
                }
              ],
              "fileUrlPath": "src/select/arrow/SelectArrow.tsx",
              "releaseTag": "Public",
              "name": "Arrow",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Arrow.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectArrow.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Arrow.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Arrow.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Arrow.State#open:member",
                      "docComment": "/**\n * Whether the select menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Arrow.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": " | 'none'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Arrow.State#uncentered:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "uncentered: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "uncentered",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Arrow:var",
              "docComment": "/**\n * Displays an element positioned against the select menu anchor. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectArrow: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectArrow.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectArrow.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/arrow/SelectArrow.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Arrow",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Backdrop:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectBackdrop "
                }
              ],
              "fileUrlPath": "src/select/backdrop/SelectBackdrop.tsx",
              "releaseTag": "Public",
              "name": "Backdrop",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Backdrop.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectBackdrop.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Backdrop.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Backdrop.State#open:member",
                      "docComment": "/**\n * Whether the select menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Backdrop.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Backdrop:var",
              "docComment": "/**\n * An overlay displayed beneath the menu popup. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectBackdrop: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectBackdrop.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectBackdrop.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/backdrop/SelectBackdrop.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Backdrop",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Group:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectGroup "
                }
              ],
              "fileUrlPath": "src/select/group/SelectGroup.tsx",
              "releaseTag": "Public",
              "name": "Group",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Group.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectGroup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Group.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Group:var",
              "docComment": "/**\n * Groups related select items with the corresponding label. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectGroup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectGroup.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectGroup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/group/SelectGroup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Group",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.GroupLabel:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectGroupLabel "
                }
              ],
              "fileUrlPath": "src/select/group-label/SelectGroupLabel.tsx",
              "releaseTag": "Public",
              "name": "GroupLabel",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.GroupLabel.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectGroupLabel.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.GroupLabel.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.GroupLabel:var",
              "docComment": "/**\n * An accessible label that is automatically associated with its parent group. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectGroupLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectGroupLabel.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectGroupLabel.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/group-label/SelectGroupLabel.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "GroupLabel",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Icon:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectIcon "
                }
              ],
              "fileUrlPath": "src/select/icon/SelectIcon.tsx",
              "releaseTag": "Public",
              "name": "Icon",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Icon.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectIcon.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Icon.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Icon:var",
              "docComment": "/**\n * An icon that indicates that the trigger button opens a select menu. Renders a `<span>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectIcon: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectIcon.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectIcon.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/icon/SelectIcon.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Icon",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Item:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectItem "
                }
              ],
              "fileUrlPath": "src/select/item/SelectItem.tsx",
              "releaseTag": "Public",
              "name": "Item",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Item.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectItem.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'id'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Item.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Item.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Item.Props#label:member",
                      "docComment": "/**\n * Overrides the text label to use on the trigger when this item is selected and when the item is matched during keyboard text navigation.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "label?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "label",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Item.Props#value:member",
                      "docComment": "/**\n * A unique value that identifies this select item.\n *\n * @default\n *\n * null\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value?: "
                        },
                        {
                          "kind": "Content",
                          "text": "any"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Item.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Item.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Item.State#highlighted:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "highlighted: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "highlighted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Item.State#open:member",
                      "docComment": "/**\n * Whether the select menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Item.State#selected:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "selected: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "selected",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Item:var",
              "docComment": "/**\n * An individual option in the select menu. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectItem: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectItem.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectItem.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/item/SelectItem.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Item",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.ItemIndicator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectItemIndicator "
                }
              ],
              "fileUrlPath": "src/select/item-indicator/SelectItemIndicator.tsx",
              "releaseTag": "Public",
              "name": "ItemIndicator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.ItemIndicator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectItemIndicator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.ItemIndicator.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.ItemIndicator.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the HTML element in the DOM when the item is not selected.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.ItemIndicator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.ItemIndicator.State#selected:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "selected: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "selected",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.ItemIndicator.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.ItemIndicator:var",
              "docComment": "/**\n * Indicates whether the select item is selected. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectItemIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectItemIndicator.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectItemIndicator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/item-indicator/SelectItemIndicator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "ItemIndicator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.ItemText:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectItemText "
                }
              ],
              "fileUrlPath": "src/select/item-text/SelectItemText.tsx",
              "releaseTag": "Public",
              "name": "ItemText",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.ItemText.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectItemText.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.ItemText.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.ItemText:var",
              "docComment": "/**\n * A text label of the select item. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectItemText: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectItemText.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectItemText.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/item-text/SelectItemText.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "ItemText",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Popup:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectPopup "
                }
              ],
              "fileUrlPath": "src/select/popup/SelectPopup.tsx",
              "releaseTag": "Public",
              "name": "Popup",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Popup.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectPopup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Popup.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Popup.Props#id:member",
                      "docComment": "/**\n * @ignore\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "id?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "id",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Popup.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Popup.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Content",
                          "text": "'start' | 'end' | 'center'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Popup.State#open:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Popup.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": " | 'none'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Popup.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Popup:var",
              "docComment": "/**\n * A container for the select items. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectPopup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectPopup.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectPopup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/popup/SelectPopup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Popup",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!Select.Portal:function(1)",
              "docComment": "/**\n * A portal element that moves the popup to a different part of the DOM. By default, the portal element is appended to `<body>`.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare function SelectPortal(props: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectPortal.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectPortal.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.JSX.Element",
                  "canonicalReference": "@types/react!React.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/select/portal/SelectPortal.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Portal"
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Portal:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectPortal "
                }
              ],
              "fileUrlPath": "src/select/portal/SelectPortal.tsx",
              "releaseTag": "Public",
              "name": "Portal",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Portal.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Portal.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Portal.Props#container:member",
                      "docComment": "/**\n * A parent element to render the portal element into.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "container?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null | "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "container",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 7
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@base-ui-components/react!Select.Portal.propTypes:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "propTypes: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    }
                  ],
                  "isReadonly": false,
                  "releaseTag": "Public",
                  "name": "propTypes",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Positioner:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectPositioner "
                }
              ],
              "fileUrlPath": "src/select/positioner/SelectPositioner.tsx",
              "releaseTag": "Public",
              "name": "Positioner",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Positioner.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "useSelectPositioner.SharedParameters",
                      "canonicalReference": "@base-ui-components/react!~useSelectPositioner.SharedParameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectPositioner.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    },
                    {
                      "startIndex": 3,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Positioner.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Positioner.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Positioner.State#anchorHidden:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "anchorHidden: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "anchorHidden",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Positioner.State#open:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Positioner.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": " | 'none'"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Positioner:var",
              "docComment": "/**\n * Positions the select menu popup against the trigger. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectPositioner: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectPositioner.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectPositioner.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/positioner/SelectPositioner.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Positioner",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Select.Root:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SelectRoot "
                }
              ],
              "fileUrlPath": "src/select/root/SelectRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "CallSignature",
                  "canonicalReference": "@base-ui-components/react!Select.Root:call(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "<Value>(props: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SelectRoot.Props",
                      "canonicalReference": "@base-ui-components/react!Select.SelectRoot.Props:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<Value>"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "React.JSX.Element",
                      "canonicalReference": "@types/react!React.JSX.Element:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "props",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      },
                      "isOptional": false
                    }
                  ],
                  "typeParameters": [
                    {
                      "typeParameterName": "Value",
                      "constraintTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      },
                      "defaultTypeTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    }
                  ]
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Select.Root#propTypes:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "propTypes?: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "propTypes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectRoot "
                }
              ],
              "fileUrlPath": "src/select/root/SelectRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Select.Root.Actions:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type Actions = "
                    },
                    {
                      "kind": "Reference",
                      "text": "useSelectRoot.Actions",
                      "canonicalReference": "@base-ui-components/react!~useSelectRoot.Actions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Actions",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props<Value> extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "useSelectRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useSelectRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<Value>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "typeParameters": [
                    {
                      "typeParameterName": "Value",
                      "constraintTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      },
                      "defaultTypeTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    }
                  ],
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Root.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 3
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Root:var",
              "docComment": "/**\n * Groups all parts of the select. Doesn’t render its own HTML element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectRoot",
                  "canonicalReference": "@base-ui-components/react!Select.SelectRoot:interface"
                }
              ],
              "fileUrlPath": "src/select/root/SelectRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.ScrollDownArrow:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectScrollDownArrow "
                }
              ],
              "fileUrlPath": "src/select/scroll-down-arrow/SelectScrollDownArrow.tsx",
              "releaseTag": "Public",
              "name": "ScrollDownArrow",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.ScrollDownArrow.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectScrollDownArrow.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.ScrollDownArrow.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the HTML element in the DOM while the select menu is not scrollable.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.ScrollDownArrow.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.ScrollDownArrow:var",
              "docComment": "/**\n * An element that scrolls the select menu down when hovered. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectScrollDownArrow: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectScrollDownArrow.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectScrollDownArrow.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/scroll-down-arrow/SelectScrollDownArrow.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "ScrollDownArrow",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.ScrollUpArrow:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectScrollUpArrow "
                }
              ],
              "fileUrlPath": "src/select/scroll-up-arrow/SelectScrollUpArrow.tsx",
              "releaseTag": "Public",
              "name": "ScrollUpArrow",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.ScrollUpArrow.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectScrollUpArrow.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.ScrollUpArrow.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the HTML element in the DOM while the select menu is not scrollable.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.ScrollUpArrow.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.ScrollUpArrow:var",
              "docComment": "/**\n * An element that scrolls the select menu down when hovered. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectScrollUpArrow: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectScrollUpArrow.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectScrollUpArrow.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/scroll-up-arrow/SelectScrollUpArrow.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "ScrollUpArrow",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Separator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace Separator "
                }
              ],
              "fileUrlPath": "src/separator/Separator.tsx",
              "releaseTag": "Public",
              "name": "Separator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Separator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Separator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Separator.Props#orientation:member",
                      "docComment": "/**\n * The orientation of the separator.\n *\n * @default\n *\n * 'horizontal'\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Orientation",
                          "canonicalReference": "@base-ui-components/react!~Orientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Separator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Separator.State#orientation:member",
                      "docComment": "/**\n * The orientation of the separator.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Orientation",
                          "canonicalReference": "@base-ui-components/react!~Orientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Separator:var",
              "docComment": "/**\n * A separator element accessible to screen readers. Renders a `<div>` element.\n *\n * Documentation: [Base UI Separator](https://base-ui.com/react/components/separator)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Separator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Separator.Props",
                  "canonicalReference": "@base-ui-components/react!Separator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/separator/Separator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Separator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectTrigger "
                }
              ],
              "fileUrlPath": "src/select/trigger/SelectTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectTrigger.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Trigger.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Trigger.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Trigger.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Trigger.State#open:member",
                      "docComment": "/**\n * Whether the select menu is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Trigger:var",
              "docComment": "/**\n * A button that opens the select menu. Renders a `<div>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/trigger/SelectTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Select.Value:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SelectValue "
                }
              ],
              "fileUrlPath": "src/select/value/SelectValue.tsx",
              "releaseTag": "Public",
              "name": "Value",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Value.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Select.SelectValue.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'children'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Value.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Content",
                          "text": "null | ((value: string) => "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ")"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Select.Value.Props#placeholder:member",
                      "docComment": "/**\n * A placeholder value to display when no value is selected.\n *\n * You can use this prop to pre-render the displayed text during SSR in order to avoid the hydration flash.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "placeholder?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "placeholder",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Select.Value.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Select.Value:var",
              "docComment": "/**\n * A text label of the currently selected item. Renders a `<span>` element.\n *\n * Documentation: [Base UI Select](https://base-ui.com/react/components/select)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SelectValue: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SelectValue.Props",
                  "canonicalReference": "@base-ui-components/react!Select.SelectValue.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/select/value/SelectValue.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Value",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Separator:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace Separator "
            }
          ],
          "fileUrlPath": "src/separator/Separator.tsx",
          "releaseTag": "Public",
          "name": "Separator",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Separator.Props:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "BaseUIComponentProps",
                  "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<'div', "
                },
                {
                  "kind": "Reference",
                  "text": "State",
                  "canonicalReference": "@base-ui-components/react!Separator.State:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Props",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Separator.Props#orientation:member",
                  "docComment": "/**\n * The orientation of the separator.\n *\n * @default\n *\n * 'horizontal'\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "orientation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Orientation",
                      "canonicalReference": "@base-ui-components/react!~Orientation:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "orientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Separator.State:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface State "
                }
              ],
              "releaseTag": "Public",
              "name": "State",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Separator.State#orientation:member",
                  "docComment": "/**\n * The orientation of the separator.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "orientation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Orientation",
                      "canonicalReference": "@base-ui-components/react!~Orientation:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "orientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!Separator:var",
          "docComment": "/**\n * A separator element accessible to screen readers. Renders a `<div>` element.\n *\n * Documentation: [Base UI Separator](https://base-ui.com/react/components/separator)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Separator: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Separator.Props",
              "canonicalReference": "@base-ui-components/react!Separator.Props:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/separator/Separator.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Separator",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Slider:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/slider/index.ts",
          "releaseTag": "None",
          "name": "Slider",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Slider.Control:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SliderControl "
                }
              ],
              "fileUrlPath": "src/slider/control/SliderControl.tsx",
              "releaseTag": "Public",
              "name": "Control",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Slider.Control.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "SliderRoot.State",
                      "canonicalReference": "@base-ui-components/react!Slider.SliderRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Slider.Control:var",
              "docComment": "/**\n * The clickable, interactive part of the slider. Renders a `<div>` element.\n *\n * Documentation: [Base UI Slider](https://base-ui.com/react/components/slider)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SliderControl: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SliderControl.Props",
                  "canonicalReference": "@base-ui-components/react!Slider.SliderControl.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/slider/control/SliderControl.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Control",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Slider.Indicator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SliderIndicator "
                }
              ],
              "fileUrlPath": "src/slider/indicator/SliderIndicator.tsx",
              "releaseTag": "Public",
              "name": "Indicator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Slider.Indicator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "SliderRoot.State",
                      "canonicalReference": "@base-ui-components/react!Slider.SliderRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Slider.Indicator:var",
              "docComment": "/**\n * Visualizes the current value of the slider. Renders a `<div>` element.\n *\n * Documentation: [Base UI Slider](https://base-ui.com/react/components/slider)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SliderIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SliderIndicator.Props",
                  "canonicalReference": "@base-ui-components/react!Slider.SliderIndicator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/slider/indicator/SliderIndicator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Indicator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Slider.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SliderRoot "
                }
              ],
              "fileUrlPath": "src/slider/root/SliderRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Slider.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props<Value extends "
                    },
                    {
                      "kind": "Content",
                      "text": "number | readonly number[]"
                    },
                    {
                      "kind": "Content",
                      "text": " = "
                    },
                    {
                      "kind": "Content",
                      "text": "number | readonly number[]"
                    },
                    {
                      "kind": "Content",
                      "text": "> extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Partial",
                      "canonicalReference": "!Partial:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Pick",
                      "canonicalReference": "!Pick:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "useSliderRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useSliderRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", 'disabled' | 'max' | 'min' | 'minStepsBetweenValues' | 'name' | 'orientation' | 'largeStep' | 'step'>>"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Slider.SliderRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'defaultValue' | 'onChange' | 'values'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "typeParameters": [
                    {
                      "typeParameterName": "Value",
                      "constraintTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "defaultTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.Props#defaultValue:member",
                      "docComment": "/**\n * The uncontrolled value of the slider when it’s initially rendered.\n *\n * To render a controlled slider, use the `value` prop instead.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "defaultValue?: "
                        },
                        {
                          "kind": "Content",
                          "text": "Value"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "defaultValue",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.Props#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.Props#format:member",
                      "docComment": "/**\n * Options to format the input value.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "format?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Intl.NumberFormatOptions",
                          "canonicalReference": "!Intl.NumberFormatOptions:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "format",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.Props#onValueChange:member",
                      "docComment": "/**\n * Callback function that is fired when the slider's value changed.\n *\n * @param value - The new value.\n *\n * @param event - The corresponding event that initiated the change. You can pull out the new value by accessing `event.target.value` (any).\n *\n * @param activeThumbIndex - Index of the currently moved thumb.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onValueChange?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(value: Value extends number ? number : Value, event: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Event",
                          "canonicalReference": "!Event:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ", activeThumbIndex: number) => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onValueChange",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.Props#onValueCommitted:member",
                      "docComment": "/**\n * Callback function that is fired when the `pointerup` is triggered.\n *\n * @param value - The new value.\n *\n * @param event - The corresponding event that initiated the change. **Warning**: This is a generic event not a change event.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onValueCommitted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(value: Value extends number ? number : Value, event: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Event",
                          "canonicalReference": "!Event:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ") => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onValueCommitted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.Props#tabIndex:member",
                      "docComment": "/**\n * Optional tab index attribute for the thumb components.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "tabIndex?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "tabIndex",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.Props#value:member",
                      "docComment": "/**\n * The value of the slider. For ranged sliders, provide an array with two values.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value?: "
                        },
                        {
                          "kind": "Content",
                          "text": "Value"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 5,
                      "endIndex": 11
                    },
                    {
                      "startIndex": 12,
                      "endIndex": 18
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Slider.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "FieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#activeThumbIndex:member",
                      "docComment": "/**\n * The index of the active thumb.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "activeThumbIndex: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "activeThumbIndex",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#dragging:member",
                      "docComment": "/**\n * Whether the thumb is currently being dragged.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "dragging: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "dragging",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#max:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "max: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "max",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#min:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "min: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "min",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#minStepsBetweenValues:member",
                      "docComment": "/**\n * The minimum steps between values in a range slider.\n *\n * @default\n *\n * 0\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "minStepsBetweenValues: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "minStepsBetweenValues",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#orientation:member",
                      "docComment": "/**\n * The component orientation.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation: "
                        },
                        {
                          "kind": "Reference",
                          "text": "useSliderRoot.Orientation",
                          "canonicalReference": "@base-ui-components/react!~useSliderRoot.Orientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#step:member",
                      "docComment": "/**\n * The step increment of the slider when incrementing or decrementing. It will snap to multiples of this value. Decimal values are supported.\n *\n * @default\n *\n * 1\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "step: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "step",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Root.State#values:member",
                      "docComment": "/**\n * The raw number value of the slider.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "values: "
                        },
                        {
                          "kind": "Content",
                          "text": "readonly number[]"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "values",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Slider.Root:var",
              "docComment": "/**\n * Groups all parts of the slider. Renders a `<div>` element.\n *\n * Documentation: [Base UI Slider](https://base-ui.com/react/components/slider)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SliderRoot: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    <Value extends number | readonly number[]>(props: "
                },
                {
                  "kind": "Reference",
                  "text": "SliderRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Slider.SliderRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": "<Value> & {\n        ref?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefObject",
                  "canonicalReference": "@types/react!React.RefObject:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }): "
                },
                {
                  "kind": "Reference",
                  "text": "React.JSX.Element",
                  "canonicalReference": "@types/react!React.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    propTypes?: any;\n}"
                }
              ],
              "fileUrlPath": "src/slider/root/SliderRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Slider.Thumb:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SliderThumb "
                }
              ],
              "fileUrlPath": "src/slider/thumb/SliderThumb.tsx",
              "releaseTag": "Public",
              "name": "Thumb",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Slider.Thumb.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Partial",
                      "canonicalReference": "!Partial:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "useSliderThumb.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useSliderThumb.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", 'rootRef'>>"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Slider.SliderThumb.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'render' | 'tabIndex'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Thumb.Props#onBlur:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onBlur?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.FocusEventHandler",
                          "canonicalReference": "@types/react!React.FocusEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onBlur",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Thumb.Props#onFocus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onFocus?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.FocusEventHandler",
                          "canonicalReference": "@types/react!React.FocusEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onFocus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Thumb.Props#onKeyDown:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onKeyDown?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.KeyboardEventHandler",
                          "canonicalReference": "@types/react!React.KeyboardEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onKeyDown",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Thumb.Props#onPointerLeave:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onPointerLeave?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.PointerEventHandler",
                          "canonicalReference": "@types/react!React.PointerEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onPointerLeave",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Thumb.Props#onPointerOver:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onPointerOver?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.PointerEventHandler",
                          "canonicalReference": "@types/react!React.PointerEventHandler:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onPointerOver",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Thumb.Props#render:member",
                      "docComment": "/**\n * Allows you to replace the component’s HTML element with a different tag, or compose it with another component.\n *\n * Accepts a `ReactElement` or a function that returns the element to render.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "render?: "
                        },
                        {
                          "kind": "Content",
                          "text": "((props: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ComponentPropsWithRef",
                          "canonicalReference": "@types/react!React.ComponentPropsWithRef:type"
                        },
                        {
                          "kind": "Content",
                          "text": "<'div'>, inputProps: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ComponentPropsWithRef",
                          "canonicalReference": "@types/react!React.ComponentPropsWithRef:type"
                        },
                        {
                          "kind": "Content",
                          "text": "<'input'>, state: "
                        },
                        {
                          "kind": "Reference",
                          "text": "State",
                          "canonicalReference": "@base-ui-components/react!Slider.SliderThumb.State:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ") => "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactElement",
                          "canonicalReference": "@types/react!React.ReactElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ") | ("
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactElement",
                          "canonicalReference": "@types/react!React.ReactElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " & {\n            ref: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.Ref",
                          "canonicalReference": "@types/react!React.Ref:type"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "Element",
                          "canonicalReference": "!Element:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ">;\n        })"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "render",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 16
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 7
                    },
                    {
                      "startIndex": 8,
                      "endIndex": 14
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Slider.Thumb.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "SliderRoot.State",
                      "canonicalReference": "@base-ui-components/react!Slider.SliderRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Slider.Thumb:var",
              "docComment": "/**\n * The draggable part of the the slider at the tip of the indicator. Renders a `<div>` element.\n *\n * Documentation: [Base UI Slider](https://base-ui.com/react/components/slider)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SliderThumb: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SliderThumb.Props",
                  "canonicalReference": "@base-ui-components/react!Slider.SliderThumb.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/slider/thumb/SliderThumb.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Thumb",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Slider.Track:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SliderTrack "
                }
              ],
              "fileUrlPath": "src/slider/track/SliderTrack.tsx",
              "releaseTag": "Public",
              "name": "Track",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Slider.Track.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "SliderRoot.State",
                      "canonicalReference": "@base-ui-components/react!Slider.SliderRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Slider.Track:var",
              "docComment": "/**\n * Contains the slider indicator and represents the entire range of the slider. Renders a `<div>` element.\n *\n * Documentation: [Base UI Slider](https://base-ui.com/react/components/slider)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SliderTrack: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SliderTrack.Props",
                  "canonicalReference": "@base-ui-components/react!Slider.SliderTrack.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/slider/track/SliderTrack.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Track",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Slider.Value:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SliderValue "
                }
              ],
              "fileUrlPath": "src/slider/value/SliderValue.tsx",
              "releaseTag": "Public",
              "name": "Value",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Slider.Value.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'output', "
                    },
                    {
                      "kind": "Reference",
                      "text": "SliderRoot.State",
                      "canonicalReference": "@base-ui-components/react!Slider.SliderRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'children'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Value.Props#\"aria-live\":member",
                      "docComment": "/**\n * @default\n *\n * 'off'\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "'aria-live'?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.AriaAttributes",
                          "canonicalReference": "@types/react!React.AriaAttributes:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "['aria-live']"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "\"aria-live\"",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Slider.Value.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Content",
                          "text": "null | ((formattedValues: readonly string[], values: readonly number[]) => "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ")"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 4
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 7
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Slider.Value:var",
              "docComment": "/**\n * Displays the current value of the slider as text. Renders an `<output>` element.\n *\n * Documentation: [Base UI Slider](https://base-ui.com/react/components/slider)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SliderValue: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SliderValue.Props",
                  "canonicalReference": "@base-ui-components/react!Slider.SliderValue.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLOutputElement",
                  "canonicalReference": "!HTMLOutputElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/slider/value/SliderValue.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Value",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Switch:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/switch/index.ts",
          "releaseTag": "None",
          "name": "Switch",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Switch.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SwitchRoot "
                }
              ],
              "fileUrlPath": "src/switch/root/SwitchRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Switch.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "useSwitchRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useSwitchRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "SwitchRoot.State",
                      "canonicalReference": "@base-ui-components/react!Switch.SwitchRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'onChange'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    },
                    {
                      "startIndex": 3,
                      "endIndex": 9
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Switch.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "FieldRoot.State",
                      "canonicalReference": "@base-ui-components/react!Field.FieldRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Switch.Root.State#checked:member",
                      "docComment": "/**\n * Whether the switch is currently active.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "checked: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "checked",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Switch.Root.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Switch.Root.State#readOnly:member",
                      "docComment": "/**\n * Whether the user should be unable to activate or deactivate the switch.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "readOnly: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "readOnly",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Switch.Root.State#required:member",
                      "docComment": "/**\n * Whether the user must activate the switch before submitting a form.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "required: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "required",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Switch.Root:var",
              "docComment": "/**\n * Represents the switch itself. Renders a `<button>` element and a hidden `<input>` beside.\n *\n * Documentation: [Base UI Switch](https://base-ui.com/react/components/switch)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SwitchRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SwitchRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Switch.SwitchRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLButtonElement",
                  "canonicalReference": "!HTMLButtonElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/switch/root/SwitchRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Switch.Thumb:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace SwitchThumb "
                }
              ],
              "fileUrlPath": "src/switch/thumb/SwitchThumb.tsx",
              "releaseTag": "Public",
              "name": "Thumb",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Switch.Thumb.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Switch.SwitchThumb.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Switch.Thumb.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "SwitchRoot.State",
                      "canonicalReference": "@base-ui-components/react!Switch.SwitchRoot.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Switch.Thumb:var",
              "docComment": "/**\n * The movable part of the switch that indicates whether the switch is on or off. Renders a `<span>`.\n *\n * Documentation: [Base UI Switch](https://base-ui.com/react/components/switch)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SwitchThumb: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SwitchThumb.Props",
                  "canonicalReference": "@base-ui-components/react!Switch.SwitchThumb.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/switch/thumb/SwitchThumb.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Thumb",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Tabs:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/tabs/index.ts",
          "releaseTag": "None",
          "name": "Tabs",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tabs.Indicator:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TabsIndicator "
                }
              ],
              "fileUrlPath": "src/tabs/indicator/TabsIndicator.tsx",
              "releaseTag": "Public",
              "name": "Indicator",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tabs.Indicator.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'span', "
                    },
                    {
                      "kind": "Reference",
                      "text": "TabsIndicator.State",
                      "canonicalReference": "@base-ui-components/react!Tabs.TabsIndicator.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Indicator.Props#renderBeforeHydration:member",
                      "docComment": "/**\n * Whether to render itself before React hydrates. This minimizes the time that the indicator isn’t visible after server-side rendering.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "renderBeforeHydration?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "renderBeforeHydration",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tabs.Indicator.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "TabsRoot.State",
                      "canonicalReference": "@base-ui-components/react!Tabs.TabsRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Indicator.State#orientation:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TabsOrientation",
                          "canonicalReference": "@base-ui-components/react!~TabsOrientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Indicator.State#selectedTabPosition:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "selectedTabPosition: "
                        },
                        {
                          "kind": "Reference",
                          "text": "ActiveTabPosition",
                          "canonicalReference": "@base-ui-components/react!~ActiveTabPosition:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "selectedTabPosition",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Indicator.State#selectedTabSize:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "selectedTabSize: "
                        },
                        {
                          "kind": "Reference",
                          "text": "ActiveTabSize",
                          "canonicalReference": "@base-ui-components/react!~ActiveTabSize:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "selectedTabSize",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tabs.Indicator:var",
              "docComment": "/**\n * A visual indicator that can be styled to match the position of the currently active tab. Renders a `<span>` element.\n *\n * Documentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TabsIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TabsIndicator.Props",
                  "canonicalReference": "@base-ui-components/react!Tabs.TabsIndicator.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/tabs/indicator/TabsIndicator.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Indicator",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tabs.List:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TabsList "
                }
              ],
              "fileUrlPath": "src/tabs/list/TabsList.tsx",
              "releaseTag": "Public",
              "name": "List",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tabs.List.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "TabsList.State",
                      "canonicalReference": "@base-ui-components/react!Tabs.TabsList.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.List.Props#activateOnFocus:member",
                      "docComment": "/**\n * Whether to automatically change the active tab on arrow key focus. Otherwise, tabs will be activated using Enter or Spacebar key press.\n *\n * @default\n *\n * true\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "activateOnFocus?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "activateOnFocus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.List.Props#loop:member",
                      "docComment": "/**\n * Whether to loop keyboard focus back to the first item when the end of the list is reached while using the arrow keys.\n *\n * @default\n *\n * true\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "loop?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "loop",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Tabs.List.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Reference",
                      "text": "TabsRoot.State",
                      "canonicalReference": "@base-ui-components/react!Tabs.TabsRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tabs.List:var",
              "docComment": "/**\n * Groups the individual tab buttons. Renders a `<div>` element.\n *\n * Documentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TabsList: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TabsList.Props",
                  "canonicalReference": "@base-ui-components/react!Tabs.TabsList.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/tabs/list/TabsList.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "List",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tabs.Panel:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TabsPanel "
                }
              ],
              "fileUrlPath": "src/tabs/panel/TabsPanel.tsx",
              "releaseTag": "Public",
              "name": "Panel",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tabs.Panel.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Tabs.TabsPanel.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Panel.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the HTML element in the DOM while the panel is hidden.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Panel.Props#value:member",
                      "docComment": "/**\n * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected. If not provided, it will fall back to the index of the panel. It is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TabValue",
                          "canonicalReference": "@base-ui-components/react!~TabValue:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tabs.Panel.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "TabsRoot.State",
                      "canonicalReference": "@base-ui-components/react!Tabs.TabsRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Panel.State#hidden:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "hidden: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "hidden",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tabs.Panel:var",
              "docComment": "/**\n * A panel displayed when the corresponding tab is active. Renders a `<div>` element.\n *\n * Documentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TabsPanel: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TabsPanel.Props",
                  "canonicalReference": "@base-ui-components/react!Tabs.TabsPanel.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/tabs/panel/TabsPanel.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Panel",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tabs.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TabsRoot "
                }
              ],
              "fileUrlPath": "src/tabs/root/TabsRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tabs.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Omit",
                      "canonicalReference": "!Omit:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Tabs.TabsRoot.State:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">, 'defaultValue'>"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Root.Props#defaultValue:member",
                      "docComment": "/**\n * The default value. Use when the component is not controlled. When the value is `null`, no Tab will be selected.\n *\n * @default\n *\n * 0\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "defaultValue?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TabValue",
                          "canonicalReference": "@base-ui-components/react!~TabValue:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "defaultValue",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Root.Props#onValueChange:member",
                      "docComment": "/**\n * Callback invoked when new value is being set.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "onValueChange?: "
                        },
                        {
                          "kind": "Content",
                          "text": "(value: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TabValue",
                          "canonicalReference": "@base-ui-components/react!~TabValue:type"
                        },
                        {
                          "kind": "Content",
                          "text": ", event?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Event",
                          "canonicalReference": "!Event:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ") => void"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "onValueChange",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 6
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Root.Props#orientation:member",
                      "docComment": "/**\n * The component orientation (layout flow direction).\n *\n * @default\n *\n * 'horizontal'\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TabsOrientation",
                          "canonicalReference": "@base-ui-components/react!~TabsOrientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Root.Props#value:member",
                      "docComment": "/**\n * The value of the currently selected `Tab`. Use when the component is controlled. When the value is `null`, no Tab will be selected.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TabValue",
                          "canonicalReference": "@base-ui-components/react!~TabValue:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Tabs.Root.State:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type State = "
                    },
                    {
                      "kind": "Content",
                      "text": "{\n        orientation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TabsOrientation",
                      "canonicalReference": "@base-ui-components/react!~TabsOrientation:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";\n        tabActivationDirection: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TabActivationDirection",
                      "canonicalReference": "@base-ui-components/react!~TabActivationDirection:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";\n    }"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tabs.Root:var",
              "docComment": "/**\n * Groups the tabs and the corresponding panels. Renders a `<div>` element.\n *\n * Documentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TabsRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TabsRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Tabs.TabsRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/tabs/root/TabsRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tabs.Tab:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TabsTab "
                }
              ],
              "fileUrlPath": "src/tabs/tab/TabsTab.tsx",
              "releaseTag": "Public",
              "name": "Tab",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tabs.Tab.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'button', "
                    },
                    {
                      "kind": "Reference",
                      "text": "TabsTab.State",
                      "canonicalReference": "@base-ui-components/react!Tabs.TabsTab.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Tab.Props#value:member",
                      "docComment": "/**\n * The value of the Tab. When not specified, the value is the child position index.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "value?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TabValue",
                          "canonicalReference": "@base-ui-components/react!~TabValue:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "value",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tabs.Tab.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Tab.State#disabled:member",
                      "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "disabled: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "disabled",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Tab.State#orientation:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "orientation: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TabsOrientation",
                          "canonicalReference": "@base-ui-components/react!~TabsOrientation:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "orientation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tabs.Tab.State#selected:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "selected: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "selected",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tabs.Tab:var",
              "docComment": "/**\n * An individual interactive tab button that toggles the corresponding panel. Renders a `<button>` element.\n *\n * Documentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TabsTab: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TabsTab.Props",
                  "canonicalReference": "@base-ui-components/react!Tabs.TabsTab.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/tabs/tab/TabsTab.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Tab",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@base-ui-components/react!TextDirection:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TextDirection = "
            },
            {
              "kind": "Content",
              "text": "'ltr' | 'rtl'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/direction-provider/DirectionContext.tsx",
          "releaseTag": "Public",
          "name": "TextDirection",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Toggle:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace Toggle "
            }
          ],
          "fileUrlPath": "src/toggle/Toggle.tsx",
          "releaseTag": "Public",
          "name": "Toggle",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Toggle.Props:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "useToggle.Parameters",
                  "canonicalReference": "@base-ui-components/react!~useToggle.Parameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'pressed' | 'defaultPressed' | 'disabled' | 'onPressedChange' | 'value'>>"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseUIComponentProps",
                  "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<'button', "
                },
                {
                  "kind": "Reference",
                  "text": "State",
                  "canonicalReference": "@base-ui-components/react!Toggle.State:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, 'value'>"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Props",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Toggle.Props#\"aria-label\":member",
                  "docComment": "/**\n * The label for the Toggle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "'aria-label'?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "React.AriaAttributes",
                      "canonicalReference": "@types/react!React.AriaAttributes:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "['aria-label']"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "\"aria-label\"",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Toggle.Props#\"aria-labelledby\":member",
                  "docComment": "/**\n * An id or space-separated list of ids of elements that label the Toggle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "'aria-labelledby'?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "React.AriaAttributes",
                      "canonicalReference": "@types/react!React.AriaAttributes:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "['aria-labelledby']"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "\"aria-labelledby\"",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 7
                },
                {
                  "startIndex": 8,
                  "endIndex": 14
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!Toggle.State:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface State "
                }
              ],
              "releaseTag": "Public",
              "name": "State",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Toggle.State#disabled:member",
                  "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "disabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!Toggle.State#pressed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pressed: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "pressed",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!Toggle:var",
          "docComment": "/**\n * A two-state button that can be on or off. Renders a `<button>` element.\n *\n * Documentation: [Base UI Toggle](https://base-ui.com/react/components/toggle)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Toggle: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Toggle.Props",
              "canonicalReference": "@base-ui-components/react!Toggle.Props:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/toggle/Toggle.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Toggle",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!ToggleGroup:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace ToggleGroup "
            }
          ],
          "fileUrlPath": "src/toggle-group/ToggleGroup.tsx",
          "releaseTag": "Public",
          "name": "ToggleGroup",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!ToggleGroup.Props:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "useToggleGroup.Parameters",
                  "canonicalReference": "@base-ui-components/react!~useToggleGroup.Parameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseUIComponentProps",
                  "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<'div', "
                },
                {
                  "kind": "Reference",
                  "text": "State",
                  "canonicalReference": "@base-ui-components/react!ToggleGroup.State:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, 'defaultValue'>"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "releaseTag": "Public",
              "name": "Props",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!ToggleGroup.Props#disabled:member",
                  "docComment": "/**\n * Whether the component should ignore user interaction.\n *\n * @default\n *\n * false\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disabled?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "disabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!ToggleGroup.Props#loop:member",
                  "docComment": "/**\n * Whether to loop keyboard focus back to the first item when the end of the list is reached while using the arrow keys.\n *\n * @default\n *\n * true\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "loop?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "loop",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!ToggleGroup.Props#orientation:member",
                  "docComment": "/**\n * @default\n *\n * 'horizontal'\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "orientation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ToggleGroupOrientation",
                      "canonicalReference": "@base-ui-components/react!~ToggleGroupOrientation:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "orientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 5
                },
                {
                  "startIndex": 6,
                  "endIndex": 12
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!ToggleGroup.State:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface State "
                }
              ],
              "releaseTag": "Public",
              "name": "State",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!ToggleGroup.State#disabled:member",
                  "docComment": "/**\n * Whether the component should ignore user interaction.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "disabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!ToggleGroup.State#multiple:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "multiple: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "multiple",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@base-ui-components/react!ToggleGroup:var",
          "docComment": "/**\n * Provides a shared state to a series of toggle buttons.\n *\n * Documentation: [Base UI Toggle Group](https://base-ui.com/react/components/toggle-group)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToggleGroup: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToggleGroup.Props",
              "canonicalReference": "@base-ui-components/react!ToggleGroup.Props:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/toggle-group/ToggleGroup.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ToggleGroup",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!Tooltip:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/tooltip/index.ts",
          "releaseTag": "None",
          "name": "Tooltip",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tooltip.Arrow:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TooltipArrow "
                }
              ],
              "fileUrlPath": "src/tooltip/arrow/TooltipArrow.tsx",
              "releaseTag": "Public",
              "name": "Arrow",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Arrow.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Tooltip.TooltipArrow.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Arrow.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Arrow.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Arrow.State#open:member",
                      "docComment": "/**\n * Whether the tooltip is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Arrow.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Arrow.State#uncentered:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "uncentered: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "uncentered",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tooltip.Arrow:var",
              "docComment": "/**\n * Displays an element positioned against the tooltip anchor. Renders a `<div>` element.\n *\n * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TooltipArrow: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TooltipArrow.Props",
                  "canonicalReference": "@base-ui-components/react!Tooltip.TooltipArrow.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/tooltip/arrow/TooltipArrow.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Arrow",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tooltip.Popup:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TooltipPopup "
                }
              ],
              "fileUrlPath": "src/tooltip/popup/TooltipPopup.tsx",
              "releaseTag": "Public",
              "name": "Popup",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Popup.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Tooltip.TooltipPopup.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Popup.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Popup.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Popup.State#instant:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "instant: "
                        },
                        {
                          "kind": "Content",
                          "text": "'delay' | 'focus' | 'dismiss' | undefined"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "instant",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Popup.State#open:member",
                      "docComment": "/**\n * Whether the tooltip is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Popup.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Popup.State#transitionStatus:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "transitionStatus: "
                        },
                        {
                          "kind": "Reference",
                          "text": "TransitionStatus",
                          "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "transitionStatus",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tooltip.Popup:var",
              "docComment": "/**\n * A container for the tooltip contents. Renders a `<div>` element.\n *\n * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TooltipPopup: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TooltipPopup.Props",
                  "canonicalReference": "@base-ui-components/react!Tooltip.TooltipPopup.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/tooltip/popup/TooltipPopup.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Popup",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!Tooltip.Portal:function(1)",
              "docComment": "/**\n * A portal element that moves the popup to a different part of the DOM. By default, the portal element is appended to `<body>`.\n *\n * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare function TooltipPortal(props: "
                },
                {
                  "kind": "Reference",
                  "text": "TooltipPortal.Props",
                  "canonicalReference": "@base-ui-components/react!Tooltip.TooltipPortal.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.JSX.Element",
                  "canonicalReference": "@types/react!React.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/tooltip/portal/TooltipPortal.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Portal"
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tooltip.Portal:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TooltipPortal "
                }
              ],
              "fileUrlPath": "src/tooltip/portal/TooltipPortal.tsx",
              "releaseTag": "Public",
              "name": "Portal",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Portal.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Portal.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Portal.Props#container:member",
                      "docComment": "/**\n * A parent element to render the portal element into.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "container?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null | "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.RefObject",
                          "canonicalReference": "@types/react!React.RefObject:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<"
                        },
                        {
                          "kind": "Reference",
                          "text": "HTMLElement",
                          "canonicalReference": "!HTMLElement:interface"
                        },
                        {
                          "kind": "Content",
                          "text": " | null>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "container",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 7
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Portal.Props#keepMounted:member",
                      "docComment": "/**\n * Whether to keep the portal mounted in the DOM while the popup is hidden.\n *\n * @default\n *\n * false\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "keepMounted?: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "keepMounted",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Portal.propTypes:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "propTypes: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    }
                  ],
                  "isReadonly": false,
                  "releaseTag": "Public",
                  "name": "propTypes",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tooltip.Positioner:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TooltipPositioner "
                }
              ],
              "fileUrlPath": "src/tooltip/positioner/TooltipPositioner.tsx",
              "releaseTag": "Public",
              "name": "Positioner",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Positioner.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Tooltip.TooltipPositioner.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ", "
                    },
                    {
                      "kind": "Reference",
                      "text": "useTooltipPositioner.SharedParameters",
                      "canonicalReference": "@base-ui-components/react!~useTooltipPositioner.SharedParameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    },
                    {
                      "startIndex": 6,
                      "endIndex": 7
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Positioner.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Positioner.State#align:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "align: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Align",
                          "canonicalReference": "@base-ui-components/react!~Align:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "align",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Positioner.State#anchorHidden:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "anchorHidden: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "anchorHidden",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Positioner.State#open:member",
                      "docComment": "/**\n * Whether the tooltip is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Positioner.State#side:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "side: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Side",
                          "canonicalReference": "@base-ui-components/react!~Side:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "side",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tooltip.Positioner:var",
              "docComment": "/**\n * Positions the tooltip against the trigger. Renders a `<div>` element.\n *\n * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TooltipPositioner: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TooltipPositioner.Props",
                  "canonicalReference": "@base-ui-components/react!Tooltip.TooltipPositioner.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/tooltip/positioner/TooltipPositioner.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Positioner",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tooltip.Provider:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TooltipProvider "
                }
              ],
              "fileUrlPath": "src/tooltip/provider/TooltipProvider.tsx",
              "releaseTag": "Public",
              "name": "Provider",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Provider.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Provider.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Provider.Props#closeDelay:member",
                      "docComment": "/**\n * How long to wait before closing a tooltip. Specified in milliseconds.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "closeDelay?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "closeDelay",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Provider.Props#delay:member",
                      "docComment": "/**\n * How long to wait before opening a tooltip. Specified in milliseconds.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "delay?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "delay",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Provider.Props#timeout:member",
                      "docComment": "/**\n * Another tooltip will open instantly if the previous tooltip is closed within this timeout. Specified in milliseconds.\n *\n * @default\n *\n * 400\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "timeout?: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "timeout",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tooltip.Provider:var",
              "docComment": "/**\n * Provides a shared delay for multiple tooltips. The grouping logic ensures that once a tooltip becomes visible, the adjacent tooltips will be shown instantly.\n *\n * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TooltipProvider: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FC",
                  "canonicalReference": "@types/react!React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TooltipProvider.Props",
                  "canonicalReference": "@base-ui-components/react!Tooltip.TooltipProvider.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/tooltip/provider/TooltipProvider.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Provider",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tooltip.Root:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TooltipRoot "
                }
              ],
              "fileUrlPath": "src/tooltip/root/TooltipRoot.tsx",
              "releaseTag": "Public",
              "name": "Root",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "TypeAlias",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Root.Actions:type",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type Actions = "
                    },
                    {
                      "kind": "Reference",
                      "text": "useTooltipRoot.Actions",
                      "canonicalReference": "@base-ui-components/react!~useTooltipRoot.Actions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Actions",
                  "typeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Root.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "useTooltipRoot.Parameters",
                      "canonicalReference": "@base-ui-components/react!~useTooltipRoot.Parameters:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Root.Props#children:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "children?: "
                        },
                        {
                          "kind": "Reference",
                          "text": "React.ReactNode",
                          "canonicalReference": "@types/react!React.ReactNode:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "children",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 2
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Root.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tooltip.Root:var",
              "docComment": "/**\n * Groups all parts of the tooltip. Doesn’t render its own HTML element.\n *\n * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TooltipRoot: "
                },
                {
                  "kind": "Reference",
                  "text": "React.FC",
                  "canonicalReference": "@types/react!React.FC:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TooltipRoot.Props",
                  "canonicalReference": "@base-ui-components/react!Tooltip.TooltipRoot.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/tooltip/root/TooltipRoot.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Root",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@base-ui-components/react!Tooltip.Trigger:namespace",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declare namespace TooltipTrigger "
                }
              ],
              "fileUrlPath": "src/tooltip/trigger/TooltipTrigger.tsx",
              "releaseTag": "Public",
              "name": "Trigger",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Trigger.Props:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Props extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseUIComponentProps",
                      "canonicalReference": "@base-ui-components/react!~BaseUIComponentProps:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<'div', "
                    },
                    {
                      "kind": "Reference",
                      "text": "State",
                      "canonicalReference": "@base-ui-components/react!Tooltip.TooltipTrigger.State:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": " "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Props",
                  "preserveMemberOrder": false,
                  "members": [],
                  "extendsTokenRanges": [
                    {
                      "startIndex": 1,
                      "endIndex": 5
                    }
                  ]
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "@base-ui-components/react!Tooltip.Trigger.State:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface State "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "State",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "@base-ui-components/react!Tooltip.Trigger.State#open:member",
                      "docComment": "/**\n * Whether the tooltip is currently open.\n */\n",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "open: "
                        },
                        {
                          "kind": "Content",
                          "text": "boolean"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "open",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!Tooltip.Trigger:var",
              "docComment": "/**\n * An element to attach the tooltip to. Renders a `<button>` element.\n *\n * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TooltipTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ForwardRefExoticComponent",
                  "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TooltipTrigger.Props",
                  "canonicalReference": "@base-ui-components/react!Tooltip.TooltipTrigger.Props:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefAttributes",
                  "canonicalReference": "@types/react!React.RefAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                }
              ],
              "fileUrlPath": "src/tooltip/trigger/TooltipTrigger.tsx",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "Trigger",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@base-ui-components/react!utils:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "None",
          "name": "utils",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!utils.getReactElementRef:function(1)",
              "docComment": "/**\n * Returns the ref of a React element handling differences between React 19 and older versions. It will throw runtime error if the element is not a valid React element.\n *\n * @param element - React.ReactElement\n *\n * @returns React.Ref<any> | null\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function getReactElementRef(element: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactElement",
                  "canonicalReference": "@types/react!React.ReactElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.Ref",
                  "canonicalReference": "@types/react!React.Ref:type"
                },
                {
                  "kind": "Content",
                  "text": "<any> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/utils/getReactElementRef.ts",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getReactElementRef"
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type TransitionStatus = "
                },
                {
                  "kind": "Content",
                  "text": "'starting' | 'ending' | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/utils/useTransitionStatus.ts",
              "releaseTag": "Public",
              "name": "TransitionStatus",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!utils.useControlled:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function useControlled<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">({ controlled, "
                },
                {
                  "kind": "Reference",
                  "text": "default",
                  "canonicalReference": "@base-ui-components/react!utils.UseControlledProps#default"
                },
                {
                  "kind": "Content",
                  "text": ": defaultProp, name, state, }: "
                },
                {
                  "kind": "Reference",
                  "text": "UseControlledProps",
                  "canonicalReference": "@base-ui-components/react!utils.UseControlledProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "[T, (newValue: T | ((prevValue: T) => T)) => void]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/utils/useControlled.ts",
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ controlled, default: defaultProp, name, state, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "useControlled"
            },
            {
              "kind": "Interface",
              "canonicalReference": "@base-ui-components/react!utils.UseControlledProps:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface UseControlledProps<T = "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "> "
                }
              ],
              "fileUrlPath": "src/utils/useControlled.ts",
              "releaseTag": "Public",
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "UseControlledProps",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!utils.UseControlledProps#controlled:member",
                  "docComment": "/**\n * Holds the component value when it's controlled.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "controlled: "
                    },
                    {
                      "kind": "Content",
                      "text": "T | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "controlled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!utils.UseControlledProps#default:member",
                  "docComment": "/**\n * The default value when uncontrolled.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "default: "
                    },
                    {
                      "kind": "Content",
                      "text": "T | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "default",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!utils.UseControlledProps#name:member",
                  "docComment": "/**\n * The component name displayed in warnings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@base-ui-components/react!utils.UseControlledProps#state:member",
                  "docComment": "/**\n * The name of the state variable displayed in warnings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "state?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "state",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!utils.useEnhancedEffect:var",
              "docComment": "/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering. This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85 and confirm it doesn't apply to your use-case.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useEnhancedEffect: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "React.useEffect",
                  "canonicalReference": "@types/react!React.useEffect:function"
                }
              ],
              "fileUrlPath": "src/utils/useEnhancedEffect.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "useEnhancedEffect",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!utils.useForkRef:function(1)",
              "docComment": "/**\n * Takes an array of refs and returns a new ref which will apply any modification to all of the refs. This is useful when you want to have the ref used in multiple places.\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param refs - The ref array.\n *\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function useForkRef<Instance>(...refs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "React.Ref",
                  "canonicalReference": "@types/react!React.Ref:type"
                },
                {
                  "kind": "Content",
                  "text": "<Instance> | undefined>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "React.RefCallback",
                  "canonicalReference": "@types/react!React.RefCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<Instance> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/utils/useForkRef.ts",
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "refs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Instance",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "useForkRef"
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!utils.useId:function(1)",
              "docComment": "/**\n * @param idOverride - \n *\n * @returns {string}\n *\n * @example\n *\n * <div id={useId()} />\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function useId(idOverride?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/utils/useId.ts",
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "idOverride",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "prefix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "useId"
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!utils.useScrollLock:function(1)",
              "docComment": "/**\n * Locks the scroll of the document when enabled.\n *\n * @param enabled - Whether to enable the scroll lock.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function useScrollLock(enabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", referenceElement?: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/utils/useScrollLock.ts",
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "referenceElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "name": "useScrollLock"
            },
            {
              "kind": "Function",
              "canonicalReference": "@base-ui-components/react!utils.useTransitionStatus:function(1)",
              "docComment": "/**\n * Provides a status string for CSS animations.\n *\n * @param open - a boolean that determines if the element is open.\n *\n * @param delayStartingStatus - a boolean that set the `starting` status one tick later. Example use-case: collapsible needs an extra frame in order to measure the panel contents. - internal hook.\n *\n * @ignore\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function useTransitionStatus(open: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", delayStartingStatus?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n    mounted: boolean;\n    setMounted: "
                },
                {
                  "kind": "Reference",
                  "text": "React.Dispatch",
                  "canonicalReference": "@types/react!React.Dispatch:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "React.SetStateAction",
                  "canonicalReference": "@types/react!React.SetStateAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>>;\n    transitionStatus: "
                },
                {
                  "kind": "Reference",
                  "text": "TransitionStatus",
                  "canonicalReference": "@base-ui-components/react!utils.TransitionStatus:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/utils/useTransitionStatus.ts",
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "open",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delayStartingStatus",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "useTransitionStatus"
            },
            {
              "kind": "Variable",
              "canonicalReference": "@base-ui-components/react!utils.visuallyHidden:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visuallyHidden: "
                },
                {
                  "kind": "Reference",
                  "text": "React.CSSProperties",
                  "canonicalReference": "@types/react!React.CSSProperties:interface"
                }
              ],
              "fileUrlPath": "src/utils/visuallyHidden.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "visuallyHidden",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        }
      ]
    }
  ]
}
