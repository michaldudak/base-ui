{
	"id": 0,
	"name": "@base-ui-components/react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 55,
					"name": "Accordion",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 108,
							"name": "Header",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A heading that labels the corresponding panel.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<h3>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"children": [
								{
									"id": 109,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 110,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 111,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 112,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 113,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 86,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AccordionItem.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 114,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 86,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AccordionItem.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												110,
												114
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/header/AccordionHeader.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "h3"
												},
												{
													"type": "reference",
													"target": 86,
													"name": "AccordionItem.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										109
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/header/AccordionHeader.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/header/AccordionHeader.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 85,
							"name": "Item",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups an accordion header with the corresponding panel.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"children": [
								{
									"id": 93,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 95,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 96,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 97,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 98,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 86,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AccordionItem.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 100,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.disabled"
											}
										},
										{
											"id": 101,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the panel is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 102,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
															"line": 22,
															"character": 22
														}
													],
													"signatures": [
														{
															"id": 103,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
																	"line": 22,
																	"character": 22
																}
															],
															"parameters": [
																{
																	"id": 104,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.onOpenChange"
											}
										},
										{
											"id": 99,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 86,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AccordionItem.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 94,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												95,
												100,
												101,
												99,
												94
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
											"line": 20,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 86,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "AccordionItem.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Pick"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
																"qualifiedName": "useCollapsibleRoot.Parameters"
															},
															"name": "useCollapsibleRoot.Parameters",
															"package": "@base-ui-components/react"
														},
														{
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "disabled"
																},
																{
																	"type": "literal",
																	"value": "onOpenChange"
																}
															]
														}
													],
													"name": "Pick",
													"package": "typescript"
												}
											],
											"name": "Partial",
											"package": "typescript"
										}
									]
								},
								{
									"id": 86,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 91,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 62,
												"name": "State.disabled"
											}
										},
										{
											"id": 87,
											"name": "index",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 88,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 92,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
													"qualifiedName": "AccordionOrientation"
												},
												"name": "AccordionOrientation",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 63,
												"name": "State.orientation"
											}
										},
										{
											"id": 89,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 90,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
													"qualifiedName": "AccordionValue"
												},
												"name": "AccordionValue",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 61,
												"name": "State.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												91,
												87,
												88,
												92,
												89,
												90
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
											"line": 15,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 60,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "AccordionRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										93,
										86
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
									"line": 12,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
									"line": 14,
									"character": 25
								}
							]
						},
						{
							"id": 128,
							"name": "Panel",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A collapsible panel with the accordion item contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"children": [
								{
									"id": 129,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 130,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 131,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 132,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 133,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 86,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AccordionItem.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 135,
											"name": "hiddenUntilFound",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows the browser’s built-in page search to find and expand the panel contents.\n\nOverrides the "
													},
													{
														"kind": "code",
														"text": "`keepMounted`"
													},
													{
														"kind": "text",
														"text": " prop and uses "
													},
													{
														"kind": "code",
														"text": "`hidden=\"until-found\"`"
													},
													{
														"kind": "text",
														"text": "\nto hide the element without removing it from the DOM."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Pick.hiddenUntilFound"
											}
										},
										{
											"id": 136,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the element in the DOM while the panel is closed.\nThis prop is ignored when "
													},
													{
														"kind": "code",
														"text": "`hiddenUntilFound`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Pick.keepMounted"
											}
										},
										{
											"id": 134,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 86,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AccordionItem.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												130,
												135,
												136,
												134
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/panel/AccordionPanel.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 86,
													"name": "AccordionItem.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Pick"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 64,
													"name": "AccordionRoot.Props",
													"package": "@base-ui-components/react"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "hiddenUntilFound"
														},
														{
															"type": "literal",
															"value": "keepMounted"
														}
													]
												}
											],
											"name": "Pick",
											"package": "typescript"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										129
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/panel/AccordionPanel.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/panel/AccordionPanel.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 59,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the accordion.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"children": [
								{
									"id": 64,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 77,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 78,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 79,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 80,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AccordionRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 68,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The uncontrolled value of the item(s) that should be initially expanded.\n\nTo render a controlled accordion, use the "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
													"qualifiedName": "AccordionValue"
												},
												"name": "AccordionValue",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.defaultValue"
											}
										},
										{
											"id": 69,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.disabled"
											}
										},
										{
											"id": 65,
											"name": "hiddenUntilFound",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows the browser’s built-in page search to find and expand the panel contents.\n\nOverrides the "
													},
													{
														"kind": "code",
														"text": "`keepMounted`"
													},
													{
														"kind": "text",
														"text": " prop and uses "
													},
													{
														"kind": "code",
														"text": "`hidden=\"until-found\"`"
													},
													{
														"kind": "text",
														"text": "\nto hide the element without removing it from the DOM."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 66,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the element in the DOM while the panel is closed.\nThis prop is ignored when "
													},
													{
														"kind": "code",
														"text": "`hiddenUntilFound`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 70,
											"name": "loop",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to loop keyboard focus back to the first item\nwhen the end of the list is reached while using the arrow keys."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.loop"
											}
										},
										{
											"id": 71,
											"name": "onValueChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when an accordion item is expanded or collapsed.\nProvides the new value as an argument."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 72,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
															"line": 36,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 73,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
																	"line": 36,
																	"character": 23
																}
															],
															"parameters": [
																{
																	"id": 74,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
																			"qualifiedName": "AccordionValue"
																		},
																		"name": "AccordionValue",
																		"package": "@base-ui-components/react"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.onValueChange"
											}
										},
										{
											"id": 75,
											"name": "openMultiple",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether multiple items can be open at the same time."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.openMultiple"
											}
										},
										{
											"id": 76,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The visual orientation of the accordion.\nControls whether roving focus uses left/right or up/down arrow keys."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'vertical'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
													"line": 47,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
													"qualifiedName": "AccordionOrientation"
												},
												"name": "AccordionOrientation",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.orientation"
											}
										},
										{
											"id": 81,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 60,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AccordionRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										},
										{
											"id": 67,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The controlled value of the item(s) that should be expanded.\n\nTo render an uncontrolled accordion, use the "
													},
													{
														"kind": "code",
														"text": "`defaultValue`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/useAccordionRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
													"qualifiedName": "AccordionValue"
												},
												"name": "AccordionValue",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												77,
												68,
												69,
												65,
												66,
												70,
												71,
												75,
												76,
												81,
												67
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
											"line": 20,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Pick"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
																"qualifiedName": "useAccordionRoot.Parameters"
															},
															"name": "useAccordionRoot.Parameters",
															"package": "@base-ui-components/react"
														},
														{
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "value"
																},
																{
																	"type": "literal",
																	"value": "defaultValue"
																},
																{
																	"type": "literal",
																	"value": "disabled"
																},
																{
																	"type": "literal",
																	"value": "loop"
																},
																{
																	"type": "literal",
																	"value": "onValueChange"
																},
																{
																	"type": "literal",
																	"value": "openMultiple"
																},
																{
																	"type": "literal",
																	"value": "orientation"
																}
															]
														}
													],
													"name": "Pick",
													"package": "typescript"
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "div"
														},
														{
															"type": "reference",
															"target": 60,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "AccordionRoot.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "defaultValue"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 60,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 62,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 63,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
													"qualifiedName": "AccordionOrientation"
												},
												"name": "AccordionOrientation",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 61,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
													"qualifiedName": "AccordionValue"
												},
												"name": "AccordionValue",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												62,
												63,
												61
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"target": 86,
											"name": "State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										64,
										60
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 118,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens and closes the corresponding panel.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"children": [
								{
									"id": 119,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 120,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 121,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 122,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 123,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 86,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AccordionItem.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 124,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 86,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AccordionItem.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												120,
												124
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/trigger/AccordionTrigger.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 86,
													"name": "AccordionItem.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										119
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/trigger/AccordionTrigger.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/trigger/AccordionTrigger.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 105,
							"name": "Header",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A heading that labels the corresponding panel.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<h3>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/header/AccordionHeader.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/header/AccordionHeader.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 106,
									"name": "Header",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/header/AccordionHeader.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/accordion/header/AccordionHeader.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 107,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 109,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AccordionHeader.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLHeadingElement"
																},
																"name": "HTMLHeadingElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 82,
							"name": "Item",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups an accordion header with the corresponding panel.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
									"line": 12,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
									"line": 14,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 83,
									"name": "Item",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
											"line": 12,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/accordion/item/AccordionItem.d.ts",
											"line": 14,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 84,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 93,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AccordionItem.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 125,
							"name": "Panel",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A collapsible panel with the accordion item contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/panel/AccordionPanel.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/panel/AccordionPanel.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 126,
									"name": "Panel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/panel/AccordionPanel.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/accordion/panel/AccordionPanel.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 127,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 129,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AccordionPanel.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 56,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the accordion.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 57,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/accordion/root/AccordionRoot.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 58,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 64,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AccordionRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 115,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens and closes the corresponding panel.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Accordion](https://base-ui.com/react/components/accordion)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/accordion/trigger/AccordionTrigger.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/accordion/trigger/AccordionTrigger.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 116,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/accordion/trigger/AccordionTrigger.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/accordion/trigger/AccordionTrigger.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 117,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 119,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AccordionTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								108,
								85,
								128,
								59,
								118
							]
						},
						{
							"title": "Functions",
							"children": [
								105,
								82,
								125,
								56,
								115
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/accordion/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 137,
					"name": "AlertDialog",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 141,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"children": [
								{
									"id": 142,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 143,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 144,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 145,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 146,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 148,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AlertDialogBackdrop.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 147,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 148,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AlertDialogBackdrop.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												143,
												147
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 148,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "AlertDialogBackdrop.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 148,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 149,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 150,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												149,
												150
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
											"line": 14,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										142,
										148
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 154,
							"name": "Close",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that closes the alert dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"children": [
								{
									"id": 155,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 156,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 157,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 158,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 159,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 161,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AlertDialogClose.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 160,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 161,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AlertDialogClose.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												156,
												160
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 161,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "AlertDialogClose.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 161,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 162,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the button is currently disabled."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												162
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										155,
										161
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 166,
							"name": "Description",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A paragraph with additional information about the alert dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<p>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"children": [
								{
									"id": 167,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 168,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 169,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 170,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 171,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 173,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AlertDialogDescription.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 172,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 173,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AlertDialogDescription.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												168,
												172
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "p"
												},
												{
													"type": "reference",
													"target": 173,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "AlertDialogDescription.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 173,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										167,
										173
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 177,
							"name": "Popup",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the alert dialog contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"children": [
								{
									"id": 178,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 184,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 185,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 186,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 187,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 189,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AlertDialogPopup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 183,
											"name": "finalFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines the element to focus when the dialog is closed.\nBy default, focus returns to the trigger."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLElement"
																},
																"name": "HTMLElement",
																"package": "typescript"
															}
														]
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											}
										},
										{
											"id": 179,
											"name": "initialFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines the element to focus when the dialog is opened.\nBy default, the first focusable element is focused."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefObject"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "HTMLElement"
																		},
																		"name": "HTMLElement",
																		"package": "typescript"
																	}
																]
															}
														],
														"name": "RefObject",
														"package": "@types/react",
														"qualifiedName": "React.RefObject"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 180,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
																	"line": 18,
																	"character": 62
																}
															],
															"signatures": [
																{
																	"id": 181,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
																			"line": 18,
																			"character": 62
																		}
																	],
																	"parameters": [
																		{
																			"id": 182,
																			"name": "interactionType",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "build/esm/utils/useEnhancedClickHandler.d.ts",
																					"qualifiedName": "InteractionType"
																				},
																				"name": "InteractionType",
																				"package": "@base-ui-components/react"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.RefObject"
																		},
																		"typeArguments": [
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																							"qualifiedName": "HTMLElement"
																						},
																						"name": "HTMLElement",
																						"package": "typescript"
																					}
																				]
																			}
																		],
																		"name": "RefObject",
																		"package": "@types/react",
																		"qualifiedName": "React.RefObject"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 188,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 189,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AlertDialogPopup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												184,
												183,
												179,
												188
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 189,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "AlertDialogPopup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 189,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 193,
											"name": "hasNestedDialogs",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog has nested dialogs open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 192,
											"name": "nested",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is nested within a parent dialog."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 190,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 191,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												193,
												192,
												190,
												191
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
											"line": 25,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										178,
										189
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 201,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the alert dialog.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"children": [
								{
									"id": 202,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 216,
											"name": "actionsRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A ref to imperative actions."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 217,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 218,
																	"name": "unmount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																			"line": 42,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 219,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																					"line": 42,
																					"character": 17
																				}
																			],
																			"signatures": [
																				{
																					"id": 220,
																					"name": "__type",
																					"variant": "signature",
																					"kind": 4096,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																							"line": 42,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "void"
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		218
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																	"line": 41,
																	"character": 33
																}
															]
														}
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.actionsRef"
											}
										},
										{
											"id": 204,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.children"
											}
										},
										{
											"id": 211,
											"name": "defaultOpen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is initially open.\n\nTo render a controlled dialog, use the "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.defaultOpen"
											}
										},
										{
											"id": 205,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the dialog is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 28,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 206,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
															"line": 28,
															"character": 19
														}
													],
													"signatures": [
														{
															"id": 207,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																	"line": 28,
																	"character": 19
																}
															],
															"parameters": [
																{
																	"id": 208,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 209,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			}
																		]
																	}
																},
																{
																	"id": 210,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "build/esm/utils/translateOpenChangeReason.d.ts",
																					"qualifiedName": "OpenChangeReason"
																				},
																				"name": "OpenChangeReason",
																				"package": "@base-ui-components/react"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.onOpenChange"
											}
										},
										{
											"id": 212,
											"name": "onOpenChangeComplete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called after any animations complete when the dialog is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 213,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
															"line": 32,
															"character": 27
														}
													],
													"signatures": [
														{
															"id": 214,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																	"line": 32,
																	"character": 27
																}
															],
															"parameters": [
																{
																	"id": 215,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.onOpenChangeComplete"
											}
										},
										{
											"id": 203,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 12,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.open"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												216,
												204,
												211,
												205,
												212,
												203
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 481,
													"name": "DialogRoot.Props",
													"package": "@base-ui-components/react"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "modal"
														},
														{
															"type": "literal",
															"value": "dismissible"
														}
													]
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 221,
									"name": "Actions",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
											"line": 13,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": 502,
										"name": "DialogRoot.Actions",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										202
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										221
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 225,
							"name": "Title",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A heading that labels the dialog.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<h2>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"children": [
								{
									"id": 226,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 227,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 228,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 229,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 230,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 232,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AlertDialogTitle.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 231,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 232,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AlertDialogTitle.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												227,
												231
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "h2"
												},
												{
													"type": "reference",
													"target": 232,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "AlertDialogTitle.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 232,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										226,
										232
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 236,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the alert dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"children": [
								{
									"id": 237,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 238,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 239,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 240,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 241,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 243,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AlertDialogTrigger.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 242,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 243,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AlertDialogTrigger.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												238,
												242
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 243,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "AlertDialogTrigger.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 243,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 244,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently disabled."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 245,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												244,
												245
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										237,
										243
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 138,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 139,
									"name": "Backdrop",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 140,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 142,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AlertDialogBackdrop.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 151,
							"name": "Close",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that closes the alert dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 152,
									"name": "Close",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/alert-dialog/close/AlertDialogClose.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 153,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 155,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AlertDialogClose.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 163,
							"name": "Description",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A paragraph with additional information about the alert dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<p>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 164,
									"name": "Description",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 165,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 167,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AlertDialogDescription.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLParagraphElement"
																},
																"name": "HTMLParagraphElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 174,
							"name": "Popup",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the alert dialog contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 175,
									"name": "Popup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 176,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 178,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AlertDialogPopup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 194,
							"name": "Portal",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"children": [
								{
									"id": 197,
									"name": "propTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										197
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
									"line": 8,
									"character": 24
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
									"line": 9,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 195,
									"name": "Portal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A portal element that moves the popup to a different part of the DOM.\nBy default, the portal element is appended to "
											},
											{
												"kind": "code",
												"text": "`<body>`"
											},
											{
												"kind": "text",
												"text": ".\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
											"line": 8,
											"character": 24
										}
									],
									"parameters": [
										{
											"id": 196,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
													"qualifiedName": "AlertDialogPortal.Props"
												},
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "AlertDialogPortal.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										]
									}
								}
							]
						},
						{
							"id": 198,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the alert dialog.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 199,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 200,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 202,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "AlertDialogRoot.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						},
						{
							"id": 222,
							"name": "Title",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A heading that labels the dialog.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<h2>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 223,
									"name": "Title",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 224,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 226,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AlertDialogTitle.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLParagraphElement"
																},
																"name": "HTMLParagraphElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 233,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the alert dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Alert Dialog](https://base-ui.com/react/components/alert-dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 234,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 235,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 237,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AlertDialogTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								141,
								154,
								166,
								177,
								201,
								225,
								236
							]
						},
						{
							"title": "Functions",
							"children": [
								138,
								151,
								163,
								174,
								194,
								198,
								222,
								233
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/alert-dialog/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 246,
					"name": "Avatar",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 276,
							"name": "Fallback",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rendered when the image fails to load or when no image is provided.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)"
									}
								]
							},
							"children": [
								{
									"id": 277,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 279,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 280,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 281,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 282,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 257,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AvatarRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 278,
											"name": "delay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before showing the fallback. Specified in milliseconds."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/avatar/fallback/AvatarFallback.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 283,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 257,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AvatarRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												279,
												278,
												283
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/avatar/fallback/AvatarFallback.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 257,
													"name": "AvatarRoot.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										277
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/avatar/fallback/AvatarFallback.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/avatar/fallback/AvatarFallback.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 262,
							"name": "Image",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The image to be displayed in the avatar.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<img>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)"
									}
								]
							},
							"children": [
								{
									"id": 263,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 268,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 269,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 270,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 271,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 257,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AvatarRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 264,
											"name": "onLoadingStatusChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback fired when the loading status changes."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 265,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
															"line": 17,
															"character": 32
														}
													],
													"signatures": [
														{
															"id": 266,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
																	"line": 17,
																	"character": 32
																}
															],
															"parameters": [
																{
																	"id": 267,
																	"name": "status",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "build/esm/avatar/image/useImageLoadingStatus.d.ts",
																			"qualifiedName": "ImageLoadingStatus"
																		},
																		"name": "ImageLoadingStatus",
																		"package": "@base-ui-components/react"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 272,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 257,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AvatarRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												268,
												264,
												272
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "img"
												},
												{
													"type": "reference",
													"target": 257,
													"name": "AvatarRoot.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										263
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 250,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays a user's profile picture, initials, or fallback icon.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)"
									}
								]
							},
							"children": [
								{
									"id": 251,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 252,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 253,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 254,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 255,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 257,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "AvatarRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 256,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 257,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "AvatarRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												252,
												256
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 257,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "AvatarRoot.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 257,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 258,
											"name": "imageLoadingStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/avatar/root/AvatarRoot.d.ts",
													"qualifiedName": "ImageLoadingStatus"
												},
												"name": "ImageLoadingStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												258
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
											"line": 14,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										251,
										257
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 273,
							"name": "Fallback",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rendered when the image fails to load or when no image is provided.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/avatar/fallback/AvatarFallback.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/avatar/fallback/AvatarFallback.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 274,
									"name": "Fallback",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/avatar/fallback/AvatarFallback.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/avatar/fallback/AvatarFallback.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 275,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 277,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AvatarFallback.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 259,
							"name": "Image",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The image to be displayed in the avatar.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<img>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 260,
									"name": "Image",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/avatar/image/AvatarImage.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 261,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 263,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AvatarImage.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLImageElement"
																},
																"name": "HTMLImageElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 247,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays a user's profile picture, initials, or fallback icon.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Avatar](https://base-ui.com/react/components/avatar)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 248,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/avatar/root/AvatarRoot.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 249,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 251,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "AvatarRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								276,
								262,
								250
							]
						},
						{
							"title": "Functions",
							"children": [
								273,
								259,
								247
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/avatar/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 284,
					"name": "Checkbox",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 326,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the checkbox is ticked.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Checkbox](https://base-ui.com/react/components/checkbox)"
									}
								]
							},
							"children": [
								{
									"id": 339,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 341,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 342,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 343,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 344,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 327,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "CheckboxIndicator.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 340,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the element in the DOM when the checkbox is not checked."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 345,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 327,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "CheckboxIndicator.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												341,
												340,
												345
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
											"line": 16,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 327,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "CheckboxIndicator.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 327,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 329,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox is currently ticked."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 290,
												"name": "State.checked"
											}
										},
										{
											"id": 335,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 296,
												"name": "State.dirty"
											}
										},
										{
											"id": 330,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 291,
												"name": "State.disabled"
											}
										},
										{
											"id": 337,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 298,
												"name": "State.filled"
											}
										},
										{
											"id": 338,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 299,
												"name": "State.focused"
											}
										},
										{
											"id": 333,
											"name": "indeterminate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox is in a mixed state: neither ticked, nor unticked."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 33,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 294,
												"name": "State.indeterminate"
											}
										},
										{
											"id": 331,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to tick or untick the checkbox."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 292,
												"name": "State.readOnly"
											}
										},
										{
											"id": 332,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must tick the checkbox before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 293,
												"name": "State.required"
											}
										},
										{
											"id": 334,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 295,
												"name": "State.touched"
											}
										},
										{
											"id": 328,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 336,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 297,
												"name": "State.valid"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												329,
												335,
												330,
												337,
												338,
												333,
												331,
												332,
												334,
												328,
												336
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 289,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "CheckboxRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										339,
										327
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 288,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents the checkbox itself.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element and a hidden "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " beside.\n\nDocumentation: [Base UI Checkbox](https://base-ui.com/react/components/checkbox)"
									}
								]
							},
							"children": [
								{
									"id": 300,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 313,
											"name": "autoFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to focus the element on page load."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 54,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.autoFocus"
											}
										},
										{
											"id": 303,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox is currently ticked.\n\nTo render an uncontrolled checkbox, use the "
													},
													{
														"kind": "code",
														"text": "`defaultChecked`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nundefined\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.checked"
											}
										},
										{
											"id": 318,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 319,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 320,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 321,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 289,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "CheckboxRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 304,
											"name": "defaultChecked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox is initially ticked.\n\nTo render a controlled checkbox, use the "
													},
													{
														"kind": "code",
														"text": "`checked`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.defaultChecked"
											}
										},
										{
											"id": 305,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 32,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.disabled"
											}
										},
										{
											"id": 301,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 8,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.id"
											}
										},
										{
											"id": 314,
											"name": "indeterminate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox is in a mixed state: neither ticked, nor unticked."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 59,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.indeterminate"
											}
										},
										{
											"id": 315,
											"name": "inputRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A React ref to access the hidden "
													},
													{
														"kind": "code",
														"text": "`<input>`"
													},
													{
														"kind": "text",
														"text": " element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 63,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.Ref"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLInputElement"
														},
														"name": "HTMLInputElement",
														"package": "typescript"
													}
												],
												"name": "Ref",
												"package": "@types/react",
												"qualifiedName": "React.Ref"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.inputRef"
											}
										},
										{
											"id": 302,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Identifies the field when a form is submitted."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nundefined\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.name"
											}
										},
										{
											"id": 306,
											"name": "onCheckedChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the checkbox is ticked or unticked."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 307,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
															"line": 39,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 308,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
																	"line": 39,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 309,
																	"name": "checked",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The new checked state."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 310,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The corresponding event that initiated the change."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.onCheckedChange"
											}
										},
										{
											"id": 316,
											"name": "parent",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox controls a group of child checkboxes.\n\nMust be used in a [Checkbox Group](https://base-ui.com/react/components/checkbox-group)."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 70,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.parent"
											}
										},
										{
											"id": 311,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to tick or untick the checkbox."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.readOnly"
											}
										},
										{
											"id": 322,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 289,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "CheckboxRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										},
										{
											"id": 312,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must tick the checkbox before submitting a form."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.required"
											}
										},
										{
											"id": 317,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value of the selected checkbox."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/useCheckboxRoot.d.ts",
													"line": 74,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useCheckboxRoot.Parameters.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												313,
												303,
												318,
												304,
												305,
												301,
												314,
												315,
												302,
												306,
												316,
												311,
												322,
												312,
												317
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
											"line": 35,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
												"qualifiedName": "useCheckboxRoot.Parameters"
											},
											"name": "Parameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useCheckboxRoot.Parameters"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "button"
														},
														{
															"type": "reference",
															"target": 289,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "CheckboxRoot.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "onChange"
														},
														{
															"type": "literal",
															"value": "value"
														}
													]
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 289,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 290,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox is currently ticked."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 296,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 543,
												"name": "State.dirty"
											}
										},
										{
											"id": 291,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"overwrites": {
												"type": "reference",
												"target": 541,
												"name": "State.disabled"
											}
										},
										{
											"id": 298,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 545,
												"name": "State.filled"
											}
										},
										{
											"id": 299,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 546,
												"name": "State.focused"
											}
										},
										{
											"id": 294,
											"name": "indeterminate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox is in a mixed state: neither ticked, nor unticked."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 33,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 292,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to tick or untick the checkbox."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 293,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must tick the checkbox before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 295,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 542,
												"name": "State.touched"
											}
										},
										{
											"id": 297,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 544,
												"name": "State.valid"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												290,
												296,
												291,
												298,
												299,
												294,
												292,
												293,
												295,
												297
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 540,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "FieldRoot.State"
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"target": 327,
											"name": "State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										300,
										289
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 323,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the checkbox is ticked.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Checkbox](https://base-ui.com/react/components/checkbox)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 324,
									"name": "Indicator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 325,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 339,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "CheckboxIndicator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 285,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents the checkbox itself.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element and a hidden "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " beside.\n\nDocumentation: [Base UI Checkbox](https://base-ui.com/react/components/checkbox)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 286,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/checkbox/root/CheckboxRoot.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 287,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 300,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "CheckboxRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								326,
								288
							]
						},
						{
							"title": "Functions",
							"children": [
								323,
								285
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/checkbox/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 349,
					"name": "CheckboxGroup",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides a shared state to a series of checkboxes.\n\nDocumentation: [Base UI Checkbox Group](https://base-ui.com/react/components/checkbox-group)"
							}
						]
					},
					"children": [
						{
							"id": 357,
							"name": "Props",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 365,
									"name": "allValues",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Names of all checkboxes in the group. Use this when creating a parent checkbox."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
											"line": 38,
											"character": 8
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 367,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 368,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/utils/types.d.ts",
															"line": 32,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 369,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 370,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 350,
																		"name": "State",
																		"package": "@base-ui-components/react",
																		"qualifiedName": "CheckboxGroup.State"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "BaseUIComponentProps.className"
									}
								},
								{
									"id": 359,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Names of the checkboxes in the group that should be initially ticked.\n\nTo render a controlled checkbox group, use the "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " prop instead."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
											"line": 29,
											"character": 8
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "BaseUIComponentProps.defaultValue"
									}
								},
								{
									"id": 366,
									"name": "disabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the component should ignore user interaction."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
											"line": 43,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 360,
									"name": "onValueChange",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler called when a checkbox in the group is ticked or unticked.\nProvides the new value as an argument."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
											"line": 34,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 361,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
													"line": 34,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 362,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
															"line": 34,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 363,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														},
														{
															"id": 364,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 371,
									"name": "render",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
											},
											{
												"kind": "code",
												"text": "`ReactElement`"
											},
											{
												"kind": "text",
												"text": " or a function that returns the element to render."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 39,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactElement"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.JSXElementConstructor"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "JSXElementConstructor",
																"package": "@types/react",
																"qualifiedName": "React.JSXElementConstructor"
															}
														]
													}
												],
												"name": "ReactElement",
												"package": "@types/react",
												"qualifiedName": "React.ReactElement"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/types.d.ts",
													"qualifiedName": "ComponentRenderFn"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "GenericHTMLProps"
														},
														"name": "GenericHTMLProps",
														"package": "@base-ui-components/react"
													},
													{
														"type": "reference",
														"target": 350,
														"name": "State",
														"package": "@base-ui-components/react",
														"qualifiedName": "CheckboxGroup.State"
													}
												],
												"name": "ComponentRenderFn",
												"package": "@base-ui-components/react"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "BaseUIComponentProps.render"
									}
								},
								{
									"id": 358,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Names of the checkboxes in the group that should be ticked.\n\nTo render an uncontrolled checkbox group, use the "
											},
											{
												"kind": "code",
												"text": "`defaultValue`"
											},
											{
												"kind": "text",
												"text": " prop instead."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
											"line": 23,
											"character": 8
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										365,
										367,
										359,
										366,
										360,
										371,
										358
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
									"line": 17,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "build/esm/utils/types.d.ts",
										"qualifiedName": "BaseUIComponentProps"
									},
									"typeArguments": [
										{
											"type": "literal",
											"value": "div"
										},
										{
											"type": "reference",
											"target": 350,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "CheckboxGroup.State"
										}
									],
									"name": "BaseUIComponentProps",
									"package": "@base-ui-components/react"
								}
							]
						},
						{
							"id": 350,
							"name": "State",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 353,
									"name": "dirty",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 543,
										"name": "State.dirty"
									}
								},
								{
									"id": 351,
									"name": "disabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the component should ignore user interaction."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
											"line": 15,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"target": 541,
										"name": "State.disabled"
									}
								},
								{
									"id": 355,
									"name": "filled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 38,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 545,
										"name": "State.filled"
									}
								},
								{
									"id": 356,
									"name": "focused",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 39,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 546,
										"name": "State.focused"
									}
								},
								{
									"id": 352,
									"name": "touched",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 35,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 542,
										"name": "State.touched"
									}
								},
								{
									"id": 354,
									"name": "valid",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 37,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 544,
										"name": "State.valid"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										353,
										351,
										355,
										356,
										352,
										354
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
									"line": 11,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": 540,
									"name": "State",
									"package": "@base-ui-components/react",
									"qualifiedName": "FieldRoot.State"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								357,
								350
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
							"line": 9,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
							"line": 10,
							"character": 25
						}
					]
				},
				{
					"id": 372,
					"name": "Collapsible",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 407,
							"name": "Panel",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A panel with the collapsible contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)"
									}
								]
							},
							"children": [
								{
									"id": 408,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 411,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 412,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 413,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 414,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 377,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "CollapsibleRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 409,
											"name": "hiddenUntilFound",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows the browser’s built-in page search to find and expand the panel contents.\n\nOverrides the "
													},
													{
														"kind": "code",
														"text": "`keepMounted`"
													},
													{
														"kind": "text",
														"text": " prop and uses "
													},
													{
														"kind": "code",
														"text": "`hidden=\"until-found\"`"
													},
													{
														"kind": "text",
														"text": "\nto hide the element without removing it from the DOM."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 410,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the element in the DOM while the panel is hidden.\nThis prop is ignored when "
													},
													{
														"kind": "code",
														"text": "`hiddenUntilFound`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 415,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 377,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "CollapsibleRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												411,
												409,
												410,
												415
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 377,
													"name": "CollapsibleRoot.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										408
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 376,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the collapsible.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)"
									}
								]
							},
							"children": [
								{
									"id": 381,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 390,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 391,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 392,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 393,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 377,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "CollapsibleRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 384,
											"name": "defaultOpen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the collapsible panel is initially open.\n\nTo render a controlled collapsible, use the "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.defaultOpen"
											}
										},
										{
											"id": 389,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.disabled"
											}
										},
										{
											"id": 385,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the panel is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 386,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
															"line": 22,
															"character": 22
														}
													],
													"signatures": [
														{
															"id": 387,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
																	"line": 22,
																	"character": 22
																}
															],
															"parameters": [
																{
																	"id": 388,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.onOpenChange"
											}
										},
										{
											"id": 383,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the collapsible panel is currently open.\n\nTo render an uncontrolled collapsible, use the "
													},
													{
														"kind": "code",
														"text": "`defaultOpen`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 11,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.open"
											}
										},
										{
											"id": 382,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 377,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "CollapsibleRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												390,
												384,
												389,
												385,
												383,
												382
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
														"qualifiedName": "useCollapsibleRoot.Parameters"
													},
													"name": "useCollapsibleRoot.Parameters",
													"package": "@base-ui-components/react"
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "div"
														},
														{
															"type": "reference",
															"target": 377,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "CollapsibleRoot.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "render"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 377,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 379,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Pick.disabled"
											}
										},
										{
											"id": 378,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the collapsible panel is currently open.\n\nTo render an uncontrolled collapsible, use the "
													},
													{
														"kind": "code",
														"text": "`defaultOpen`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Pick.open"
											}
										},
										{
											"id": 380,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/collapsible/root/useCollapsibleRoot.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Pick.transitionStatus"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												379,
												378,
												380
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Pick"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
														"qualifiedName": "useCollapsibleRoot.ReturnValue"
													},
													"name": "useCollapsibleRoot.ReturnValue",
													"package": "@base-ui-components/react"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "open"
														},
														{
															"type": "literal",
															"value": "disabled"
														},
														{
															"type": "literal",
															"value": "transitionStatus"
														}
													]
												}
											],
											"name": "Pick",
											"package": "typescript"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										381,
										377
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 397,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens and closes the collapsible panel.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)"
									}
								]
							},
							"children": [
								{
									"id": 398,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 399,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 400,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 401,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 402,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 377,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "CollapsibleRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 403,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 377,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "CollapsibleRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												399,
												403
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 377,
													"name": "CollapsibleRoot.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										398
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 404,
							"name": "Panel",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A panel with the collapsible contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 405,
									"name": "Panel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/collapsible/panel/CollapsiblePanel.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 406,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 408,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "CollapsiblePanel.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 373,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the collapsible.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 374,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/collapsible/root/CollapsibleRoot.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 375,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 381,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "CollapsibleRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 394,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens and closes the collapsible panel.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Collapsible](https://base-ui.com/react/components/collapsible)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 395,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 396,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 398,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "CollapsibleTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								407,
								376,
								397
							]
						},
						{
							"title": "Functions",
							"children": [
								404,
								373,
								394
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/collapsible/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 416,
					"name": "Dialog",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 420,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"children": [
								{
									"id": 421,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 422,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 423,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 424,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 425,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 427,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "DialogBackdrop.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 426,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 427,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "DialogBackdrop.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												422,
												426
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 427,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "DialogBackdrop.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 427,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 428,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 429,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												428,
												429
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
											"line": 14,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										421,
										427
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 433,
							"name": "Close",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that closes the dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"children": [
								{
									"id": 434,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 435,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 436,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 437,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 438,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 440,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "DialogClose.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 439,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 440,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "DialogClose.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												435,
												439
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 440,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "DialogClose.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 440,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 441,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the button is currently disabled."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												441
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										434,
										440
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 445,
							"name": "Description",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A paragraph with additional information about the dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<p>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"children": [
								{
									"id": 446,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 447,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 448,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 449,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 450,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 452,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "DialogDescription.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 451,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 452,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "DialogDescription.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												447,
												451
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/description/DialogDescription.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "p"
												},
												{
													"type": "reference",
													"target": 452,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "DialogDescription.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 452,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/description/DialogDescription.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										446,
										452
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/description/DialogDescription.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/description/DialogDescription.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 456,
							"name": "Popup",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the dialog contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"children": [
								{
									"id": 457,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 463,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 464,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 465,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 466,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 468,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "DialogPopup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 462,
											"name": "finalFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines the element to focus when the dialog is closed.\nBy default, focus returns to the trigger."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLElement"
																},
																"name": "HTMLElement",
																"package": "typescript"
															}
														]
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											}
										},
										{
											"id": 458,
											"name": "initialFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines the element to focus when the dialog is opened.\nBy default, the first focusable element is focused."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefObject"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "HTMLElement"
																		},
																		"name": "HTMLElement",
																		"package": "typescript"
																	}
																]
															}
														],
														"name": "RefObject",
														"package": "@types/react",
														"qualifiedName": "React.RefObject"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 459,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
																	"line": 18,
																	"character": 62
																}
															],
															"signatures": [
																{
																	"id": 460,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
																			"line": 18,
																			"character": 62
																		}
																	],
																	"parameters": [
																		{
																			"id": 461,
																			"name": "interactionType",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "build/esm/utils/useEnhancedClickHandler.d.ts",
																					"qualifiedName": "InteractionType"
																				},
																				"name": "InteractionType",
																				"package": "@base-ui-components/react"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.RefObject"
																		},
																		"typeArguments": [
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																							"qualifiedName": "HTMLElement"
																						},
																						"name": "HTMLElement",
																						"package": "typescript"
																					}
																				]
																			}
																		],
																		"name": "RefObject",
																		"package": "@types/react",
																		"qualifiedName": "React.RefObject"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 467,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 468,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "DialogPopup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												463,
												462,
												458,
												467
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 468,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "DialogPopup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 468,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 472,
											"name": "hasNestedDialogs",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog has nested dialogs open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 471,
											"name": "nested",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is nested within a parent dialog."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 469,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 470,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												472,
												471,
												469,
												470
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
											"line": 25,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										457,
										468
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 480,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the dialog.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"children": [
								{
									"id": 481,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 497,
											"name": "actionsRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A ref to imperative actions."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 498,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 499,
																	"name": "unmount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																			"line": 42,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 500,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																					"line": 42,
																					"character": 17
																				}
																			],
																			"signatures": [
																				{
																					"id": 501,
																					"name": "__type",
																					"variant": "signature",
																					"kind": 4096,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																							"line": 42,
																							"character": 17
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "void"
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		499
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																	"line": 41,
																	"character": 33
																}
															]
														}
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "SharedParameters.actionsRef"
											}
										},
										{
											"id": 482,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										},
										{
											"id": 484,
											"name": "defaultOpen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is initially open.\n\nTo render a controlled dialog, use the "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "SharedParameters.defaultOpen"
											}
										},
										{
											"id": 496,
											"name": "dismissible",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines whether the dialog should close on outside clicks."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 37,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "SharedParameters.dismissible"
											}
										},
										{
											"id": 485,
											"name": "modal",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog should prevent outside clicks and lock page scroll when open."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 24,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "SharedParameters.modal"
											}
										},
										{
											"id": 486,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the dialog is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 28,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 487,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
															"line": 28,
															"character": 19
														}
													],
													"signatures": [
														{
															"id": 488,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																	"line": 28,
																	"character": 19
																}
															],
															"parameters": [
																{
																	"id": 489,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 490,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			}
																		]
																	}
																},
																{
																	"id": 491,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "build/esm/utils/translateOpenChangeReason.d.ts",
																					"qualifiedName": "OpenChangeReason"
																				},
																				"name": "OpenChangeReason",
																				"package": "@base-ui-components/react"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "SharedParameters.onOpenChange"
											}
										},
										{
											"id": 492,
											"name": "onOpenChangeComplete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called after any animations complete when the dialog is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 493,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
															"line": 32,
															"character": 27
														}
													],
													"signatures": [
														{
															"id": 494,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
																	"line": 32,
																	"character": 27
																}
															],
															"parameters": [
																{
																	"id": 495,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "SharedParameters.onOpenChangeComplete"
											}
										},
										{
											"id": 483,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/root/useDialogRoot.d.ts",
													"line": 12,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "SharedParameters.open"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												497,
												482,
												484,
												496,
												485,
												486,
												492,
												483
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
												"qualifiedName": "SharedParameters"
											},
											"name": "SharedParameters",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 502,
									"name": "Actions",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
											"line": 14,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
											"qualifiedName": "useDialogRoot.Actions"
										},
										"name": "useDialogRoot.Actions",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										481
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										502
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 506,
							"name": "Title",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A heading that labels the dialog.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<h2>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"children": [
								{
									"id": 507,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 508,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 509,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 510,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 511,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 513,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "DialogTitle.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 512,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 513,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "DialogTitle.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												508,
												512
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/title/DialogTitle.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "h2"
												},
												{
													"type": "reference",
													"target": 513,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "DialogTitle.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 513,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/title/DialogTitle.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										507,
										513
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/title/DialogTitle.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/title/DialogTitle.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 517,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"children": [
								{
									"id": 518,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 519,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 520,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 521,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 522,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 524,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "DialogTrigger.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 523,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 524,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "DialogTrigger.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												519,
												523
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 524,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "DialogTrigger.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 524,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 525,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently disabled."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 526,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the dialog is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												525,
												526
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										518,
										524
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 417,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 418,
									"name": "Backdrop",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/dialog/backdrop/DialogBackdrop.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 419,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 421,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "DialogBackdrop.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 430,
							"name": "Close",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that closes the dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 431,
									"name": "Close",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/dialog/close/DialogClose.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 432,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 434,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "DialogClose.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 442,
							"name": "Description",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A paragraph with additional information about the dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<p>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/description/DialogDescription.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/description/DialogDescription.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 443,
									"name": "Description",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/description/DialogDescription.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/dialog/description/DialogDescription.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 444,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 446,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "DialogDescription.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLParagraphElement"
																},
																"name": "HTMLParagraphElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 453,
							"name": "Popup",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the dialog contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 454,
									"name": "Popup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/dialog/popup/DialogPopup.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 455,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 457,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "DialogPopup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 473,
							"name": "Portal",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"children": [
								{
									"id": 476,
									"name": "propTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/portal/DialogPortal.d.ts",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										476
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/portal/DialogPortal.d.ts",
									"line": 8,
									"character": 24
								},
								{
									"fileName": "packages/react/build/esm/dialog/portal/DialogPortal.d.ts",
									"line": 9,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/dialog/portal/DialogPortal.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 474,
									"name": "Portal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A portal element that moves the popup to a different part of the DOM.\nBy default, the portal element is appended to "
											},
											{
												"kind": "code",
												"text": "`<body>`"
											},
											{
												"kind": "text",
												"text": ".\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/portal/DialogPortal.d.ts",
											"line": 8,
											"character": 24
										}
									],
									"parameters": [
										{
											"id": 475,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/dialog/portal/DialogPortal.d.ts",
													"qualifiedName": "DialogPortal.Props"
												},
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "DialogPortal.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										]
									}
								}
							]
						},
						{
							"id": 477,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the dialog.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 478,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/dialog/root/DialogRoot.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 479,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 481,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "DialogRoot.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						},
						{
							"id": 503,
							"name": "Title",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A heading that labels the dialog.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<h2>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/title/DialogTitle.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/title/DialogTitle.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 504,
									"name": "Title",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/title/DialogTitle.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/dialog/title/DialogTitle.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 505,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 507,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "DialogTitle.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLParagraphElement"
																},
																"name": "HTMLParagraphElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 514,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the dialog.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Dialog](https://base-ui.com/react/components/dialog)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 515,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/dialog/trigger/DialogTrigger.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 516,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 518,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "DialogTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								420,
								433,
								445,
								456,
								480,
								506,
								517
							]
						},
						{
							"title": "Functions",
							"children": [
								417,
								430,
								442,
								453,
								473,
								477,
								503,
								514
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/dialog/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 530,
					"name": "DirectionProvider",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enables RTL behavior for Base UI components.\n\nDocumentation: [Base UI Direction Provider](https://base-ui.com/react/utils/direction-provider)"
							}
						]
					},
					"children": [
						{
							"id": 531,
							"name": "Props",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 532,
									"name": "children",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
											"line": 11,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								},
								{
									"id": 533,
									"name": "direction",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reading direction of the text"
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n'ltr'\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
											"line": 16,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 534,
										"name": "TextDirection",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										532,
										533
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
									"line": 10,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								531
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
							"line": 8,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
							"line": 9,
							"character": 25
						}
					]
				},
				{
					"id": 535,
					"name": "Field",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 600,
							"name": "Control",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The form control to label and validate.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nYou can omit this part and use any Base UI input component instead. For example,\n[Input](https://base-ui.com/react/components/input), [Checkbox](https://base-ui.com/react/components/checkbox),\nor [Select](https://base-ui.com/react/components/select), among others, will work with Field out of the box.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"children": [
								{
									"id": 602,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 608,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 609,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 610,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 611,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 540,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "FieldRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 603,
											"name": "onValueChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback fired when the "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " changes. Use when controlled."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 604,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
															"line": 21,
															"character": 24
														}
													],
													"signatures": [
														{
															"id": 605,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
																	"line": 21,
																	"character": 24
																}
															],
															"parameters": [
																{
																	"id": 606,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "typeOperator",
																				"operator": "readonly",
																				"target": {
																					"type": "array",
																					"elementType": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			}
																		]
																	}
																},
																{
																	"id": 607,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 612,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 540,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "FieldRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												608,
												603,
												612
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
											"line": 17,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "input"
												},
												{
													"type": "reference",
													"target": 601,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "FieldControl.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 601,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
											"line": 16,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": 540,
										"name": "FieldRoot.State",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										602
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										601
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
									"line": 14,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
									"line": 15,
									"character": 25
								}
							]
						},
						{
							"id": 589,
							"name": "Description",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A paragraph with additional information about the field.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<p>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"children": [
								{
									"id": 591,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 592,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 593,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 594,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 595,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 540,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "FieldRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 596,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 540,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "FieldRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												592,
												596
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/description/FieldDescription.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "p"
												},
												{
													"type": "reference",
													"target": 590,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "FieldDescription.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 590,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/description/FieldDescription.d.ts",
											"line": 12,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": 540,
										"name": "FieldRoot.State",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										591
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										590
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/description/FieldDescription.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/description/FieldDescription.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 576,
							"name": "Error",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An error message displayed if the field control fails validation.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"children": [
								{
									"id": 578,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 581,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 582,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 583,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 584,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 540,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "FieldRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 580,
											"name": "forceShow",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the error message should be shown regardless of the field’s validity."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 579,
											"name": "match",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines whether to show the error message according to the field’s\n[ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "unknown",
												"name": "keyof ValidityState"
											}
										},
										{
											"id": 585,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 540,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "FieldRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												581,
												580,
												579,
												585
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 577,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "FieldError.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 577,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
											"line": 12,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": 540,
										"name": "FieldRoot.State",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										578
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										577
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 565,
							"name": "Label",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An accessible label that is automatically associated with the field control.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<label>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"children": [
								{
									"id": 567,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 568,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 569,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 570,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 571,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 540,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "FieldRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 572,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 540,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "FieldRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												568,
												572
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/label/FieldLabel.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 566,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "FieldLabel.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 566,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/label/FieldLabel.d.ts",
											"line": 12,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": 540,
										"name": "FieldRoot.State",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										567
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										566
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/label/FieldLabel.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/label/FieldLabel.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 539,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the field.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"children": [
								{
									"id": 547,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 557,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 558,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 559,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 560,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 540,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "FieldRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 548,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction.\nTakes precedence over the "
													},
													{
														"kind": "code",
														"text": "`disabled`"
													},
													{
														"kind": "text",
														"text": " prop on the "
													},
													{
														"kind": "code",
														"text": "`<Field.Control>`"
													},
													{
														"kind": "text",
														"text": " component."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 47,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 556,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is forcefully marked as invalid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 75,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 549,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Identifies the field when a form is submitted.\nTakes precedence over the "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " prop on the "
													},
													{
														"kind": "code",
														"text": "`<Field.Control>`"
													},
													{
														"kind": "text",
														"text": " component."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 52,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 561,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 540,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "FieldRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 550,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A function for custom validation. Return a string or an array of strings with\nthe error message(s) if the value is invalid, or "
													},
													{
														"kind": "code",
														"text": "`null`"
													},
													{
														"kind": "text",
														"text": " if the value is valid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 57,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 551,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 57,
															"character": 19
														}
													],
													"signatures": [
														{
															"id": 552,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
																	"line": 57,
																	"character": 19
																}
															],
															"parameters": [
																{
																	"id": 553,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "array",
																						"elementType": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				]
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										},
										{
											"id": 555,
											"name": "validationDebounceTime",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait between "
													},
													{
														"kind": "code",
														"text": "`validate`"
													},
													{
														"kind": "text",
														"text": " callbacks if\n"
													},
													{
														"kind": "code",
														"text": "`validationMode=\"onChange\"`"
													},
													{
														"kind": "text",
														"text": " is used. Specified in milliseconds."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 71,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 554,
											"name": "validationMode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines when the field should be validated.\n\n- **onBlur** triggers validation when the control loses focus\n- **onChange** triggers validation on every change to the control value"
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'onBlur'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 65,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "onBlur"
													},
													{
														"type": "literal",
														"value": "onChange"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												557,
												548,
												556,
												549,
												561,
												550,
												555,
												554
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 41,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 540,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "FieldRoot.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 540,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 543,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 541,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 545,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 546,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 542,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 544,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												543,
												541,
												545,
												546,
												542,
												544
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 30,
											"character": 14
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"target": 289,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 350,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1016,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1552,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1904,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 2090,
											"name": "State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										547,
										540
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
									"line": 29,
									"character": 25
								}
							]
						},
						{
							"id": 616,
							"name": "Validity",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to display a custom message based on the field’s validity.\nRequires "
									},
									{
										"kind": "code",
										"text": "`children`"
									},
									{
										"kind": "text",
										"text": " to be a function that accepts field validity state as an argument.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"children": [
								{
									"id": 618,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 619,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A function that accepts the field validity state as an argument.\n\n"
													},
													{
														"kind": "code",
														"text": "```jsx\n<Field.Validity>\n  {(validity) => {\n    return <div>...</div>\n  }}\n</Field.Validity>\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 620,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
															"line": 28,
															"character": 18
														}
													],
													"signatures": [
														{
															"id": 621,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
																	"line": 28,
																	"character": 18
																}
															],
															"parameters": [
																{
																	"id": 622,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
																			"qualifiedName": "FieldValidityState"
																		},
																		"name": "FieldValidityState",
																		"package": "@base-ui-components/react"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.ReactNode"
																},
																"name": "ReactNode",
																"package": "@types/react",
																"qualifiedName": "React.ReactNode"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												619
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
											"line": 16,
											"character": 14
										}
									]
								},
								{
									"id": 617,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
											"line": 14,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										618,
										617
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
									"line": 13,
									"character": 25
								}
							]
						},
						{
							"id": 623,
							"name": "ValidityData",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 637,
									"name": "error",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 24,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 638,
									"name": "errors",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 25,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 640,
									"name": "initialValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 27,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 624,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 11,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 625,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 626,
													"name": "badInput",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 12,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 627,
													"name": "customError",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 13,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 628,
													"name": "patternMismatch",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 14,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 629,
													"name": "rangeOverflow",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 630,
													"name": "rangeUnderflow",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 16,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 631,
													"name": "stepMismatch",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 17,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 632,
													"name": "tooLong",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 18,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 633,
													"name": "tooShort",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 19,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 634,
													"name": "typeMismatch",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 636,
													"name": "valid",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 22,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														]
													}
												},
												{
													"id": 635,
													"name": "valueMissing",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
															"line": 21,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														626,
														627,
														628,
														629,
														630,
														631,
														632,
														633,
														634,
														636,
														635
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 11,
													"character": 11
												}
											]
										}
									}
								},
								{
									"id": 639,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 26,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										637,
										638,
										640,
										624,
										639
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
									"line": 10,
									"character": 17
								}
							]
						},
						{
							"id": 597,
							"name": "Control",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The form control to label and validate.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nYou can omit this part and use any Base UI input component instead. For example,\n[Input](https://base-ui.com/react/components/input), [Checkbox](https://base-ui.com/react/components/checkbox),\nor [Select](https://base-ui.com/react/components/select), among others, will work with Field out of the box.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
									"line": 14,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
									"line": 15,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 598,
									"name": "Control",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
											"line": 14,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/field/control/FieldControl.d.ts",
											"line": 15,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 599,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 602,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "FieldControl.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLInputElement"
																},
																"name": "HTMLInputElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 586,
							"name": "Description",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A paragraph with additional information about the field.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<p>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/description/FieldDescription.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/description/FieldDescription.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 587,
									"name": "Description",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/description/FieldDescription.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/field/description/FieldDescription.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 588,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 591,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "FieldDescription.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLParagraphElement"
																},
																"name": "HTMLParagraphElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 573,
							"name": "Error",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An error message displayed if the field control fails validation.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 574,
									"name": "Error",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/field/error/FieldError.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 575,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 578,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "FieldError.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 562,
							"name": "Label",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An accessible label that is automatically associated with the field control.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<label>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/label/FieldLabel.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/label/FieldLabel.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 563,
									"name": "Label",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/label/FieldLabel.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/field/label/FieldLabel.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 564,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 567,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "FieldLabel.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 536,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the field.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
									"line": 29,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 537,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 29,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 538,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 547,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "FieldRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 613,
							"name": "Validity",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to display a custom message based on the field’s validity.\nRequires "
									},
									{
										"kind": "code",
										"text": "`children`"
									},
									{
										"kind": "text",
										"text": " to be a function that accepts field validity state as an argument.\n\nDocumentation: [Base UI Field](https://base-ui.com/react/components/field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
									"line": 13,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 614,
									"name": "Validity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/field/validity/FieldValidity.d.ts",
											"line": 13,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 615,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 618,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "FieldValidity.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								600,
								589,
								576,
								565,
								539,
								616
							]
						},
						{
							"title": "Interfaces",
							"children": [
								623
							]
						},
						{
							"title": "Functions",
							"children": [
								597,
								586,
								573,
								562,
								536,
								613
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/field/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 641,
					"name": "Fieldset",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 658,
							"name": "Legend",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An accessible label that is automatically associated with the fieldset.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Fieldset](https://base-ui.com/react/components/fieldset)"
									}
								]
							},
							"children": [
								{
									"id": 661,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 662,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 663,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 664,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 665,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 659,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "FieldsetLegend.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 666,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 659,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "FieldsetLegend.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												662,
												666
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
											"line": 17,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 659,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "FieldsetLegend.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 659,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 660,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												660
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										661,
										659
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 645,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the fieldset legend and the associated fields.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<fieldset>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Fieldset](https://base-ui.com/react/components/fieldset)"
									}
								]
							},
							"children": [
								{
									"id": 649,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 650,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 651,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 652,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 653,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 646,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "FieldsetRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 654,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 646,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "FieldsetRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												650,
												654
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
											"line": 17,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "fieldset"
												},
												{
													"type": "reference",
													"target": 646,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "FieldsetRoot.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 646,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
											"line": 11,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 647,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 648,
													"name": "disabled",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the component should ignore user interaction."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														648
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
													"line": 11,
													"character": 17
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										649
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										646
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 655,
							"name": "Legend",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An accessible label that is automatically associated with the fieldset.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Fieldset](https://base-ui.com/react/components/fieldset)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 656,
									"name": "Legend",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/fieldset/legend/FieldsetLegend.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 657,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 661,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "FieldsetLegend.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 642,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the fieldset legend and the associated fields.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<fieldset>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Fieldset](https://base-ui.com/react/components/fieldset)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 643,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/fieldset/root/FieldsetRoot.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 644,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 649,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "FieldsetRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLFieldSetElement"
																},
																"name": "HTMLFieldSetElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								658,
								645
							]
						},
						{
							"title": "Functions",
							"children": [
								655,
								642
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/fieldset/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 670,
					"name": "Form",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A native form element with consolidated error handling.\nRenders a "
							},
							{
								"kind": "code",
								"text": "`<form>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nDocumentation: [Base UI Form](https://base-ui.com/react/components/form)"
							}
						]
					},
					"children": [
						{
							"id": 671,
							"name": "Props",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 677,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 678,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/utils/types.d.ts",
															"line": 32,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 679,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 680,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 682,
																		"name": "State",
																		"package": "@base-ui-components/react",
																		"qualifiedName": "Form.State"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "BaseUIComponentProps.className"
									}
								},
								{
									"id": 672,
									"name": "errors",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object where the keys correspond to the "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": " attribute of the form fields,\nand the values correspond to the error(s) related to that field."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/form/Form.d.ts",
											"line": 17,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "build/esm/form/FormContext.d.ts",
											"qualifiedName": "Errors"
										},
										"name": "Errors",
										"package": "@base-ui-components/react"
									}
								},
								{
									"id": 673,
									"name": "onClearErrors",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handler called when the "
											},
											{
												"kind": "code",
												"text": "`errors`"
											},
											{
												"kind": "text",
												"text": " object is cleared."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/form/Form.d.ts",
											"line": 21,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 674,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/form/FormContext.d.ts",
													"line": 6,
													"character": 19
												}
											],
											"signatures": [
												{
													"id": 675,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/form/FormContext.d.ts",
															"line": 6,
															"character": 19
														}
													],
													"parameters": [
														{
															"id": 676,
															"name": "errors",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/form/FormContext.d.ts",
																	"qualifiedName": "Errors"
																},
																"name": "Errors",
																"package": "@base-ui-components/react"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 681,
									"name": "render",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
											},
											{
												"kind": "code",
												"text": "`ReactElement`"
											},
											{
												"kind": "text",
												"text": " or a function that returns the element to render."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 39,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactElement"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.JSXElementConstructor"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "JSXElementConstructor",
																"package": "@types/react",
																"qualifiedName": "React.JSXElementConstructor"
															}
														]
													}
												],
												"name": "ReactElement",
												"package": "@types/react",
												"qualifiedName": "React.ReactElement"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/types.d.ts",
													"qualifiedName": "ComponentRenderFn"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "GenericHTMLProps"
														},
														"name": "GenericHTMLProps",
														"package": "@base-ui-components/react"
													},
													{
														"type": "reference",
														"target": 682,
														"name": "State",
														"package": "@base-ui-components/react",
														"qualifiedName": "Form.State"
													}
												],
												"name": "ComponentRenderFn",
												"package": "@base-ui-components/react"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "BaseUIComponentProps.render"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										677,
										672,
										673,
										681
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/form/Form.d.ts",
									"line": 12,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "build/esm/utils/types.d.ts",
										"qualifiedName": "BaseUIComponentProps"
									},
									"typeArguments": [
										{
											"type": "literal",
											"value": "form"
										},
										{
											"type": "reference",
											"target": 682,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "Form.State"
										}
									],
									"name": "BaseUIComponentProps",
									"package": "@base-ui-components/react"
								}
							]
						},
						{
							"id": 682,
							"name": "State",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/form/Form.d.ts",
									"line": 23,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								671,
								682
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/form/Form.d.ts",
							"line": 10,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/form/Form.d.ts",
							"line": 11,
							"character": 25
						}
					]
				},
				{
					"id": 686,
					"name": "Input",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A native input element that automatically works with [Field](https://base-ui.com/react/components/field).\nRenders an "
							},
							{
								"kind": "code",
								"text": "`<input>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nDocumentation: [Base UI Input](https://base-ui.com/react/components/input)"
							}
						]
					},
					"children": [
						{
							"id": 687,
							"name": "Props",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 688,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 689,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/utils/types.d.ts",
															"line": 32,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 690,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 691,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 693,
																		"name": "State",
																		"package": "@base-ui-components/react",
																		"qualifiedName": "Input.State"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "BaseUIComponentProps.className"
									}
								},
								{
									"id": 692,
									"name": "render",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
											},
											{
												"kind": "code",
												"text": "`ReactElement`"
											},
											{
												"kind": "text",
												"text": " or a function that returns the element to render."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 39,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactElement"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.JSXElementConstructor"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "JSXElementConstructor",
																"package": "@types/react",
																"qualifiedName": "React.JSXElementConstructor"
															}
														]
													}
												],
												"name": "ReactElement",
												"package": "@types/react",
												"qualifiedName": "React.ReactElement"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/types.d.ts",
													"qualifiedName": "ComponentRenderFn"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "GenericHTMLProps"
														},
														"name": "GenericHTMLProps",
														"package": "@base-ui-components/react"
													},
													{
														"type": "reference",
														"target": 693,
														"name": "State",
														"package": "@base-ui-components/react",
														"qualifiedName": "Input.State"
													}
												],
												"name": "ComponentRenderFn",
												"package": "@base-ui-components/react"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "BaseUIComponentProps.render"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										688,
										692
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/input/Input.d.ts",
									"line": 11,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "build/esm/utils/types.d.ts",
										"qualifiedName": "BaseUIComponentProps"
									},
									"typeArguments": [
										{
											"type": "literal",
											"value": "input"
										},
										{
											"type": "reference",
											"target": 693,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "Input.State"
										}
									],
									"name": "BaseUIComponentProps",
									"package": "@base-ui-components/react"
								}
							]
						},
						{
							"id": 693,
							"name": "State",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/input/Input.d.ts",
									"line": 13,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								687,
								693
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/input/Input.d.ts",
							"line": 9,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/input/Input.d.ts",
							"line": 10,
							"character": 25
						}
					]
				},
				{
					"id": 694,
					"name": "Menu",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 698,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the menu anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 704,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 705,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 706,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 707,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 708,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 699,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuArrow.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 709,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 699,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuArrow.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												705,
												709
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
											"line": 21,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 699,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuArrow.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 699,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 702,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 700,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 701,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 703,
											"name": "uncentered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												702,
												700,
												701,
												703
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										704,
										699
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 713,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the menu popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 717,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 718,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 719,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 720,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 721,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 714,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuBackdrop.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 722,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 714,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuBackdrop.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												718,
												722
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
											"line": 19,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 714,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuBackdrop.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 714,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 715,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 716,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												715,
												716
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										717,
										714
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 726,
							"name": "CheckboxItem",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A menu item that toggles a setting on or off.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 732,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 733,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox item is currently ticked.\n\nTo render an uncontrolled checkbox item, use the "
													},
													{
														"kind": "code",
														"text": "`defaultChecked`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 740,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 746,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 747,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 748,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 749,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 727,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuCheckboxItem.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 745,
											"name": "closeOnClick",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to close the menu when the item is clicked."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 62,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 734,
											"name": "defaultChecked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox item is initially ticked.\n\nTo render a controlled checkbox item, use the "
													},
													{
														"kind": "code",
														"text": "`checked`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.defaultChecked"
											}
										},
										{
											"id": 742,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 743,
											"name": "label",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Overrides the text label to use when the item is matched during keyboard text navigation."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 53,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 735,
											"name": "onCheckedChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the checkbox item is ticked or unticked."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 736,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
															"line": 39,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 737,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
																	"line": 39,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 738,
																	"name": "checked",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 739,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 741,
											"name": "onClick",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The click handler for the menu item."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.MouseEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLElement"
														},
														"name": "HTMLElement",
														"package": "typescript"
													}
												],
												"name": "MouseEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.MouseEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.onClick"
											}
										},
										{
											"id": 750,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 727,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuCheckboxItem.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												733,
												740,
												746,
												745,
												734,
												742,
												743,
												735,
												741,
												750
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
											"line": 22,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 727,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuCheckboxItem.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 727,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
											"line": 11,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 728,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 731,
													"name": "checked",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the checkbox item is currently ticked."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 729,
													"name": "disabled",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the component should ignore user interaction."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 730,
													"name": "highlighted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
															"line": 16,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														731,
														729,
														730
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
													"line": 11,
													"character": 17
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										732
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										727
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 754,
							"name": "CheckboxItemIndicator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the checkbox item is ticked.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 755,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 757,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 758,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 759,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 760,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 762,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuCheckboxItemIndicator.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 756,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the HTML element in the DOM when the checkbox item is not checked."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 761,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 762,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuCheckboxItemIndicator.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												757,
												756,
												761
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 762,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuCheckboxItemIndicator.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 762,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 763,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the checkbox item is currently ticked."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 764,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 765,
											"name": "highlighted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 766,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												763,
												764,
												765,
												766
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
											"line": 19,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										755,
										762
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 770,
							"name": "Group",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups related menu items with the corresponding label.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 771,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 772,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The content of the component."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 773,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 774,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 775,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 776,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 778,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuGroup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 777,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 778,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuGroup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												772,
												773,
												777
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 778,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuGroup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 778,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
											"line": 17,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										771,
										778
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 782,
							"name": "GroupLabel",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An accessible label that is automatically associated with its parent group.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 783,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 784,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 785,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 786,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 787,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 789,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuGroupLabel.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 788,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 789,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuGroupLabel.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												784,
												788
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/group-label/MenuGroupLabel.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 789,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuGroupLabel.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 789,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/group-label/MenuGroupLabel.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										783,
										789
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/group-label/MenuGroupLabel.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/group-label/MenuGroupLabel.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 793,
							"name": "Item",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An individual interactive item in the menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 798,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 799,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 805,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 806,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 807,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 808,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 794,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuItem.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 804,
											"name": "closeOnClick",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to close the menu when the item is clicked."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
													"line": 42,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 801,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 802,
											"name": "label",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Overrides the text label to use when the item is matched during keyboard text navigation."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
													"line": 32,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 800,
											"name": "onClick",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The click handler for the menu item."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.MouseEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLElement"
														},
														"name": "HTMLElement",
														"package": "typescript"
													}
												],
												"name": "MouseEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.MouseEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.onClick"
											}
										},
										{
											"id": 809,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 794,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuItem.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												799,
												805,
												804,
												801,
												802,
												800,
												809
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
											"line": 18,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 794,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuItem.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 794,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
											"line": 11,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 795,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 796,
													"name": "disabled",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the component should ignore user interaction."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 797,
													"name": "highlighted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
															"line": 16,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														796,
														797
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
													"line": 11,
													"character": 17
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										798
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										794
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 813,
							"name": "Popup",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the menu items.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 814,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 815,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 817,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 818,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 819,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 820,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 822,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuPopup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 821,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 822,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuPopup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												815,
												817,
												821
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 822,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuPopup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 822,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
											"line": 20,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 823,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 826,
													"name": "align",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
															"line": 23,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "start"
															},
															{
																"type": "literal",
																"value": "end"
															},
															{
																"type": "literal",
																"value": "center"
															}
														]
													}
												},
												{
													"id": 828,
													"name": "nested",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
															"line": 28,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 827,
													"name": "open",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the menu is currently open."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
															"line": 27,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 825,
													"name": "side",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
															"line": 22,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "Side"
														},
														"name": "Side",
														"package": "@base-ui-components/react"
													}
												},
												{
													"id": 824,
													"name": "transitionStatus",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
															"line": 21,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 2451,
														"name": "TransitionStatus",
														"package": "@base-ui-components/react"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														826,
														828,
														827,
														825,
														824
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
													"line": 20,
													"character": 17
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										814
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										822
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 836,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the menu popup against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 843,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 851,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How to align the popup relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'center'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 63,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "center"
													},
													{
														"type": "literal",
														"value": "start"
													},
													{
														"type": "literal",
														"value": "end"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.align"
											}
										},
										{
											"id": 852,
											"name": "alignOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional offset along the alignment axis in pixels.\nAlso accepts a function that returns the offset to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 75,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.alignOffset"
											}
										},
										{
											"id": 844,
											"name": "anchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element to position the popup against.\nBy default, the popup will be positioned against the trigger."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
															"qualifiedName": "VirtualElement"
														},
														"name": "VirtualElement",
														"package": "@floating-ui/dom"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefObject"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Element"
																		},
																		"name": "Element",
																		"package": "typescript"
																	}
																]
															}
														],
														"name": "RefObject",
														"package": "@types/react",
														"qualifiedName": "React.RefObject"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 845,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																	"line": 31,
																	"character": 86
																}
															],
															"signatures": [
																{
																	"id": 846,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																			"line": 31,
																			"character": 86
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Element"
																				},
																				"name": "Element",
																				"package": "typescript"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
																					"qualifiedName": "VirtualElement"
																				},
																				"name": "VirtualElement",
																				"package": "@floating-ui/dom"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.anchor"
											}
										},
										{
											"id": 856,
											"name": "arrowPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Minimum distance to maintain between the arrow and the edges of the popup.\n\nUse it to prevent the arrow element from hanging out of the rounded corners of a popup."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 98,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.arrowPadding"
											}
										},
										{
											"id": 858,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 859,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 860,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 861,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 837,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuPositioner.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 853,
											"name": "collisionBoundary",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element or a rectangle that delimits the area that the popup is confined to."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'clipping-ancestors'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 80,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Boundary"
												},
												"name": "Boundary",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.collisionBoundary"
											}
										},
										{
											"id": 854,
											"name": "collisionPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional space to maintain from the edge of the collision boundary."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 85,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.d.mts",
													"qualifiedName": "Padding"
												},
												"name": "Padding",
												"package": "@floating-ui/utils"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.collisionPadding"
											}
										},
										{
											"id": 847,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.open"
											}
										},
										{
											"id": 848,
											"name": "positionMethod",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines which CSS "
													},
													{
														"kind": "code",
														"text": "`position`"
													},
													{
														"kind": "text",
														"text": " property to use."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'absolute'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "fixed"
													},
													{
														"type": "literal",
														"value": "absolute"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.positionMethod"
											}
										},
										{
											"id": 862,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 837,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuPositioner.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 849,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Which side of the anchor element to align the popup against.\nMay automatically change to avoid collisions."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'bottom'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 46,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.side"
											}
										},
										{
											"id": 850,
											"name": "sideOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Distance between the anchor and the popup in pixels.\nAlso accepts a function that returns the distance to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 58,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.sideOffset"
											}
										},
										{
											"id": 855,
											"name": "sticky",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to maintain the popup in the viewport after\nthe anchor element was scrolled out of view."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 91,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.sticky"
											}
										},
										{
											"id": 857,
											"name": "trackAnchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup tracks any layout shift of its positioning anchor."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 103,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useMenuPositioner.SharedParameters.trackAnchor"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												851,
												852,
												844,
												856,
												858,
												853,
												854,
												847,
												848,
												862,
												849,
												850,
												855,
												857
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
											"line": 23,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/menu/positioner/useMenuPositioner.d.ts",
												"qualifiedName": "useMenuPositioner.SharedParameters"
											},
											"name": "SharedParameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useMenuPositioner.SharedParameters"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 837,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuPositioner.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 837,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 840,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 841,
											"name": "anchorHidden",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 842,
											"name": "nested",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 838,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 839,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												840,
												841,
												842,
												838,
												839
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										843,
										837
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 869,
							"name": "RadioItem",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A menu item that works like a radio button in a given group.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 875,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 877,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 883,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 884,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 885,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 886,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 870,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuRadioItem.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 882,
											"name": "closeOnClick",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to close the menu when the item is clicked."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
													"line": 50,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 879,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 880,
											"name": "label",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Overrides the text label to use when the item is matched during keyboard text navigation."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 878,
											"name": "onClick",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The click handler for the menu item."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
													"line": 32,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.MouseEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLElement"
														},
														"name": "HTMLElement",
														"package": "typescript"
													}
												],
												"name": "MouseEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.MouseEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.onClick"
											}
										},
										{
											"id": 887,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 870,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuRadioItem.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 876,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Value of the radio item.\nThis is the value that will be set in the MenuRadioGroup when the item is selected."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												877,
												883,
												882,
												879,
												880,
												878,
												887,
												876
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
											"line": 22,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 870,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuRadioItem.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 870,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
											"line": 11,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 871,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 874,
													"name": "checked",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the radio item is currently selected."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 872,
													"name": "disabled",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the component should ignore user interaction."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 873,
													"name": "highlighted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
															"line": 16,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														874,
														872,
														873
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
													"line": 11,
													"character": 17
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										875
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										870
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 891,
							"name": "RadioItemIndicator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the radio item is selected.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 892,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 894,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 895,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 896,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 897,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 899,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuRadioItemIndicator.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 893,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the HTML element in the DOM when the radio item is inactive."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 898,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 899,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuRadioItemIndicator.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												894,
												893,
												898
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 899,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuRadioItemIndicator.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 899,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 900,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the radio item is currently selected."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 901,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 902,
											"name": "highlighted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 903,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												900,
												901,
												902,
												903
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
											"line": 19,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										892,
										899
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 907,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the menu.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 934,
									"name": "Actions",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 935,
											"name": "unmount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 82,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 936,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
															"line": 82,
															"character": 17
														}
													],
													"signatures": [
														{
															"id": 937,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
																	"line": 82,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												935
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
											"line": 81,
											"character": 14
										}
									]
								},
								{
									"id": 908,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 929,
											"name": "actionsRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A ref to imperative actions."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 77,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 930,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 931,
																	"name": "unmount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
																			"line": 78,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 932,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
																					"line": 78,
																					"character": 21
																				}
																			],
																			"signatures": [
																				{
																					"id": 933,
																					"name": "__type",
																					"variant": "signature",
																					"kind": 4096,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
																							"line": 78,
																							"character": 21
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "void"
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		931
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
																	"line": 77,
																	"character": 37
																}
															]
														}
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											}
										},
										{
											"id": 909,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										},
										{
											"id": 926,
											"name": "closeParentOnEsc",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "When in a submenu, determines whether pressing the Escape key\ncloses the entire menu, or only the current child menu."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 60,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 910,
											"name": "defaultOpen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the menu is initially open.\n\nTo render a controlled menu, use the "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 927,
											"name": "delay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before the menu may be opened on hover. Specified in milliseconds.\n\nRequires the "
													},
													{
														"kind": "code",
														"text": "`openOnHover`"
													},
													{
														"kind": "text",
														"text": " prop."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n100\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 67,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 925,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 54,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 911,
											"name": "loop",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to loop keyboard focus back to the first item\nwhen the end of the list is reached while using the arrow keys."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 26,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 912,
											"name": "modal",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the menu should prevent outside clicks and lock page scroll when open."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 913,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the menu is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 914,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
															"line": 35,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 915,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
																	"line": 35,
																	"character": 23
																}
															],
															"parameters": [
																{
																	"id": 916,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 917,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																},
																{
																	"id": 918,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "build/esm/utils/translateOpenChangeReason.d.ts",
																			"qualifiedName": "OpenChangeReason"
																		},
																		"name": "OpenChangeReason",
																		"package": "@base-ui-components/react"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 919,
											"name": "onOpenChangeComplete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called after any animations complete when the menu is closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 920,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
															"line": 39,
															"character": 31
														}
													],
													"signatures": [
														{
															"id": 921,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
																	"line": 39,
																	"character": 31
																}
															],
															"parameters": [
																{
																	"id": 922,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 923,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 928,
											"name": "openOnHover",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the menu should also open when the trigger is hovered.\n\nDefaults to "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": " for nested menus."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 73,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 924,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The visual orientation of the menu.\nControls whether roving focus uses up/down or left/right arrow keys."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'vertical'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/menu/root/useMenuRoot.d.ts",
													"qualifiedName": "MenuOrientation"
												},
												"name": "MenuOrientation",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												929,
												909,
												926,
												910,
												927,
												925,
												911,
												912,
												913,
												919,
												923,
												928,
												924
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										934,
										908
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 956,
							"name": "Separator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A separator element accessible to screen readers.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Separator](https://base-ui.com/react/components/separator)"
									}
								]
							},
							"children": [
								{
									"id": 957,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 959,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 960,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 961,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 962,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 964,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "Separator.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 958,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The orientation of the separator."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'horizontal'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/separator/Separator.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/separator/Separator.d.ts",
													"qualifiedName": "Orientation"
												},
												"name": "Orientation",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 963,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 964,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "Separator.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												959,
												958,
												963
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/separator/Separator.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 964,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "Separator.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 964,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 965,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The orientation of the separator."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/separator/Separator.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/separator/Separator.d.ts",
													"qualifiedName": "Orientation"
												},
												"name": "Orientation",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												965
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/separator/Separator.d.ts",
											"line": 19,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										957,
										964
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/separator/Separator.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/separator/Separator.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 969,
							"name": "SubmenuTrigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A menu item that opens a submenu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 970,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 971,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 975,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 976,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 977,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 978,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 980,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuSubmenuTrigger.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 973,
											"name": "label",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Overrides the text label to use when the item is matched during keyboard text navigation."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 972,
											"name": "onClick",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.MouseEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLElement"
														},
														"name": "HTMLElement",
														"package": "typescript"
													}
												],
												"name": "MouseEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.MouseEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.onClick"
											}
										},
										{
											"id": 979,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 980,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuSubmenuTrigger.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												971,
												975,
												973,
												972,
												979
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 980,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuSubmenuTrigger.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 980,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 981,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 982,
											"name": "highlighted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 983,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
													"line": 32,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												981,
												982,
												983
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
											"line": 23,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										970,
										980
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 941,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"children": [
								{
									"id": 942,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 943,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 945,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 946,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 947,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 948,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 950,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "MenuTrigger.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 944,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.disabled"
											}
										},
										{
											"id": 949,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 950,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "MenuTrigger.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												943,
												945,
												944,
												949
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 950,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "MenuTrigger.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 950,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
											"line": 19,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 951,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 952,
													"name": "open",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the menu is currently open."
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
															"line": 23,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														952
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
													"line": 19,
													"character": 17
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										942
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										950
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 695,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the menu anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 696,
									"name": "Arrow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/arrow/MenuArrow.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 697,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 704,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuArrow.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 710,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the menu popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 711,
									"name": "Backdrop",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/backdrop/MenuBackdrop.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 712,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 717,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuBackdrop.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 723,
							"name": "CheckboxItem",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A menu item that toggles a setting on or off.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 724,
									"name": "CheckboxItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 725,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 732,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuCheckboxItem.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 751,
							"name": "CheckboxItemIndicator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the checkbox item is ticked.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 752,
									"name": "CheckboxItemIndicator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 753,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 755,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuCheckboxItemIndicator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 767,
							"name": "Group",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups related menu items with the corresponding label.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 768,
									"name": "Group",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/group/MenuGroup.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 769,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 771,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuGroup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 779,
							"name": "GroupLabel",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An accessible label that is automatically associated with its parent group.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/group-label/MenuGroupLabel.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/group-label/MenuGroupLabel.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 780,
									"name": "GroupLabel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/group-label/MenuGroupLabel.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/group-label/MenuGroupLabel.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 781,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 783,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuGroupLabel.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 790,
							"name": "Item",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An individual interactive item in the menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 791,
									"name": "Item",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/item/MenuItem.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 792,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 798,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuItem.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 810,
							"name": "Popup",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the menu items.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 811,
									"name": "Popup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/popup/MenuPopup.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 812,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 814,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuPopup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 829,
							"name": "Portal",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"children": [
								{
									"id": 832,
									"name": "propTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/portal/MenuPortal.d.ts",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										832
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/portal/MenuPortal.d.ts",
									"line": 8,
									"character": 24
								},
								{
									"fileName": "packages/react/build/esm/menu/portal/MenuPortal.d.ts",
									"line": 9,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/menu/portal/MenuPortal.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 830,
									"name": "Portal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A portal element that moves the popup to a different part of the DOM.\nBy default, the portal element is appended to "
											},
											{
												"kind": "code",
												"text": "`<body>`"
											},
											{
												"kind": "text",
												"text": ".\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/portal/MenuPortal.d.ts",
											"line": 8,
											"character": 24
										}
									],
									"parameters": [
										{
											"id": 831,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/menu/portal/MenuPortal.d.ts",
													"qualifiedName": "MenuPortal.Props"
												},
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "MenuPortal.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										]
									}
								}
							]
						},
						{
							"id": 833,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the menu popup against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 834,
									"name": "Positioner",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/positioner/MenuPositioner.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 835,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 843,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuPositioner.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 863,
							"name": "RadioGroup",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/radio-group/MenuRadioGroup.d.ts",
									"line": 38,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 864,
									"name": "RadioGroup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/radio-group/MenuRadioGroup.d.ts",
											"line": 38,
											"character": 14
										}
									],
									"parameters": [
										{
											"id": 865,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/menu/radio-group/MenuRadioGroup.d.ts",
															"qualifiedName": "MenuRadioGroup.Props"
														},
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuRadioGroup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 866,
							"name": "RadioItem",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A menu item that works like a radio button in a given group.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 867,
									"name": "RadioItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/radio-item/MenuRadioItem.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 868,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 875,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuRadioItem.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 888,
							"name": "RadioItemIndicator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the radio item is selected.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 889,
									"name": "RadioItemIndicator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 890,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 892,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuRadioItemIndicator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 904,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the menu.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 905,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/root/MenuRoot.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 906,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 908,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "MenuRoot.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						},
						{
							"id": 953,
							"name": "Separator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A separator element accessible to screen readers.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Separator](https://base-ui.com/react/components/separator)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/separator/Separator.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/separator/Separator.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 954,
									"name": "Separator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/separator/Separator.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/separator/Separator.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 955,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 957,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "Separator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 966,
							"name": "SubmenuTrigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A menu item that opens a submenu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 967,
									"name": "SubmenuTrigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 968,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 970,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuSubmenuTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 938,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Menu](https://base-ui.com/react/components/menu)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 939,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/menu/trigger/MenuTrigger.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 940,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 942,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "MenuTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLElement"
																},
																"name": "HTMLElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								698,
								713,
								726,
								754,
								770,
								782,
								793,
								813,
								836,
								869,
								891,
								907,
								956,
								969,
								941
							]
						},
						{
							"title": "Functions",
							"children": [
								695,
								710,
								723,
								751,
								767,
								779,
								790,
								810,
								829,
								833,
								863,
								866,
								888,
								904,
								953,
								966,
								938
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/menu/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 984,
					"name": "NumberField",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1078,
							"name": "Decrement",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A stepper button that decreases the field value when clicked.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"children": [
								{
									"id": 1092,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1093,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1094,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1095,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1096,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1079,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "NumberFieldDecrement.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1097,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1079,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "NumberFieldDecrement.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1093,
												1097
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 1079,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "NumberFieldDecrement.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1079,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1088,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1025,
												"name": "State.dirty"
											}
										},
										{
											"id": 1083,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1020,
												"name": "State.disabled"
											}
										},
										{
											"id": 1090,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1027,
												"name": "State.filled"
											}
										},
										{
											"id": 1091,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1028,
												"name": "State.focused"
											}
										},
										{
											"id": 1081,
											"name": "inputValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The formatted string value presented in the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1018,
												"name": "State.inputValue"
											}
										},
										{
											"id": 1084,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is currently invalid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1021,
												"name": "State.invalid"
											}
										},
										{
											"id": 1085,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to change the field value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1022,
												"name": "State.readOnly"
											}
										},
										{
											"id": 1082,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must enter a value before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1019,
												"name": "State.required"
											}
										},
										{
											"id": 1086,
											"name": "scrubbing",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user is currently scrubbing the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1023,
												"name": "State.scrubbing"
											}
										},
										{
											"id": 1087,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1024,
												"name": "State.touched"
											}
										},
										{
											"id": 1089,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1026,
												"name": "State.valid"
											}
										},
										{
											"id": 1080,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw numeric value of the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1017,
												"name": "State.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1088,
												1083,
												1090,
												1091,
												1081,
												1084,
												1085,
												1082,
												1086,
												1087,
												1089,
												1080
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1016,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "NumberFieldRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1092,
										1079
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1032,
							"name": "Group",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the input with the increment and decrement buttons.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"children": [
								{
									"id": 1046,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1047,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1048,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1049,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1050,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1033,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "NumberFieldGroup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1051,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1033,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "NumberFieldGroup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1047,
												1051
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/group/NumberFieldGroup.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1033,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "NumberFieldGroup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1033,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1042,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1025,
												"name": "State.dirty"
											}
										},
										{
											"id": 1037,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1020,
												"name": "State.disabled"
											}
										},
										{
											"id": 1044,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1027,
												"name": "State.filled"
											}
										},
										{
											"id": 1045,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1028,
												"name": "State.focused"
											}
										},
										{
											"id": 1035,
											"name": "inputValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The formatted string value presented in the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1018,
												"name": "State.inputValue"
											}
										},
										{
											"id": 1038,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is currently invalid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1021,
												"name": "State.invalid"
											}
										},
										{
											"id": 1039,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to change the field value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1022,
												"name": "State.readOnly"
											}
										},
										{
											"id": 1036,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must enter a value before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1019,
												"name": "State.required"
											}
										},
										{
											"id": 1040,
											"name": "scrubbing",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user is currently scrubbing the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1023,
												"name": "State.scrubbing"
											}
										},
										{
											"id": 1041,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1024,
												"name": "State.touched"
											}
										},
										{
											"id": 1043,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1026,
												"name": "State.valid"
											}
										},
										{
											"id": 1034,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw numeric value of the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1017,
												"name": "State.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1042,
												1037,
												1044,
												1045,
												1035,
												1038,
												1039,
												1036,
												1040,
												1041,
												1043,
												1034
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/group/NumberFieldGroup.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1016,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "NumberFieldRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1046,
										1033
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/group/NumberFieldGroup.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/group/NumberFieldGroup.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1055,
							"name": "Increment",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A stepper button that increases the field value when clicked.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"children": [
								{
									"id": 1069,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1070,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1071,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1072,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1073,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1056,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "NumberFieldIncrement.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1074,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1056,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "NumberFieldIncrement.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1070,
												1074
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/increment/NumberFieldIncrement.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 1056,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "NumberFieldIncrement.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1056,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1065,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1025,
												"name": "State.dirty"
											}
										},
										{
											"id": 1060,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1020,
												"name": "State.disabled"
											}
										},
										{
											"id": 1067,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1027,
												"name": "State.filled"
											}
										},
										{
											"id": 1068,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1028,
												"name": "State.focused"
											}
										},
										{
											"id": 1058,
											"name": "inputValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The formatted string value presented in the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1018,
												"name": "State.inputValue"
											}
										},
										{
											"id": 1061,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is currently invalid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1021,
												"name": "State.invalid"
											}
										},
										{
											"id": 1062,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to change the field value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1022,
												"name": "State.readOnly"
											}
										},
										{
											"id": 1059,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must enter a value before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1019,
												"name": "State.required"
											}
										},
										{
											"id": 1063,
											"name": "scrubbing",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user is currently scrubbing the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1023,
												"name": "State.scrubbing"
											}
										},
										{
											"id": 1064,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1024,
												"name": "State.touched"
											}
										},
										{
											"id": 1066,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1026,
												"name": "State.valid"
											}
										},
										{
											"id": 1057,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw numeric value of the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1017,
												"name": "State.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1065,
												1060,
												1067,
												1068,
												1058,
												1061,
												1062,
												1059,
												1063,
												1064,
												1066,
												1057
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/increment/NumberFieldIncrement.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1016,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "NumberFieldRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1069,
										1056
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/increment/NumberFieldIncrement.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/increment/NumberFieldIncrement.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1101,
							"name": "Input",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The native input control in the number field.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"children": [
								{
									"id": 1115,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1116,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1117,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1118,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1119,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1102,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "NumberFieldInput.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1120,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1102,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "NumberFieldInput.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1116,
												1120
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/input/NumberFieldInput.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "input"
												},
												{
													"type": "reference",
													"target": 1102,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "NumberFieldInput.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1102,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1111,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1025,
												"name": "State.dirty"
											}
										},
										{
											"id": 1106,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1020,
												"name": "State.disabled"
											}
										},
										{
											"id": 1113,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1027,
												"name": "State.filled"
											}
										},
										{
											"id": 1114,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1028,
												"name": "State.focused"
											}
										},
										{
											"id": 1104,
											"name": "inputValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The formatted string value presented in the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1018,
												"name": "State.inputValue"
											}
										},
										{
											"id": 1107,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is currently invalid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1021,
												"name": "State.invalid"
											}
										},
										{
											"id": 1108,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to change the field value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1022,
												"name": "State.readOnly"
											}
										},
										{
											"id": 1105,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must enter a value before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1019,
												"name": "State.required"
											}
										},
										{
											"id": 1109,
											"name": "scrubbing",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user is currently scrubbing the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1023,
												"name": "State.scrubbing"
											}
										},
										{
											"id": 1110,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1024,
												"name": "State.touched"
											}
										},
										{
											"id": 1112,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1026,
												"name": "State.valid"
											}
										},
										{
											"id": 1103,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw numeric value of the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1017,
												"name": "State.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1111,
												1106,
												1113,
												1114,
												1104,
												1107,
												1108,
												1105,
												1109,
												1110,
												1112,
												1103
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/input/NumberFieldInput.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1016,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "NumberFieldRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1115,
										1102
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/input/NumberFieldInput.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/input/NumberFieldInput.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 988,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the number field and manages its state.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"children": [
								{
									"id": 989,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1004,
											"name": "allowWheelScrub",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to allow the user to scrub the input value with the mouse wheel while focused and\nhovering over the input."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 80,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.allowWheelScrub"
											}
										},
										{
											"id": 999,
											"name": "autoFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to focus the element on page load."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 55,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.autoFocus"
											}
										},
										{
											"id": 1011,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1012,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1013,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1014,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1016,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "NumberFieldRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 1003,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The uncontrolled value of the field when it’s initially rendered.\n\nTo render a controlled number field, use the "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 74,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.defaultValue"
											}
										},
										{
											"id": 997,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.disabled"
											}
										},
										{
											"id": 1005,
											"name": "format",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to format the input value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 84,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Intl.NumberFormatOptions"
												},
												"name": "NumberFormatOptions",
												"package": "typescript",
												"qualifiedName": "Intl.NumberFormatOptions"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.format"
											}
										},
										{
											"id": 990,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.id"
											}
										},
										{
											"id": 998,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is forcefully marked as invalid."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 50,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.invalid"
											}
										},
										{
											"id": 995,
											"name": "largeStep",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The large step value of the input element when incrementing while the shift key is held. Snaps\nto multiples of this value."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n10\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.largeStep"
											}
										},
										{
											"id": 992,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum value of the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.max"
											}
										},
										{
											"id": 991,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The minimum value of the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.min"
											}
										},
										{
											"id": 1001,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Identifies the field when a form is submitted."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 64,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.name"
											}
										},
										{
											"id": 1006,
											"name": "onValueChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback fired when the number value changes."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 90,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1007,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
															"line": 90,
															"character": 24
														}
													],
													"signatures": [
														{
															"id": 1008,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
																	"line": 90,
																	"character": 24
																}
															],
															"parameters": [
																{
																	"id": 1009,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The new value."
																			}
																		]
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																},
																{
																	"id": 1010,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The event that triggered the change."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.onValueChange"
											}
										},
										{
											"id": 1000,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to change the field value."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 60,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.readOnly"
											}
										},
										{
											"id": 1015,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1016,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "NumberFieldRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										},
										{
											"id": 996,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must enter a value before submitting a form."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.required"
											}
										},
										{
											"id": 993,
											"name": "smallStep",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The small step value of the input element when incrementing while the meta key is held. Snaps\nto multiples of this value."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0.1\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.smallStep"
											}
										},
										{
											"id": 994,
											"name": "step",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Amount to increment and decrement with the buttons and arrow keys,\nor to scrub with pointer movement in the scrub area."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n1;\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.step"
											}
										},
										{
											"id": 1002,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw numeric value of the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/useNumberFieldRoot.d.ts",
													"line": 68,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useNumberFieldRoot.Parameters.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1004,
												999,
												1011,
												1003,
												997,
												1005,
												990,
												998,
												995,
												992,
												991,
												1001,
												1006,
												1000,
												1015,
												996,
												993,
												994,
												1002
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
												"qualifiedName": "useNumberFieldRoot.Parameters"
											},
											"name": "Parameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useNumberFieldRoot.Parameters"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "div"
														},
														{
															"type": "reference",
															"target": 1016,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "NumberFieldRoot.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "onChange"
														},
														{
															"type": "literal",
															"value": "defaultValue"
														}
													]
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 1016,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1025,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 543,
												"name": "State.dirty"
											}
										},
										{
											"id": 1020,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"overwrites": {
												"type": "reference",
												"target": 541,
												"name": "State.disabled"
											}
										},
										{
											"id": 1027,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 545,
												"name": "State.filled"
											}
										},
										{
											"id": 1028,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 546,
												"name": "State.focused"
											}
										},
										{
											"id": 1018,
											"name": "inputValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The formatted string value presented in the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1021,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is currently invalid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1022,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to change the field value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1019,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must enter a value before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1023,
											"name": "scrubbing",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user is currently scrubbing the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1024,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 542,
												"name": "State.touched"
											}
										},
										{
											"id": 1026,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 544,
												"name": "State.valid"
											}
										},
										{
											"id": 1017,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw numeric value of the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1025,
												1020,
												1027,
												1028,
												1018,
												1021,
												1022,
												1019,
												1023,
												1024,
												1026,
												1017
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
											"line": 15,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 540,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "FieldRoot.State"
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"target": 1033,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1056,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1079,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1102,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1125,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1151,
											"name": "State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										989,
										1016
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 1124,
							"name": "ScrubArea",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An interactive area where the user can click and drag to change the field value.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"children": [
								{
									"id": 1138,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1142,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1143,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1144,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1145,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1125,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "NumberFieldScrubArea.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1139,
											"name": "direction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Cursor movement direction in the scrub area."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'horizontal'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "horizontal"
													},
													{
														"type": "literal",
														"value": "vertical"
													}
												]
											}
										},
										{
											"id": 1140,
											"name": "pixelSensitivity",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines how many pixels the cursor must move before the value changes.\nA higher value will make scrubbing less sensitive."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n2\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1146,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1125,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "NumberFieldScrubArea.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 1141,
											"name": "teleportDistance",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If specified, determines the distance that the cursor may move from the center\nof the scrub area before it will loop back around."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1142,
												1139,
												1140,
												1146,
												1141
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 1125,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "NumberFieldScrubArea.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1125,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1134,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1025,
												"name": "State.dirty"
											}
										},
										{
											"id": 1129,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1020,
												"name": "State.disabled"
											}
										},
										{
											"id": 1136,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1027,
												"name": "State.filled"
											}
										},
										{
											"id": 1137,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1028,
												"name": "State.focused"
											}
										},
										{
											"id": 1127,
											"name": "inputValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The formatted string value presented in the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1018,
												"name": "State.inputValue"
											}
										},
										{
											"id": 1130,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is currently invalid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1021,
												"name": "State.invalid"
											}
										},
										{
											"id": 1131,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to change the field value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1022,
												"name": "State.readOnly"
											}
										},
										{
											"id": 1128,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must enter a value before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1019,
												"name": "State.required"
											}
										},
										{
											"id": 1132,
											"name": "scrubbing",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user is currently scrubbing the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1023,
												"name": "State.scrubbing"
											}
										},
										{
											"id": 1133,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1024,
												"name": "State.touched"
											}
										},
										{
											"id": 1135,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1026,
												"name": "State.valid"
											}
										},
										{
											"id": 1126,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw numeric value of the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1017,
												"name": "State.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1134,
												1129,
												1136,
												1137,
												1127,
												1130,
												1131,
												1128,
												1132,
												1133,
												1135,
												1126
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1016,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "NumberFieldRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1138,
										1125
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1150,
							"name": "ScrubAreaCursor",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom element to display instead of the native cursor while using the scrub area.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nThis component uses the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API), which may prompt the browser to display a related notification. It is disabled\nin Safari to avoid a layout shift that this notification causes there.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"children": [
								{
									"id": 1164,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1165,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1166,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1167,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1168,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1151,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "NumberFieldScrubAreaCursor.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1169,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1151,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "NumberFieldScrubAreaCursor.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1165,
												1169
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
											"line": 17,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 1151,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "NumberFieldScrubAreaCursor.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1151,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1160,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1025,
												"name": "State.dirty"
											}
										},
										{
											"id": 1155,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1020,
												"name": "State.disabled"
											}
										},
										{
											"id": 1162,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1027,
												"name": "State.filled"
											}
										},
										{
											"id": 1163,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1028,
												"name": "State.focused"
											}
										},
										{
											"id": 1153,
											"name": "inputValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The formatted string value presented in the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1018,
												"name": "State.inputValue"
											}
										},
										{
											"id": 1156,
											"name": "invalid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the field is currently invalid."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1021,
												"name": "State.invalid"
											}
										},
										{
											"id": 1157,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to change the field value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1022,
												"name": "State.readOnly"
											}
										},
										{
											"id": 1154,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must enter a value before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1019,
												"name": "State.required"
											}
										},
										{
											"id": 1158,
											"name": "scrubbing",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user is currently scrubbing the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1023,
												"name": "State.scrubbing"
											}
										},
										{
											"id": 1159,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1024,
												"name": "State.touched"
											}
										},
										{
											"id": 1161,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1026,
												"name": "State.valid"
											}
										},
										{
											"id": 1152,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw numeric value of the field."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1017,
												"name": "State.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1160,
												1155,
												1162,
												1163,
												1153,
												1156,
												1157,
												1154,
												1158,
												1159,
												1161,
												1152
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
											"line": 15,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1016,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "NumberFieldRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1164,
										1151
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
									"line": 13,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
									"line": 14,
									"character": 25
								}
							]
						},
						{
							"id": 1075,
							"name": "Decrement",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A stepper button that decreases the field value when clicked.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1076,
									"name": "Decrement",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1077,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1092,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "NumberFieldDecrement.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1029,
							"name": "Group",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the input with the increment and decrement buttons.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/group/NumberFieldGroup.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/group/NumberFieldGroup.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1030,
									"name": "Group",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/group/NumberFieldGroup.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/number-field/group/NumberFieldGroup.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1031,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1046,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "NumberFieldGroup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1052,
							"name": "Increment",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A stepper button that increases the field value when clicked.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/increment/NumberFieldIncrement.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/increment/NumberFieldIncrement.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1053,
									"name": "Increment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/increment/NumberFieldIncrement.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/number-field/increment/NumberFieldIncrement.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1054,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1069,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "NumberFieldIncrement.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1098,
							"name": "Input",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The native input control in the number field.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/input/NumberFieldInput.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/input/NumberFieldInput.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1099,
									"name": "Input",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/input/NumberFieldInput.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/number-field/input/NumberFieldInput.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1100,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1115,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "NumberFieldInput.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLInputElement"
																},
																"name": "HTMLInputElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 985,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the number field and manages its state.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 986,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/number-field/root/NumberFieldRoot.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 987,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 989,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "NumberFieldRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1121,
							"name": "ScrubArea",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An interactive area where the user can click and drag to change the field value.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1122,
									"name": "ScrubArea",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1123,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1138,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "NumberFieldScrubArea.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1147,
							"name": "ScrubAreaCursor",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom element to display instead of the native cursor while using the scrub area.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nThis component uses the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API), which may prompt the browser to display a related notification. It is disabled\nin Safari to avoid a layout shift that this notification causes there.\n\nDocumentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
									"line": 13,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
									"line": 14,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1148,
									"name": "ScrubAreaCursor",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
											"line": 13,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
											"line": 14,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1149,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1164,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "NumberFieldScrubAreaCursor.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1078,
								1032,
								1055,
								1101,
								988,
								1124,
								1150
							]
						},
						{
							"title": "Functions",
							"children": [
								1075,
								1029,
								1052,
								1098,
								985,
								1121,
								1147
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/number-field/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 1170,
					"name": "Popover",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1264,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the popover anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1270,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1271,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1272,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1273,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1274,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1265,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PopoverArrow.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1275,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1265,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PopoverArrow.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1271,
												1275
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
											"line": 21,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1265,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PopoverArrow.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1265,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1268,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1266,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1267,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1269,
											"name": "uncentered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1268,
												1266,
												1267,
												1269
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1270,
										1265
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1279,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the popover.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1283,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1284,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1285,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1286,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1287,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1280,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PopoverBackdrop.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1288,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1280,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PopoverBackdrop.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1284,
												1288
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
											"line": 19,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1280,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PopoverBackdrop.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1280,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1281,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1282,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1281,
												1282
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1283,
										1280
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1314,
							"name": "Close",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that closes the popover.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1316,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1317,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1318,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1319,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1320,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1315,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PopoverClose.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1321,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1315,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PopoverClose.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1317,
												1321
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/close/PopoverClose.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 1315,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PopoverClose.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1315,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/close/PopoverClose.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1316,
										1315
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/close/PopoverClose.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/close/PopoverClose.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1303,
							"name": "Description",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A paragraph with additional information about the popover.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<p>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1305,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1306,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1307,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1308,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1309,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1304,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PopoverDescription.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1310,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1304,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PopoverDescription.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1306,
												1310
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/description/PopoverDescription.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "p"
												},
												{
													"type": "reference",
													"target": 1304,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PopoverDescription.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1304,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/description/PopoverDescription.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1305,
										1304
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/description/PopoverDescription.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/description/PopoverDescription.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1244,
							"name": "Popup",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the popover contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1250,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1256,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1257,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1258,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1259,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1245,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PopoverPopup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1255,
											"name": "finalFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines the element to focus when the popover is closed.\nBy default, focus returns to the trigger."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
													"line": 33,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLElement"
																},
																"name": "HTMLElement",
																"package": "typescript"
															}
														]
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											}
										},
										{
											"id": 1251,
											"name": "initialFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines the element to focus when the popover is opened.\nBy default, the first focusable element is focused."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefObject"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "HTMLElement"
																		},
																		"name": "HTMLElement",
																		"package": "typescript"
																	}
																]
															}
														],
														"name": "RefObject",
														"package": "@types/react",
														"qualifiedName": "React.RefObject"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1252,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
																	"line": 28,
																	"character": 62
																}
															],
															"signatures": [
																{
																	"id": 1253,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
																			"line": 28,
																			"character": 62
																		}
																	],
																	"parameters": [
																		{
																			"id": 1254,
																			"name": "interactionType",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "build/esm/utils/useEnhancedClickHandler.d.ts",
																					"qualifiedName": "InteractionType"
																				},
																				"name": "InteractionType",
																				"package": "@base-ui-components/react"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.RefObject"
																		},
																		"typeArguments": [
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																							"qualifiedName": "HTMLElement"
																						},
																						"name": "HTMLElement",
																						"package": "typescript"
																					}
																				]
																			}
																		],
																		"name": "RefObject",
																		"package": "@types/react",
																		"qualifiedName": "React.RefObject"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 1260,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1245,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PopoverPopup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1256,
												1255,
												1251,
												1260
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
											"line": 23,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1245,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PopoverPopup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1245,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1248,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1246,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1247,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1249,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1248,
												1246,
												1247,
												1249
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
											"line": 14,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1250,
										1245
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
									"line": 12,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
									"line": 13,
									"character": 25
								}
							]
						},
						{
							"id": 1215,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the popover against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1221,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1229,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How to align the popup relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'center'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 63,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "center"
													},
													{
														"type": "literal",
														"value": "start"
													},
													{
														"type": "literal",
														"value": "end"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.align"
											}
										},
										{
											"id": 1230,
											"name": "alignOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional offset along the alignment axis in pixels.\nAlso accepts a function that returns the offset to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 75,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.alignOffset"
											}
										},
										{
											"id": 1222,
											"name": "anchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element to position the popup against.\nBy default, the popup will be positioned against the trigger."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
															"qualifiedName": "VirtualElement"
														},
														"name": "VirtualElement",
														"package": "@floating-ui/dom"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefObject"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Element"
																		},
																		"name": "Element",
																		"package": "typescript"
																	}
																]
															}
														],
														"name": "RefObject",
														"package": "@types/react",
														"qualifiedName": "React.RefObject"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1223,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																	"line": 31,
																	"character": 86
																}
															],
															"signatures": [
																{
																	"id": 1224,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																			"line": 31,
																			"character": 86
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Element"
																				},
																				"name": "Element",
																				"package": "typescript"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
																					"qualifiedName": "VirtualElement"
																				},
																				"name": "VirtualElement",
																				"package": "@floating-ui/dom"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.anchor"
											}
										},
										{
											"id": 1234,
											"name": "arrowPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Minimum distance to maintain between the arrow and the edges of the popup.\n\nUse it to prevent the arrow element from hanging out of the rounded corners of a popup."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 98,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.arrowPadding"
											}
										},
										{
											"id": 1236,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1237,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1238,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1239,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1216,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PopoverPositioner.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1231,
											"name": "collisionBoundary",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element or a rectangle that delimits the area that the popup is confined to."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'clipping-ancestors'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 80,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Boundary"
												},
												"name": "Boundary",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.collisionBoundary"
											}
										},
										{
											"id": 1232,
											"name": "collisionPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional space to maintain from the edge of the collision boundary."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 85,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.d.mts",
													"qualifiedName": "Padding"
												},
												"name": "Padding",
												"package": "@floating-ui/utils"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.collisionPadding"
											}
										},
										{
											"id": 1225,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.open"
											}
										},
										{
											"id": 1226,
											"name": "positionMethod",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines which CSS "
													},
													{
														"kind": "code",
														"text": "`position`"
													},
													{
														"kind": "text",
														"text": " property to use."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'absolute'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "fixed"
													},
													{
														"type": "literal",
														"value": "absolute"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.positionMethod"
											}
										},
										{
											"id": 1240,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1216,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PopoverPositioner.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 1227,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Which side of the anchor element to align the popup against.\nMay automatically change to avoid collisions."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'bottom'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 46,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.side"
											}
										},
										{
											"id": 1228,
											"name": "sideOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Distance between the anchor and the popup in pixels.\nAlso accepts a function that returns the distance to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 58,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.sideOffset"
											}
										},
										{
											"id": 1233,
											"name": "sticky",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to maintain the popup in the viewport after\nthe anchor element was scrolled out of view."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 91,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.sticky"
											}
										},
										{
											"id": 1235,
											"name": "trackAnchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup tracks any layout shift of its positioning anchor."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 103,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverPositioner.SharedParameters.trackAnchor"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1229,
												1230,
												1222,
												1234,
												1236,
												1231,
												1232,
												1225,
												1226,
												1240,
												1227,
												1228,
												1233,
												1235
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
											"line": 22,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/popover/positioner/usePopoverPositioner.d.ts",
												"qualifiedName": "usePopoverPositioner.SharedParameters"
											},
											"name": "SharedParameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "usePopoverPositioner.SharedParameters"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1216,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PopoverPositioner.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1216,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1219,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1220,
											"name": "anchorHidden",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1217,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1218,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1219,
												1220,
												1217,
												1218
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1221,
										1216
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 1174,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the popover.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1176,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1193,
											"name": "actionsRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A ref to imperative actions."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
													"line": 52,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
															"qualifiedName": "usePopoverRoot.Actions"
														},
														"name": "Actions",
														"package": "@base-ui-components/react",
														"qualifiedName": "usePopoverRoot.Actions"
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverRoot.Parameters.actionsRef"
											}
										},
										{
											"id": 1177,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										},
										{
											"id": 1192,
											"name": "closeDelay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before closing the popover that was opened on hover.\nSpecified in milliseconds.\n\nRequires the "
													},
													{
														"kind": "code",
														"text": "`openOnHover`"
													},
													{
														"kind": "text",
														"text": " prop."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
													"line": 48,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverRoot.Parameters.closeDelay"
											}
										},
										{
											"id": 1178,
											"name": "defaultOpen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover is initially open.\n\nTo render a controlled popover, use the "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverRoot.Parameters.defaultOpen"
											}
										},
										{
											"id": 1191,
											"name": "delay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before the popover may be opened on hover. Specified in milliseconds.\n\nRequires the "
													},
													{
														"kind": "code",
														"text": "`openOnHover`"
													},
													{
														"kind": "text",
														"text": " prop."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n300\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverRoot.Parameters.delay"
											}
										},
										{
											"id": 1180,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the popover is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1181,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
															"line": 24,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 1182,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
																	"line": 24,
																	"character": 23
																}
															],
															"parameters": [
																{
																	"id": 1183,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 1184,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																},
																{
																	"id": 1185,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "build/esm/utils/translateOpenChangeReason.d.ts",
																			"qualifiedName": "OpenChangeReason"
																		},
																		"name": "OpenChangeReason",
																		"package": "@base-ui-components/react"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverRoot.Parameters.onOpenChange"
											}
										},
										{
											"id": 1186,
											"name": "onOpenChangeComplete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called after any animations complete when the popover is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
													"line": 28,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1187,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
															"line": 28,
															"character": 31
														}
													],
													"signatures": [
														{
															"id": 1188,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
																	"line": 28,
																	"character": 31
																}
															],
															"parameters": [
																{
																	"id": 1189,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverRoot.Parameters.onOpenChangeComplete"
											}
										},
										{
											"id": 1179,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverRoot.Parameters.open"
											}
										},
										{
											"id": 1190,
											"name": "openOnHover",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover should also open when the trigger is hovered."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/root/usePopoverRoot.d.ts",
													"line": 33,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePopoverRoot.Parameters.openOnHover"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1193,
												1177,
												1192,
												1178,
												1191,
												1180,
												1186,
												1179,
												1190
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
												"qualifiedName": "usePopoverRoot.Parameters"
											},
											"name": "Parameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "usePopoverRoot.Parameters"
										}
									]
								},
								{
									"id": 1175,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
											"line": 11,
											"character": 14
										}
									]
								},
								{
									"id": 1194,
									"name": "Actions",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
											"line": 16,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
											"qualifiedName": "usePopoverRoot.Actions"
										},
										"name": "usePopoverRoot.Actions",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1176,
										1175
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										1194
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1292,
							"name": "Title",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A heading that labels the popover.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<h2>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1294,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1295,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1296,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1297,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1298,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1293,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PopoverTitle.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1299,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1293,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PopoverTitle.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1295,
												1299
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/title/PopoverTitle.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "h1"
														},
														{
															"type": "literal",
															"value": "h2"
														},
														{
															"type": "literal",
															"value": "h3"
														},
														{
															"type": "literal",
															"value": "h4"
														},
														{
															"type": "literal",
															"value": "h5"
														},
														{
															"type": "literal",
															"value": "h6"
														}
													]
												},
												{
													"type": "reference",
													"target": 1293,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PopoverTitle.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1293,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/title/PopoverTitle.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1294,
										1293
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/title/PopoverTitle.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/title/PopoverTitle.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1198,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the popover.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"children": [
								{
									"id": 1202,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1203,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1204,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1205,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1206,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1199,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PopoverTrigger.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1207,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1199,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PopoverTrigger.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1203,
												1207
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
											"line": 21,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 1199,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PopoverTrigger.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1199,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1200,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover is currently disabled."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1201,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popover is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1200,
												1201
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1202,
										1199
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1261,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the popover anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1262,
									"name": "Arrow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/arrow/PopoverArrow.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1263,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1270,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PopoverArrow.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1276,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the popover.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1277,
									"name": "Backdrop",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/backdrop/PopoverBackdrop.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1278,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1283,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PopoverBackdrop.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1311,
							"name": "Close",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that closes the popover.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/close/PopoverClose.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/close/PopoverClose.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1312,
									"name": "Close",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/close/PopoverClose.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/close/PopoverClose.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1313,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1316,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PopoverClose.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1300,
							"name": "Description",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A paragraph with additional information about the popover.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<p>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/description/PopoverDescription.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/description/PopoverDescription.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1301,
									"name": "Description",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/description/PopoverDescription.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/description/PopoverDescription.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1302,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1305,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PopoverDescription.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLParagraphElement"
																},
																"name": "HTMLParagraphElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1241,
							"name": "Popup",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the popover contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
									"line": 12,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
									"line": 13,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1242,
									"name": "Popup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
											"line": 12,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/popup/PopoverPopup.d.ts",
											"line": 13,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1243,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1250,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PopoverPopup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1208,
							"name": "Portal",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"children": [
								{
									"id": 1211,
									"name": "propTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/portal/PopoverPortal.d.ts",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1211
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/portal/PopoverPortal.d.ts",
									"line": 8,
									"character": 24
								},
								{
									"fileName": "packages/react/build/esm/popover/portal/PopoverPortal.d.ts",
									"line": 9,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/popover/portal/PopoverPortal.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1209,
									"name": "Portal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A portal element that moves the popup to a different part of the DOM.\nBy default, the portal element is appended to "
											},
											{
												"kind": "code",
												"text": "`<body>`"
											},
											{
												"kind": "text",
												"text": ".\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/portal/PopoverPortal.d.ts",
											"line": 8,
											"character": 24
										}
									],
									"parameters": [
										{
											"id": 1210,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/popover/portal/PopoverPortal.d.ts",
													"qualifiedName": "PopoverPortal.Props"
												},
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "PopoverPortal.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										]
									}
								}
							]
						},
						{
							"id": 1212,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the popover against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1213,
									"name": "Positioner",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/positioner/PopoverPositioner.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1214,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1221,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PopoverPositioner.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1171,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the popover.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1172,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/root/PopoverRoot.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1173,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1176,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "PopoverRoot.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						},
						{
							"id": 1289,
							"name": "Title",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A heading that labels the popover.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<h2>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/title/PopoverTitle.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/title/PopoverTitle.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1290,
									"name": "Title",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/title/PopoverTitle.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/title/PopoverTitle.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1291,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1294,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PopoverTitle.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLHeadingElement"
																},
																"name": "HTMLHeadingElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1195,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the popover.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Popover](https://base-ui.com/react/components/popover)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1196,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/popover/trigger/PopoverTrigger.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1197,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1202,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PopoverTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1264,
								1279,
								1314,
								1303,
								1244,
								1215,
								1174,
								1292,
								1198
							]
						},
						{
							"title": "Functions",
							"children": [
								1261,
								1276,
								1311,
								1300,
								1241,
								1208,
								1212,
								1171,
								1289,
								1195
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/popover/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 1322,
					"name": "PreviewCard",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1409,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the preview card anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"children": [
								{
									"id": 1415,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1416,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1417,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1418,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1419,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1410,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PreviewCardArrow.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1420,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1410,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PreviewCardArrow.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1416,
												1420
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
											"line": 21,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1410,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PreviewCardArrow.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1410,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1413,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1411,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the preview card is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1412,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1414,
											"name": "uncentered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1413,
												1411,
												1412,
												1414
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1415,
										1410
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1424,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"children": [
								{
									"id": 1428,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1429,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1430,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1431,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1432,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1425,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PreviewCardBackdrop.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1433,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1425,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PreviewCardBackdrop.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1429,
												1433
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
											"line": 19,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1425,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PreviewCardBackdrop.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1425,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1426,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the preview card is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1427,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1426,
												1427
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1428,
										1425
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1394,
							"name": "Popup",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the preview card contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"children": [
								{
									"id": 1400,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1401,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1402,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1403,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1404,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1395,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PreviewCardPopup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1405,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1395,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PreviewCardPopup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1401,
												1405
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
											"line": 22,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1395,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PreviewCardPopup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1395,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1398,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1396,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the preview card is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1397,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1399,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1398,
												1396,
												1397,
												1399
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1400,
										1395
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 1365,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the popup against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"children": [
								{
									"id": 1371,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1379,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How to align the popup relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'center'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 63,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "center"
													},
													{
														"type": "literal",
														"value": "start"
													},
													{
														"type": "literal",
														"value": "end"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.align"
											}
										},
										{
											"id": 1380,
											"name": "alignOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional offset along the alignment axis in pixels.\nAlso accepts a function that returns the offset to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 75,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.alignOffset"
											}
										},
										{
											"id": 1372,
											"name": "anchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element to position the popup against.\nBy default, the popup will be positioned against the trigger."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
															"qualifiedName": "VirtualElement"
														},
														"name": "VirtualElement",
														"package": "@floating-ui/dom"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefObject"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Element"
																		},
																		"name": "Element",
																		"package": "typescript"
																	}
																]
															}
														],
														"name": "RefObject",
														"package": "@types/react",
														"qualifiedName": "React.RefObject"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1373,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																	"line": 31,
																	"character": 86
																}
															],
															"signatures": [
																{
																	"id": 1374,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																			"line": 31,
																			"character": 86
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Element"
																				},
																				"name": "Element",
																				"package": "typescript"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
																					"qualifiedName": "VirtualElement"
																				},
																				"name": "VirtualElement",
																				"package": "@floating-ui/dom"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.anchor"
											}
										},
										{
											"id": 1384,
											"name": "arrowPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Minimum distance to maintain between the arrow and the edges of the popup.\n\nUse it to prevent the arrow element from hanging out of the rounded corners of a popup."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 98,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.arrowPadding"
											}
										},
										{
											"id": 1386,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1387,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1388,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1389,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1366,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PreviewCardPositioner.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1381,
											"name": "collisionBoundary",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element or a rectangle that delimits the area that the popup is confined to."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'clipping-ancestors'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 80,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Boundary"
												},
												"name": "Boundary",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.collisionBoundary"
											}
										},
										{
											"id": 1382,
											"name": "collisionPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional space to maintain from the edge of the collision boundary."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 85,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.d.mts",
													"qualifiedName": "Padding"
												},
												"name": "Padding",
												"package": "@floating-ui/utils"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.collisionPadding"
											}
										},
										{
											"id": 1375,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.open"
											}
										},
										{
											"id": 1376,
											"name": "positionMethod",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines which CSS "
													},
													{
														"kind": "code",
														"text": "`position`"
													},
													{
														"kind": "text",
														"text": " property to use."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'absolute'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "fixed"
													},
													{
														"type": "literal",
														"value": "absolute"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.positionMethod"
											}
										},
										{
											"id": 1390,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1366,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PreviewCardPositioner.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 1377,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Which side of the anchor element to align the popup against.\nMay automatically change to avoid collisions."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'bottom'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 46,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.side"
											}
										},
										{
											"id": 1378,
											"name": "sideOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Distance between the anchor and the popup in pixels.\nAlso accepts a function that returns the distance to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 58,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.sideOffset"
											}
										},
										{
											"id": 1383,
											"name": "sticky",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to maintain the popup in the viewport after\nthe anchor element was scrolled out of view."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 91,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.sticky"
											}
										},
										{
											"id": 1385,
											"name": "trackAnchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup tracks any layout shift of its positioning anchor."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 103,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardPositioner.SharedParameters.trackAnchor"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1379,
												1380,
												1372,
												1384,
												1386,
												1381,
												1382,
												1375,
												1376,
												1390,
												1377,
												1378,
												1383,
												1385
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
											"line": 22,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/preview-card/positioner/usePreviewCardPositioner.d.ts",
												"qualifiedName": "usePreviewCardPositioner.SharedParameters"
											},
											"name": "SharedParameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "usePreviewCardPositioner.SharedParameters"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1366,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PreviewCardPositioner.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1366,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1369,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1370,
											"name": "anchorHidden",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1367,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the preview card is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1368,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1369,
												1370,
												1367,
												1368
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1371,
										1366
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 1326,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the preview card.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"children": [
								{
									"id": 1328,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1344,
											"name": "actionsRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A ref to imperative actions."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
															"qualifiedName": "usePreviewCardRoot.Actions"
														},
														"name": "Actions",
														"package": "@base-ui-components/react",
														"qualifiedName": "usePreviewCardRoot.Actions"
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardRoot.Parameters.actionsRef"
											}
										},
										{
											"id": 1329,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										},
										{
											"id": 1343,
											"name": "closeDelay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before closing the preview card. Specified in milliseconds."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n300\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardRoot.Parameters.closeDelay"
											}
										},
										{
											"id": 1330,
											"name": "defaultOpen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the preview card is initially open.\n\nTo render a controlled preview card, use the "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardRoot.Parameters.defaultOpen"
											}
										},
										{
											"id": 1342,
											"name": "delay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before the preview card opens. Specified in milliseconds."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n600\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
													"line": 32,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardRoot.Parameters.delay"
											}
										},
										{
											"id": 1332,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the preview card is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1333,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
															"line": 23,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 1334,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
																	"line": 23,
																	"character": 23
																}
															],
															"parameters": [
																{
																	"id": 1335,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 1336,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																},
																{
																	"id": 1337,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "build/esm/utils/translateOpenChangeReason.d.ts",
																			"qualifiedName": "OpenChangeReason"
																		},
																		"name": "OpenChangeReason",
																		"package": "@base-ui-components/react"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardRoot.Parameters.onOpenChange"
											}
										},
										{
											"id": 1338,
											"name": "onOpenChangeComplete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called after any animations complete when the preview card is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1339,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
															"line": 27,
															"character": 31
														}
													],
													"signatures": [
														{
															"id": 1340,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
																	"line": 27,
																	"character": 31
																}
															],
															"parameters": [
																{
																	"id": 1341,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardRoot.Parameters.onOpenChangeComplete"
											}
										},
										{
											"id": 1331,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the preview card is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/root/usePreviewCardRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "usePreviewCardRoot.Parameters.open"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1344,
												1329,
												1343,
												1330,
												1342,
												1332,
												1338,
												1331
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
												"qualifiedName": "usePreviewCardRoot.Parameters"
											},
											"name": "Parameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "usePreviewCardRoot.Parameters"
										}
									]
								},
								{
									"id": 1327,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
											"line": 11,
											"character": 14
										}
									]
								},
								{
									"id": 1345,
									"name": "Actions",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
											"line": 16,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
											"qualifiedName": "usePreviewCardRoot.Actions"
										},
										"name": "usePreviewCardRoot.Actions",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1328,
										1327
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										1345
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1353,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A link that opens the preview card.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<a>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"children": [
								{
									"id": 1356,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1357,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1358,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1359,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1360,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1354,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "PreviewCardTrigger.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1361,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1354,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "PreviewCardTrigger.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1357,
												1361
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
											"line": 17,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "a"
												},
												{
													"type": "reference",
													"target": 1354,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "PreviewCardTrigger.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1354,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1355,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the preview card is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1355
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1356,
										1354
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1406,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the preview card anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1407,
									"name": "Arrow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1408,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1415,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PreviewCardArrow.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1421,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1422,
									"name": "Backdrop",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1423,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1428,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PreviewCardBackdrop.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1391,
							"name": "Popup",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the preview card contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1392,
									"name": "Popup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/preview-card/popup/PreviewCardPopup.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1393,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1400,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PreviewCardPopup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1346,
							"name": "Portal",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"children": [
								{
									"id": 1349,
									"name": "propTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/portal/PreviewCardPortal.d.ts",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1349
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/portal/PreviewCardPortal.d.ts",
									"line": 8,
									"character": 24
								},
								{
									"fileName": "packages/react/build/esm/preview-card/portal/PreviewCardPortal.d.ts",
									"line": 9,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/preview-card/portal/PreviewCardPortal.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1347,
									"name": "Portal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A portal element that moves the popup to a different part of the DOM.\nBy default, the portal element is appended to "
											},
											{
												"kind": "code",
												"text": "`<body>`"
											},
											{
												"kind": "text",
												"text": ".\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/portal/PreviewCardPortal.d.ts",
											"line": 8,
											"character": 24
										}
									],
									"parameters": [
										{
											"id": 1348,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/preview-card/portal/PreviewCardPortal.d.ts",
													"qualifiedName": "PreviewCardPortal.Props"
												},
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "PreviewCardPortal.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										]
									}
								}
							]
						},
						{
							"id": 1362,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the popup against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1363,
									"name": "Positioner",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1364,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1371,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PreviewCardPositioner.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1323,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the preview card.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1324,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/preview-card/root/PreviewCardRoot.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1325,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1328,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "PreviewCardRoot.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						},
						{
							"id": 1350,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A link that opens the preview card.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<a>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Preview Card](https://base-ui.com/react/components/preview-card)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1351,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1352,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1356,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "PreviewCardTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLAnchorElement"
																},
																"name": "HTMLAnchorElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1409,
								1424,
								1394,
								1365,
								1326,
								1353
							]
						},
						{
							"title": "Functions",
							"children": [
								1406,
								1421,
								1391,
								1346,
								1362,
								1323,
								1350
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/preview-card/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 1434,
					"name": "Progress",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1483,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Visualizes the completion status of the task.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Progress](https://base-ui.com/react/components/progress)"
									}
								]
							},
							"children": [
								{
									"id": 1488,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1489,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1490,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1491,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1492,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1484,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ProgressIndicator.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1493,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1484,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ProgressIndicator.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1489,
												1493
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/indicator/ProgressIndicator.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1484,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ProgressIndicator.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1484,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1485,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.max"
											}
										},
										{
											"id": 1486,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.min"
											}
										},
										{
											"id": 1487,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 1513,
												"name": "ProgressStatus",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.status"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1485,
												1486,
												1487
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/indicator/ProgressIndicator.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1439,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "ProgressRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1488,
										1484
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/indicator/ProgressIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/progress/indicator/ProgressIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1438,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the progress bar and provides the task completion status to screen readers.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Progress](https://base-ui.com/react/components/progress)"
									}
								]
							},
							"children": [
								{
									"id": 1444,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1445,
											"name": "aria-label",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The label for the Indicator component."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.aria-label"
											}
										},
										{
											"id": 1446,
											"name": "aria-labelledby",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An id or space-separated list of ids of elements that label the Indicator component."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.aria-labelledby"
											}
										},
										{
											"id": 1447,
											"name": "aria-valuetext",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A string value that provides a human-readable text alternative for the current value of the progress indicator."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.aria-valuetext"
											}
										},
										{
											"id": 1461,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1462,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1463,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1464,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1439,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ProgressRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1448,
											"name": "format",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to format the value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Intl.NumberFormatOptions"
												},
												"name": "NumberFormatOptions",
												"package": "typescript",
												"qualifiedName": "Intl.NumberFormatOptions"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.format"
											}
										},
										{
											"id": 1449,
											"name": "getAriaLabel",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Accepts a function which returns a string value that provides an accessible name for the Indicator component."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1450,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
															"line": 27,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 1451,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": []
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
																	"line": 27,
																	"character": 23
																}
															],
															"parameters": [
																{
																	"id": 1452,
																	"name": "index",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.getAriaLabel"
											}
										},
										{
											"id": 1453,
											"name": "getAriaValueText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Accepts a function which returns a string value that provides a human-readable text alternative for the current value of the progress indicator."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1454,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
															"line": 34,
															"character": 27
														}
													],
													"signatures": [
														{
															"id": 1455,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": []
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
																	"line": 34,
																	"character": 27
																}
															],
															"parameters": [
																{
																	"id": 1456,
																	"name": "formattedValue",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The component's formatted value."
																			}
																		]
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																},
																{
																	"id": 1457,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The component's numerical value."
																			}
																		]
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.getAriaValueText"
											}
										},
										{
											"id": 1458,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum value."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n100\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.max"
											}
										},
										{
											"id": 1459,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The minimum value."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.min"
											}
										},
										{
											"id": 1465,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1439,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ProgressRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 1460,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The current value. The component is indeterminate when value is "
													},
													{
														"kind": "code",
														"text": "`null`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nnull\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useProgressRoot.Parameters.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1445,
												1446,
												1447,
												1461,
												1448,
												1449,
												1453,
												1458,
												1459,
												1465,
												1460
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
											"line": 17,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
												"qualifiedName": "useProgressRoot.Parameters"
											},
											"name": "Parameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useProgressRoot.Parameters"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1439,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ProgressRoot.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1439,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
											"line": 12,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1440,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1441,
													"name": "max",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
															"line": 13,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1442,
													"name": "min",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
															"line": 14,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1443,
													"name": "status",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 1513,
														"name": "ProgressStatus",
														"package": "@base-ui-components/react"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1441,
														1442,
														1443
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 12,
													"character": 17
												}
											]
										}
									},
									"extendedBy": [
										{
											"type": "reference",
											"target": 1470,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1484,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 1498,
											"name": "State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1444
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										1439
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1469,
							"name": "Track",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Contains the progress bar indicator.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Progress](https://base-ui.com/react/components/progress)"
									}
								]
							},
							"children": [
								{
									"id": 1474,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1475,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1476,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1477,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1478,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1470,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ProgressTrack.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1479,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1470,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ProgressTrack.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1475,
												1479
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/track/ProgressTrack.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1470,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ProgressTrack.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1470,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1471,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.max"
											}
										},
										{
											"id": 1472,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.min"
											}
										},
										{
											"id": 1473,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 1513,
												"name": "ProgressStatus",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.status"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1471,
												1472,
												1473
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/track/ProgressTrack.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1439,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "ProgressRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1474,
										1470
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/track/ProgressTrack.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/progress/track/ProgressTrack.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1497,
							"name": "Value",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A text label displaying the current value.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Progress](https://base-ui.com/react/components/progress)"
									}
								]
							},
							"children": [
								{
									"id": 1502,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1503,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1504,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
																	"line": 15,
																	"character": 27
																}
															],
															"signatures": [
																{
																	"id": 1505,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
																			"line": 15,
																			"character": 27
																		}
																	],
																	"parameters": [
																		{
																			"id": 1506,
																			"name": "formattedValue",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1507,
																			"name": "value",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.ReactNode"
																		},
																		"name": "ReactNode",
																		"package": "@types/react",
																		"qualifiedName": "React.ReactNode"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 1508,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1509,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1510,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1511,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1498,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ProgressValue.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 1512,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1498,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ProgressValue.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1503,
												1508,
												1512
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "span"
														},
														{
															"type": "reference",
															"target": 1498,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "ProgressValue.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "children"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 1498,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1499,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.max"
											}
										},
										{
											"id": 1500,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.min"
											}
										},
										{
											"id": 1501,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 1513,
												"name": "ProgressStatus",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "ProgressRoot.State.status"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1499,
												1500,
												1501
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1439,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "ProgressRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1502,
										1498
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1513,
							"name": "Status",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/root/useProgressRoot.d.ts",
									"line": 2,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "indeterminate"
									},
									{
										"type": "literal",
										"value": "progressing"
									},
									{
										"type": "literal",
										"value": "complete"
									}
								]
							}
						},
						{
							"id": 1480,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Visualizes the completion status of the task.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Progress](https://base-ui.com/react/components/progress)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/indicator/ProgressIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/progress/indicator/ProgressIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1481,
									"name": "Indicator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/indicator/ProgressIndicator.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/progress/indicator/ProgressIndicator.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1482,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1488,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ProgressIndicator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1435,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the progress bar and provides the task completion status to screen readers.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Progress](https://base-ui.com/react/components/progress)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1436,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/progress/root/ProgressRoot.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1437,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1444,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ProgressRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1466,
							"name": "Track",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Contains the progress bar indicator.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Progress](https://base-ui.com/react/components/progress)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/track/ProgressTrack.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/progress/track/ProgressTrack.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1467,
									"name": "Track",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/track/ProgressTrack.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/progress/track/ProgressTrack.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1468,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1474,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ProgressTrack.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1494,
							"name": "Value",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A text label displaying the current value.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Progress](https://base-ui.com/react/components/progress)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1495,
									"name": "Value",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/progress/value/ProgressValue.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1496,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1502,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ProgressValue.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1483,
								1438,
								1469,
								1497
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								1513
							]
						},
						{
							"title": "Functions",
							"children": [
								1480,
								1435,
								1466,
								1494
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/progress/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 1514,
					"name": "Radio",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1537,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the radio button is selected.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Radio](https://base-ui.com/react/components/radio)"
									}
								]
							},
							"children": [
								{
									"id": 1538,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1540,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1541,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1542,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1543,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1545,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "RadioIndicator.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1539,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the HTML element in the DOM when the radio button is inactive."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1544,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1545,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "RadioIndicator.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1540,
												1539,
												1544
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 1545,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "RadioIndicator.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1545,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1546,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the radio button is currently selected."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1547,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1546,
												1547
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
											"line": 19,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1538,
										1545
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1518,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents the radio button itself.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element and a hidden "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " beside.\n\nDocumentation: [Base UI Radio](https://base-ui.com/react/components/radio)"
									}
								]
							},
							"children": [
								{
									"id": 1519,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1524,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1525,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1526,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1527,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1529,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "RadioRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 1521,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Omit.disabled"
											}
										},
										{
											"id": 1523,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to select the radio button."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1528,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1529,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "RadioRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										},
										{
											"id": 1522,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must choose a value before submitting a form."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1520,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The unique identifying value of the radio in a group."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1524,
												1521,
												1523,
												1528,
												1522,
												1520
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "button"
														},
														{
															"type": "reference",
															"target": 1529,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "RadioRoot.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "value"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 1529,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1530,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the radio button is currently selected."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1531,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1532,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to select the radio button."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1533,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must choose a value before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1530,
												1531,
												1532,
												1533
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
											"line": 32,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1519,
										1529
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1534,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the radio button is selected.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Radio](https://base-ui.com/react/components/radio)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1535,
									"name": "Indicator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/radio/indicator/RadioIndicator.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1536,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1538,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "RadioIndicator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1515,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents the radio button itself.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element and a hidden "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " beside.\n\nDocumentation: [Base UI Radio](https://base-ui.com/react/components/radio)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1516,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/radio/root/RadioRoot.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1517,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1519,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "RadioRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1537,
								1518
							]
						},
						{
							"title": "Functions",
							"children": [
								1534,
								1515
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/radio/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 1551,
					"name": "RadioGroup",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides a shared state to a series of radio buttons.\nRenders a "
							},
							{
								"kind": "code",
								"text": "`<div>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nDocumentation: [Base UI Radio Group](https://base-ui.com/react/components/radio)"
							}
						]
					},
					"children": [
						{
							"id": 1560,
							"name": "Props",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1572,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1573,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/utils/types.d.ts",
															"line": 32,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 1574,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 1575,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 1552,
																		"name": "State",
																		"package": "@base-ui-components/react",
																		"qualifiedName": "RadioGroup.State"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Omit.className"
									}
								},
								{
									"id": 1566,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The uncontrolled value of the radio button that should be initially selected.\n\nTo render a controlled radio group, use the "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " prop instead."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
											"line": 49,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 1561,
									"name": "disabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the component should ignore user interaction."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
											"line": 23,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1564,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Identifies the field when a form is submitted."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
											"line": 37,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1567,
									"name": "onValueChange",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback fired when the value changes."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
											"line": 53,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1568,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
													"line": 53,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 1569,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
															"line": 53,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 1570,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 1571,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1562,
									"name": "readOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the user should be unable to select a different radio button in the group."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
											"line": 28,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1576,
									"name": "render",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
											},
											{
												"kind": "code",
												"text": "`ReactElement`"
											},
											{
												"kind": "text",
												"text": " or a function that returns the element to render."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 39,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactElement"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.JSXElementConstructor"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "JSXElementConstructor",
																"package": "@types/react",
																"qualifiedName": "React.JSXElementConstructor"
															}
														]
													}
												],
												"name": "ReactElement",
												"package": "@types/react",
												"qualifiedName": "React.ReactElement"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/types.d.ts",
													"qualifiedName": "ComponentRenderFn"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "GenericHTMLProps"
														},
														"name": "GenericHTMLProps",
														"package": "@base-ui-components/react"
													},
													{
														"type": "reference",
														"target": 1552,
														"name": "State",
														"package": "@base-ui-components/react",
														"qualifiedName": "RadioGroup.State"
													}
												],
												"name": "ComponentRenderFn",
												"package": "@base-ui-components/react"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Omit.render"
									}
								},
								{
									"id": 1563,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the user must choose a value before submitting a form."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
											"line": 33,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1565,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The controlled value of the radio item that should be currently selected.\n\nTo render an uncontrolled radio group, use the "
											},
											{
												"kind": "code",
												"text": "`defaultValue`"
											},
											{
												"kind": "text",
												"text": " prop instead."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
											"line": 43,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1572,
										1566,
										1561,
										1564,
										1567,
										1562,
										1576,
										1563,
										1565
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
									"line": 18,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1552,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "RadioGroup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "value"
												},
												{
													"type": "literal",
													"value": "defaultValue"
												}
											]
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							]
						},
						{
							"id": 1552,
							"name": "State",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1556,
									"name": "dirty",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 543,
										"name": "State.dirty"
									}
								},
								{
									"id": 1554,
									"name": "disabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the component should ignore user interaction."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 34,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 541,
										"name": "State.disabled"
									}
								},
								{
									"id": 1558,
									"name": "filled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 38,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 545,
										"name": "State.filled"
									}
								},
								{
									"id": 1559,
									"name": "focused",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 39,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 546,
										"name": "State.focused"
									}
								},
								{
									"id": 1553,
									"name": "readOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the user should be unable to select a different radio button in the group."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
											"line": 16,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								},
								{
									"id": 1555,
									"name": "touched",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 35,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 542,
										"name": "State.touched"
									}
								},
								{
									"id": 1557,
									"name": "valid",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
											"line": 37,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 544,
										"name": "State.valid"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1556,
										1554,
										1558,
										1559,
										1553,
										1555,
										1557
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
									"line": 12,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": 540,
									"name": "State",
									"package": "@base-ui-components/react",
									"qualifiedName": "FieldRoot.State"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								1560,
								1552
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
							"line": 10,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
							"line": 11,
							"character": 25
						}
					]
				},
				{
					"id": 1577,
					"name": "ScrollArea",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1631,
							"name": "Corner",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A small rectangular area that appears at the intersection of horizontal and vertical scrollbars.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"children": [
								{
									"id": 1633,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1634,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1635,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1636,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1637,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1632,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ScrollAreaCorner.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1638,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1632,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ScrollAreaCorner.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1634,
												1638
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1632,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ScrollAreaCorner.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1632,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1633,
										1632
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1581,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the scroll area.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"children": [
								{
									"id": 1582,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1583,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1584,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1585,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1586,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1588,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ScrollAreaRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1587,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1588,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ScrollAreaRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1583,
												1587
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1588,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ScrollAreaRoot.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1588,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1582,
										1588
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1603,
							"name": "Scrollbar",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A vertical or horizontal scrollbar for the scroll area.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"children": [
								{
									"id": 1608,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1611,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1612,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1613,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1614,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1604,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ScrollAreaScrollbar.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1610,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the HTML element in the DOM when the viewport isn’t scrollable."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
													"line": 26,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1609,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the scrollbar controls vertical or horizontal scroll."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'vertical'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "horizontal"
													},
													{
														"type": "literal",
														"value": "vertical"
													}
												]
											}
										},
										{
											"id": 1615,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1604,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ScrollAreaScrollbar.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1611,
												1610,
												1609,
												1615
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
											"line": 16,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1604,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ScrollAreaScrollbar.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1604,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1605,
											"name": "hovering",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1607,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "horizontal"
													},
													{
														"type": "literal",
														"value": "vertical"
													}
												]
											}
										},
										{
											"id": 1606,
											"name": "scrolling",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1605,
												1607,
												1606
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1608,
										1604
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1619,
							"name": "Thumb",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The draggable part of the the scrollbar that indicates the current scroll position.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"children": [
								{
									"id": 1622,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1623,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1624,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1625,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1626,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1620,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ScrollAreaThumb.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1627,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1620,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ScrollAreaThumb.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1623,
												1627
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1620,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ScrollAreaThumb.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1620,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1621,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "horizontal"
													},
													{
														"type": "literal",
														"value": "vertical"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1621
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1622,
										1620
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1592,
							"name": "Viewport",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The actual scrollable container of the scroll area.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"children": [
								{
									"id": 1593,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1594,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1595,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1596,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1597,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1599,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "ScrollAreaViewport.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1598,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1599,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "ScrollAreaViewport.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1594,
												1598
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1599,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ScrollAreaViewport.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1599,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1593,
										1599
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1628,
							"name": "Corner",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A small rectangular area that appears at the intersection of horizontal and vertical scrollbars.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1629,
									"name": "Corner",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1630,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1633,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ScrollAreaCorner.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1578,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the scroll area.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1579,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1580,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1582,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ScrollAreaRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1600,
							"name": "Scrollbar",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A vertical or horizontal scrollbar for the scroll area.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1601,
									"name": "Scrollbar",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1602,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1608,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ScrollAreaScrollbar.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1616,
							"name": "Thumb",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The draggable part of the the scrollbar that indicates the current scroll position.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1617,
									"name": "Thumb",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1618,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1622,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ScrollAreaThumb.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1589,
							"name": "Viewport",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The actual scrollable container of the scroll area.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Scroll Area](https://base-ui.com/react/components/scroll-area)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1590,
									"name": "Viewport",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1591,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1593,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "ScrollAreaViewport.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1631,
								1581,
								1603,
								1619,
								1592
							]
						},
						{
							"title": "Functions",
							"children": [
								1628,
								1578,
								1600,
								1616,
								1589
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/scroll-area/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 1641,
					"name": "Select",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1836,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the select menu anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1842,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1843,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1844,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1845,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1846,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1837,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectArrow.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1847,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1837,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectArrow.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1843,
												1847
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
											"line": 21,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1837,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectArrow.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1837,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1840,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1838,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the select menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1839,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "Side"
														},
														"name": "Side",
														"package": "@base-ui-components/react"
													},
													{
														"type": "literal",
														"value": "none"
													}
												]
											}
										},
										{
											"id": 1841,
											"name": "uncentered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1840,
												1838,
												1839,
												1841
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1842,
										1837
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1732,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the menu popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1733,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1734,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1735,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1736,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1737,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1739,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectBackdrop.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1738,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1739,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectBackdrop.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1734,
												1738
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1739,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectBackdrop.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1739,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1740,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the select menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1741,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1740,
												1741
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
											"line": 14,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1733,
										1739
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1875,
							"name": "Group",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups related select items with the corresponding label.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1877,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1878,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1879,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1880,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1881,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1876,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectGroup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1882,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1876,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectGroup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1878,
												1882
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/group/SelectGroup.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1876,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectGroup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1876,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/group/SelectGroup.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1877,
										1876
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/group/SelectGroup.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/group/SelectGroup.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1886,
							"name": "GroupLabel",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An accessible label that is automatically associated with its parent group.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1888,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1889,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1890,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1891,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1892,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1887,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectGroupLabel.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1893,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1887,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectGroupLabel.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1889,
												1893
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/group-label/SelectGroupLabel.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1887,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectGroupLabel.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1887,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/group-label/SelectGroupLabel.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1888,
										1887
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/group-label/SelectGroupLabel.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/group-label/SelectGroupLabel.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1717,
							"name": "Icon",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An icon that indicates that the trigger button opens a select menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1719,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1720,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1721,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1722,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1723,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1718,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectIcon.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1724,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1718,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectIcon.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1720,
												1724
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/icon/SelectIcon.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 1718,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectIcon.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1718,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/icon/SelectIcon.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1719,
										1718
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/icon/SelectIcon.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/icon/SelectIcon.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1791,
							"name": "Item",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An individual option in the select menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1797,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1798,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Omit.children"
											}
										},
										{
											"id": 1802,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1803,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1804,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1805,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1792,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectItem.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 1800,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1801,
											"name": "label",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Overrides the text label to use on the trigger when this item is selected\nand when the item is matched during keyboard text navigation."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1806,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1792,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectItem.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										},
										{
											"id": 1799,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A unique value that identifies this select item."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nnull\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1798,
												1802,
												1800,
												1801,
												1806,
												1799
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
											"line": 23,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "div"
														},
														{
															"type": "reference",
															"target": 1792,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "SelectItem.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 1792,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1793,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1794,
											"name": "highlighted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1796,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the select menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1795,
											"name": "selected",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1793,
												1794,
												1796,
												1795
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1797,
										1792
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1810,
							"name": "ItemIndicator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the select item is selected.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1811,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1812,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 1814,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1815,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1816,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1817,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1819,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectItemIndicator.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1813,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the HTML element in the DOM when the item is not selected."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1818,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1819,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectItemIndicator.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1812,
												1814,
												1813,
												1818
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 1819,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectItemIndicator.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1819,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1820,
											"name": "selected",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1821,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1820,
												1821
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
											"line": 20,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1811,
										1819
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1825,
							"name": "ItemText",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A text label of the select item.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1826,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1827,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1828,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1829,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1830,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1832,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectItemText.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1831,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1832,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectItemText.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1827,
												1831
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item-text/SelectItemText.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1832,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectItemText.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1832,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item-text/SelectItemText.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1826,
										1832
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/item-text/SelectItemText.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/item-text/SelectItemText.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1774,
							"name": "Popup",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the select items.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1775,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1776,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 1778,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1779,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1780,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1781,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1783,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectPopup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1782,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1783,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectPopup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1776,
												1778,
												1782
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1783,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectPopup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1783,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1785,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "center"
													},
													{
														"type": "literal",
														"value": "start"
													},
													{
														"type": "literal",
														"value": "end"
													}
												]
											}
										},
										{
											"id": 1786,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1784,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "Side"
														},
														"name": "Side",
														"package": "@base-ui-components/react"
													},
													{
														"type": "literal",
														"value": "none"
													}
												]
											}
										},
										{
											"id": 1787,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1785,
												1786,
												1784,
												1787
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
											"line": 20,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1775,
										1783
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 1745,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the select menu popup against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1751,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1759,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How to align the popup relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'center'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 63,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "center"
													},
													{
														"type": "literal",
														"value": "start"
													},
													{
														"type": "literal",
														"value": "end"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.align"
											}
										},
										{
											"id": 1760,
											"name": "alignOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional offset along the alignment axis in pixels.\nAlso accepts a function that returns the offset to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 75,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.alignOffset"
											}
										},
										{
											"id": 1752,
											"name": "anchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element to position the popup against.\nBy default, the popup will be positioned against the trigger."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
															"qualifiedName": "VirtualElement"
														},
														"name": "VirtualElement",
														"package": "@floating-ui/dom"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefObject"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Element"
																		},
																		"name": "Element",
																		"package": "typescript"
																	}
																]
															}
														],
														"name": "RefObject",
														"package": "@types/react",
														"qualifiedName": "React.RefObject"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1753,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																	"line": 31,
																	"character": 86
																}
															],
															"signatures": [
																{
																	"id": 1754,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																			"line": 31,
																			"character": 86
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Element"
																				},
																				"name": "Element",
																				"package": "typescript"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
																					"qualifiedName": "VirtualElement"
																				},
																				"name": "VirtualElement",
																				"package": "@floating-ui/dom"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.anchor"
											}
										},
										{
											"id": 1764,
											"name": "arrowPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Minimum distance to maintain between the arrow and the edges of the popup.\n\nUse it to prevent the arrow element from hanging out of the rounded corners of a popup."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 98,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.arrowPadding"
											}
										},
										{
											"id": 1766,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1767,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1768,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1769,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1746,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectPositioner.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1761,
											"name": "collisionBoundary",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element or a rectangle that delimits the area that the popup is confined to."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'clipping-ancestors'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 80,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Boundary"
												},
												"name": "Boundary",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.collisionBoundary"
											}
										},
										{
											"id": 1762,
											"name": "collisionPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional space to maintain from the edge of the collision boundary."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 85,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.d.mts",
													"qualifiedName": "Padding"
												},
												"name": "Padding",
												"package": "@floating-ui/utils"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.collisionPadding"
											}
										},
										{
											"id": 1755,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.open"
											}
										},
										{
											"id": 1756,
											"name": "positionMethod",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines which CSS "
													},
													{
														"kind": "code",
														"text": "`position`"
													},
													{
														"kind": "text",
														"text": " property to use."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'absolute'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "fixed"
													},
													{
														"type": "literal",
														"value": "absolute"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.positionMethod"
											}
										},
										{
											"id": 1770,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1746,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectPositioner.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 1757,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Which side of the anchor element to align the popup against.\nMay automatically change to avoid collisions."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'bottom'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 46,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.side"
											}
										},
										{
											"id": 1758,
											"name": "sideOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Distance between the anchor and the popup in pixels.\nAlso accepts a function that returns the distance to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 58,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.sideOffset"
											}
										},
										{
											"id": 1763,
											"name": "sticky",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to maintain the popup in the viewport after\nthe anchor element was scrolled out of view."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 91,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.sticky"
											}
										},
										{
											"id": 1765,
											"name": "trackAnchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup tracks any layout shift of its positioning anchor."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 103,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectPositioner.SharedParameters.trackAnchor"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1759,
												1760,
												1752,
												1764,
												1766,
												1761,
												1762,
												1755,
												1756,
												1770,
												1757,
												1758,
												1763,
												1765
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
											"line": 19,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/select/positioner/useSelectPositioner.d.ts",
												"qualifiedName": "useSelectPositioner.SharedParameters"
											},
											"name": "SharedParameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useSelectPositioner.SharedParameters"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1746,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectPositioner.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1746,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1749,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 1750,
											"name": "anchorHidden",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1747,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1748,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "Side"
														},
														"name": "Side",
														"package": "@base-ui-components/react"
													},
													{
														"type": "literal",
														"value": "none"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1749,
												1750,
												1747,
												1748
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1751,
										1746
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 1651,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the select.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1652,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1680,
											"name": "actionsRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A ref to imperative actions."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 82,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
															"qualifiedName": "useSelectRoot.Actions"
														},
														"name": "Actions",
														"package": "@base-ui-components/react",
														"qualifiedName": "useSelectRoot.Actions"
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.actionsRef"
											}
										},
										{
											"id": 1677,
											"name": "alignItemToTrigger",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines if the selected item inside the popup should align to the trigger element."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 69,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.alignItemToTrigger"
											}
										},
										{
											"id": 1653,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										},
										{
											"id": 1666,
											"name": "defaultOpen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the select menu is initially open.\n\nTo render a controlled select menu, use the "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 52,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.defaultOpen"
											}
										},
										{
											"id": 1665,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The uncontrolled value of the select when it’s initially rendered.\n\nTo render a controlled select, use the "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nnull\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 1681,
														"name": "Value",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectRoot.Props.Value",
														"refersToTypeParameter": true
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.defaultValue"
											}
										},
										{
											"id": 1658,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.disabled"
											}
										},
										{
											"id": 1655,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the Select."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.id"
											}
										},
										{
											"id": 1679,
											"name": "modal",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the select should prevent outside clicks and lock page scroll when open."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 78,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.modal"
											}
										},
										{
											"id": 1654,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Identifies the field when a form is submitted."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 11,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.name"
											}
										},
										{
											"id": 1667,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the select menu is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 56,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1668,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
															"line": 56,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 1669,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
																	"line": 56,
																	"character": 23
																}
															],
															"parameters": [
																{
																	"id": 1670,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 1671,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.onOpenChange"
											}
										},
										{
											"id": 1672,
											"name": "onOpenChangeComplete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called after any animations complete when the select menu is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 60,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1673,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
															"line": 60,
															"character": 31
														}
													],
													"signatures": [
														{
															"id": 1674,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
																	"line": 60,
																	"character": 31
																}
															],
															"parameters": [
																{
																	"id": 1675,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.onOpenChangeComplete"
											}
										},
										{
											"id": 1660,
											"name": "onValueChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback fired when the value of the select changes. Use when controlled."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1661,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
															"line": 38,
															"character": 24
														}
													],
													"signatures": [
														{
															"id": 1662,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
																	"line": 38,
																	"character": 24
																}
															],
															"parameters": [
																{
																	"id": 1663,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 1681,
																		"name": "Value",
																		"package": "@base-ui-components/react",
																		"qualifiedName": "SelectRoot.Props.Value",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 1664,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.onValueChange"
											}
										},
										{
											"id": 1676,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the select menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 64,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.open"
											}
										},
										{
											"id": 1657,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to choose a different option from the select menu."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.readOnly"
											}
										},
										{
											"id": 1656,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must choose a value before submitting a form."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.required"
											}
										},
										{
											"id": 1678,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transition status of the Select."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 73,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.transitionStatus"
											}
										},
										{
											"id": 1659,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value of the select."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/root/useSelectRoot.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 1681,
														"name": "Value",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectRoot.Props.Value",
														"refersToTypeParameter": true
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSelectRoot.Parameters.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1680,
												1677,
												1653,
												1666,
												1665,
												1658,
												1655,
												1679,
												1654,
												1667,
												1672,
												1660,
												1676,
												1657,
												1656,
												1678,
												1659
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"typeParameters": [
										{
											"id": 1681,
											"name": "Value",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
												"qualifiedName": "useSelectRoot.Parameters"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 1681,
													"name": "Value",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectRoot.Props.Value",
													"refersToTypeParameter": true
												}
											],
											"name": "Parameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useSelectRoot.Parameters"
										}
									]
								},
								{
									"id": 1682,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
											"line": 14,
											"character": 14
										}
									]
								},
								{
									"id": 1683,
									"name": "Actions",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
											"line": 16,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
											"qualifiedName": "useSelectRoot.Actions"
										},
										"name": "useSelectRoot.Actions",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1652,
										1682
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										1683
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 10,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 18,
									"character": 17
								}
							]
						},
						{
							"id": 1851,
							"name": "ScrollDownArrow",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An element that scrolls the select menu down when hovered.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1853,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1855,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1856,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1857,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1858,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1852,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectScrollDownArrow.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1854,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the HTML element in the DOM while the select menu is not scrollable."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1859,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1852,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectScrollDownArrow.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1855,
												1854,
												1859
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1852,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectScrollDownArrow.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1852,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1853,
										1852
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1863,
							"name": "ScrollUpArrow",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An element that scrolls the select menu down when hovered.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1865,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1867,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1868,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1869,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1870,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1864,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectScrollUpArrow.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1866,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the HTML element in the DOM while the select menu is not scrollable."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1871,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1864,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectScrollUpArrow.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1867,
												1866,
												1871
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1864,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectScrollUpArrow.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1864,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1865,
										1864
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1687,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the select menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1688,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1689,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.children"
											}
										},
										{
											"id": 1691,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1692,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1693,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1694,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1696,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectTrigger.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1690,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1695,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1696,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectTrigger.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1689,
												1691,
												1690,
												1695
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1696,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SelectTrigger.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 1696,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1697,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the select menu is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1697
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
											"line": 19,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1688,
										1696
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1701,
							"name": "Value",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A text label of the currently selected item.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"children": [
								{
									"id": 1702,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1703,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1704,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
																	"line": 12,
																	"character": 27
																}
															],
															"signatures": [
																{
																	"id": 1705,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
																			"line": 12,
																			"character": 27
																		}
																	],
																	"parameters": [
																		{
																			"id": 1706,
																			"name": "value",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.ReactNode"
																		},
																		"name": "ReactNode",
																		"package": "@types/react",
																		"qualifiedName": "React.ReactNode"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 1708,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1709,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1710,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1711,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1713,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SelectValue.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 1707,
											"name": "placeholder",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A placeholder value to display when no value is selected.\n\nYou can use this prop to pre-render the displayed text\nduring SSR in order to avoid the hydration flash."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1712,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1713,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SelectValue.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1703,
												1708,
												1707,
												1712
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
											"line": 11,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "span"
														},
														{
															"type": "reference",
															"target": 1713,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "SelectValue.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "children"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 1713,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
											"line": 21,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1702,
										1713
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 1646,
							"name": "Root",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1647,
									"name": "propTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1647
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 10,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 18,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 1648,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
											"line": 19,
											"character": 4
										}
									],
									"typeParameters": [
										{
											"id": 1649,
											"name": "Value",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1650,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1652,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1644,
														"name": "Value",
														"package": "@base-ui-components/react",
														"refersToTypeParameter": true
													}
												],
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "SelectRoot.Props"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						},
						{
							"id": 1833,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the select menu anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1834,
									"name": "Arrow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/arrow/SelectArrow.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1835,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1842,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectArrow.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1729,
							"name": "Backdrop",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An overlay displayed beneath the menu popup.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1730,
									"name": "Backdrop",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/backdrop/SelectBackdrop.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1731,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1733,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectBackdrop.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1872,
							"name": "Group",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups related select items with the corresponding label.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/group/SelectGroup.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/group/SelectGroup.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1873,
									"name": "Group",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/group/SelectGroup.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/group/SelectGroup.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1874,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1877,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectGroup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1883,
							"name": "GroupLabel",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An accessible label that is automatically associated with its parent group.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/group-label/SelectGroupLabel.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/group-label/SelectGroupLabel.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1884,
									"name": "GroupLabel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/group-label/SelectGroupLabel.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/group-label/SelectGroupLabel.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1885,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1888,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectGroupLabel.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1714,
							"name": "Icon",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An icon that indicates that the trigger button opens a select menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/icon/SelectIcon.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/icon/SelectIcon.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1715,
									"name": "Icon",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/icon/SelectIcon.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/icon/SelectIcon.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1716,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1719,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectIcon.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1788,
							"name": "Item",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An individual option in the select menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1789,
									"name": "Item",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/item/SelectItem.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1790,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1797,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectItem.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1807,
							"name": "ItemIndicator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the select item is selected.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1808,
									"name": "ItemIndicator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/item-indicator/SelectItemIndicator.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1809,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1811,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectItemIndicator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1822,
							"name": "ItemText",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A text label of the select item.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/item-text/SelectItemText.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/item-text/SelectItemText.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1823,
									"name": "ItemText",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/item-text/SelectItemText.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/item-text/SelectItemText.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1824,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1826,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectItemText.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1771,
							"name": "Popup",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the select items.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1772,
									"name": "Popup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/popup/SelectPopup.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1773,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1775,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectPopup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1725,
							"name": "Portal",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"children": [
								{
									"id": 1728,
									"name": "propTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/portal/SelectPortal.d.ts",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1728
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/portal/SelectPortal.d.ts",
									"line": 8,
									"character": 24
								},
								{
									"fileName": "packages/react/build/esm/select/portal/SelectPortal.d.ts",
									"line": 9,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/select/portal/SelectPortal.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1726,
									"name": "Portal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A portal element that moves the popup to a different part of the DOM.\nBy default, the portal element is appended to "
											},
											{
												"kind": "code",
												"text": "`<body>`"
											},
											{
												"kind": "text",
												"text": ".\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/portal/SelectPortal.d.ts",
											"line": 8,
											"character": 24
										}
									],
									"parameters": [
										{
											"id": 1727,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/select/portal/SelectPortal.d.ts",
													"qualifiedName": "SelectPortal.Props"
												},
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "SelectPortal.Props"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						},
						{
							"id": 1742,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the select menu popup against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1743,
									"name": "Positioner",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/positioner/SelectPositioner.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1744,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1751,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectPositioner.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1642,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the select.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 10,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
									"line": 18,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 1643,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/root/SelectRoot.d.ts",
											"line": 19,
											"character": 4
										}
									],
									"typeParameters": [
										{
											"id": 1644,
											"name": "Value",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1645,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1652,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1644,
														"name": "Value",
														"package": "@base-ui-components/react",
														"refersToTypeParameter": true
													}
												],
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "SelectRoot.Props"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						},
						{
							"id": 1848,
							"name": "ScrollDownArrow",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An element that scrolls the select menu down when hovered.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1849,
									"name": "ScrollDownArrow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1850,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1853,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectScrollDownArrow.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1860,
							"name": "ScrollUpArrow",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An element that scrolls the select menu down when hovered.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1861,
									"name": "ScrollUpArrow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1862,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1865,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectScrollUpArrow.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1684,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A button that opens the select menu.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1685,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/trigger/SelectTrigger.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1686,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1688,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLElement"
																},
																"name": "HTMLElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1698,
							"name": "Value",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A text label of the currently selected item.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Select](https://base-ui.com/react/components/select)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1699,
									"name": "Value",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/select/value/SelectValue.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1700,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1702,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SelectValue.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1894,
							"name": "Separator",
							"variant": "reference",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/select/index.parts.d.ts",
									"line": 17,
									"character": 9
								}
							],
							"target": 953
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1836,
								1732,
								1875,
								1886,
								1717,
								1791,
								1810,
								1825,
								1774,
								1745,
								1651,
								1851,
								1863,
								1687,
								1701
							]
						},
						{
							"title": "Interfaces",
							"children": [
								1646
							]
						},
						{
							"title": "Functions",
							"children": [
								1833,
								1729,
								1872,
								1883,
								1714,
								1788,
								1807,
								1822,
								1771,
								1725,
								1742,
								1642,
								1848,
								1860,
								1684,
								1698
							]
						},
						{
							"title": "References",
							"children": [
								1894
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/select/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 1896,
					"name": "Slider",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1968,
							"name": "Control",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The clickable, interactive part of the slider.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"children": [
								{
									"id": 1969,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1970,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1971,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1972,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1973,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1904,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SliderRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1974,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1904,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SliderRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1970,
												1974
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/control/SliderControl.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1904,
													"name": "SliderRoot.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1969
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/control/SliderControl.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/control/SliderControl.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 2059,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Visualizes the current value of the slider.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"children": [
								{
									"id": 2060,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2061,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2062,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2063,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2064,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1904,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SliderRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2065,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1904,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SliderRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2061,
												2065
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/indicator/SliderIndicator.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1904,
													"name": "SliderRoot.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2060
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/indicator/SliderIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/indicator/SliderIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1903,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the slider.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"children": [
								{
									"id": 1919,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1943,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1944,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1945,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1946,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1904,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SliderRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 1920,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The uncontrolled value of the slider when it’s initially rendered.\n\nTo render a controlled slider, use the "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 59,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 1948,
												"name": "Value",
												"package": "@base-ui-components/react",
												"qualifiedName": "SliderRoot.Props.Value",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 1921,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 64,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Partial.disabled"
											}
										},
										{
											"id": 1922,
											"name": "format",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to format the input value."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 68,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Intl.NumberFormatOptions"
												},
												"name": "NumberFormatOptions",
												"package": "typescript",
												"qualifiedName": "Intl.NumberFormatOptions"
											}
										},
										{
											"id": 1942,
											"name": "largeStep",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n10\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 91,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.largeStep"
											}
										},
										{
											"id": 1938,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum allowed value of the slider.\nShould not be equal to min."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n100\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.max"
											}
										},
										{
											"id": 1939,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The minimum allowed value of the slider.\nShould not be equal to max."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 51,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.min"
											}
										},
										{
											"id": 1941,
											"name": "minStepsBetweenValues",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The minimum steps between values in a range slider."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 56,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.minStepsBetweenValues"
											}
										},
										{
											"id": 1936,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Identifies the field when a form is submitted."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 60,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.name"
											}
										},
										{
											"id": 1925,
											"name": "onValueChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback function that is fired when the slider's value changed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 86,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1926,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
															"line": 86,
															"character": 24
														}
													],
													"signatures": [
														{
															"id": 1927,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
																	"line": 86,
																	"character": 24
																}
															],
															"parameters": [
																{
																	"id": 1928,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The new value."
																			}
																		]
																	},
																	"type": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": 1948,
																			"name": "Value",
																			"package": "@base-ui-components/react",
																			"qualifiedName": "SliderRoot.Props.Value",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "number"
																		},
																		"trueType": {
																			"type": "intrinsic",
																			"name": "number"
																		},
																		"falseType": {
																			"type": "reference",
																			"target": 1948,
																			"name": "Value",
																			"package": "@base-ui-components/react",
																			"qualifiedName": "SliderRoot.Props.Value",
																			"refersToTypeParameter": true
																		}
																	}
																},
																{
																	"id": 1929,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The corresponding event that initiated the change.\nYou can pull out the new value by accessing "
																			},
																			{
																				"kind": "code",
																				"text": "`event.target.value`"
																			},
																			{
																				"kind": "text",
																				"text": " (any)."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																},
																{
																	"id": 1930,
																	"name": "activeThumbIndex",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Index of the currently moved thumb."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 1931,
											"name": "onValueCommitted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback function that is fired when the "
													},
													{
														"kind": "code",
														"text": "`pointerup`"
													},
													{
														"kind": "text",
														"text": " is triggered."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 94,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1932,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
															"line": 94,
															"character": 27
														}
													],
													"signatures": [
														{
															"id": 1933,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
																	"line": 94,
																	"character": 27
																}
															],
															"parameters": [
																{
																	"id": 1934,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The new value."
																			}
																		]
																	},
																	"type": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": 1948,
																			"name": "Value",
																			"package": "@base-ui-components/react",
																			"qualifiedName": "SliderRoot.Props.Value",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "number"
																		},
																		"trueType": {
																			"type": "intrinsic",
																			"name": "number"
																		},
																		"falseType": {
																			"type": "reference",
																			"target": 1948,
																			"name": "Value",
																			"package": "@base-ui-components/react",
																			"qualifiedName": "SliderRoot.Props.Value",
																			"refersToTypeParameter": true
																		}
																	}
																},
																{
																	"id": 1935,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The corresponding event that initiated the change.\n**Warning**: This is a generic event not a change event."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 1937,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The component orientation."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'horizontal'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 82,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
													"qualifiedName": "useSliderRoot.Orientation"
												},
												"name": "Orientation",
												"package": "@base-ui-components/react",
												"qualifiedName": "useSliderRoot.Orientation"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.orientation"
											}
										},
										{
											"id": 1947,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1904,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SliderRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										},
										{
											"id": 1940,
											"name": "step",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The granularity with which the slider can step through values. (A \"discrete\" slider.)\nThe "
													},
													{
														"kind": "code",
														"text": "`min`"
													},
													{
														"kind": "text",
														"text": " prop serves as the origin for the valid values.\nWe recommend (max - min) to be evenly divisible by the step."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n1\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 98,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.step"
											}
										},
										{
											"id": 1923,
											"name": "tabIndex",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optional tab index attribute for the thumb components."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 72,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Omit.tabIndex"
											}
										},
										{
											"id": 1924,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value of the slider.\nFor ranged sliders, provide an array with two values."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 77,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 1948,
												"name": "Value",
												"package": "@base-ui-components/react",
												"qualifiedName": "SliderRoot.Props.Value",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1943,
												1920,
												1921,
												1922,
												1942,
												1938,
												1939,
												1941,
												1936,
												1925,
												1931,
												1937,
												1947,
												1940,
												1923,
												1924
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
											"line": 53,
											"character": 14
										}
									],
									"typeParameters": [
										{
											"id": 1948,
											"name": "Value",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												]
											},
											"default": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												]
											}
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Pick"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
																"qualifiedName": "useSliderRoot.Parameters"
															},
															"name": "useSliderRoot.Parameters",
															"package": "@base-ui-components/react"
														},
														{
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "disabled"
																},
																{
																	"type": "literal",
																	"value": "max"
																},
																{
																	"type": "literal",
																	"value": "min"
																},
																{
																	"type": "literal",
																	"value": "minStepsBetweenValues"
																},
																{
																	"type": "literal",
																	"value": "name"
																},
																{
																	"type": "literal",
																	"value": "orientation"
																},
																{
																	"type": "literal",
																	"value": "largeStep"
																},
																{
																	"type": "literal",
																	"value": "step"
																}
															]
														}
													],
													"name": "Pick",
													"package": "typescript"
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "div"
														},
														{
															"type": "reference",
															"target": 1904,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "SliderRoot.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "defaultValue"
														},
														{
															"type": "literal",
															"value": "onChange"
														},
														{
															"type": "literal",
															"value": "values"
														}
													]
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 1904,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1905,
											"name": "activeThumbIndex",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The index of the active thumb."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1915,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 543,
												"name": "State.dirty"
											}
										},
										{
											"id": 1906,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 26,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"overwrites": {
												"type": "reference",
												"target": 541,
												"name": "State.disabled"
											}
										},
										{
											"id": 1907,
											"name": "dragging",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the thumb is currently being dragged."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1917,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 545,
												"name": "State.filled"
											}
										},
										{
											"id": 1918,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 546,
												"name": "State.focused"
											}
										},
										{
											"id": 1908,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1909,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 32,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1910,
											"name": "minStepsBetweenValues",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The minimum steps between values in a range slider."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1911,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The component orientation."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
													"qualifiedName": "useSliderRoot.Orientation"
												},
												"name": "Orientation",
												"package": "@base-ui-components/react",
												"qualifiedName": "useSliderRoot.Orientation"
											}
										},
										{
											"id": 1912,
											"name": "step",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The step increment of the slider when incrementing or decrementing. It will snap\nto multiples of this value. Decimal values are supported."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n1\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 47,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1914,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 542,
												"name": "State.touched"
											}
										},
										{
											"id": 1916,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 544,
												"name": "State.valid"
											}
										},
										{
											"id": 1913,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw number value of the slider."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 51,
													"character": 8
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1905,
												1915,
												1906,
												1907,
												1917,
												1918,
												1908,
												1909,
												1910,
												1911,
												1912,
												1914,
												1916,
												1913
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
											"line": 18,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 540,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "FieldRoot.State"
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"target": 1989,
											"name": "State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1919,
										1904
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
									"line": 17,
									"character": 25
								}
							]
						},
						{
							"id": 1988,
							"name": "Thumb",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The draggable part of the the slider at the tip of the indicator.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"children": [
								{
									"id": 2004,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2032,
											"name": "active",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The index of the active thumb."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 109,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.active"
											}
										},
										{
											"id": 2023,
											"name": "aria-label",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The label for the input element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.aria-label"
											}
										},
										{
											"id": 2024,
											"name": "aria-labelledby",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 110,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.aria-labelledby"
											}
										},
										{
											"id": 2025,
											"name": "aria-valuetext",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A string value that provides a user-friendly name for the current value of the slider."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.aria-valuetext"
											}
										},
										{
											"id": 2052,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2053,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2054,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2055,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1989,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SliderThumb.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 2019,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 42,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.disabled"
											}
										},
										{
											"id": 2040,
											"name": "format",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to format the input value."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nnull\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Intl.NumberFormatOptions"
														},
														"name": "NumberFormatOptions",
														"package": "typescript",
														"qualifiedName": "Intl.NumberFormatOptions"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.format"
											}
										},
										{
											"id": 2041,
											"name": "getAriaLabel",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Accepts a function which returns a string value that provides a user-friendly name for the input associated with the thumb"
													}
												],
												"blockTags": [
													{
														"tag": "@param",
														"name": "index",
														"content": [
															{
																"kind": "text",
																"text": "The index of the input"
															}
														]
													},
													{
														"tag": "@returns",
														"content": []
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2042,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
																	"line": 29,
																	"character": 24
																}
															],
															"signatures": [
																{
																	"id": 2043,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
																			"line": 29,
																			"character": 24
																		}
																	],
																	"parameters": [
																		{
																			"id": 2044,
																			"name": "index",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.getAriaLabel"
											}
										},
										{
											"id": 2045,
											"name": "getAriaValueText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.\nThis is important for screen reader users."
													}
												],
												"blockTags": [
													{
														"tag": "@param",
														"name": "formattedValue",
														"content": [
															{
																"kind": "text",
																"text": "The thumb's formatted value."
															}
														]
													},
													{
														"tag": "@param",
														"name": "value",
														"content": [
															{
																"kind": "text",
																"text": "The thumb's numerical value."
															}
														]
													},
													{
														"tag": "@param",
														"name": "index",
														"content": [
															{
																"kind": "text",
																"text": "The thumb's index."
															}
														]
													},
													{
														"tag": "@returns",
														"content": []
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2046,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
																	"line": 39,
																	"character": 27
																}
															],
															"signatures": [
																{
																	"id": 2047,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
																			"line": 39,
																			"character": 27
																		}
																	],
																	"parameters": [
																		{
																			"id": 2048,
																			"name": "formattedValue",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2049,
																			"name": "value",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2050,
																			"name": "index",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.getAriaValueText"
											}
										},
										{
											"id": 2033,
											"name": "handleInputChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 119,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2034,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
															"line": 119,
															"character": 27
														}
													],
													"signatures": [
														{
															"id": 2035,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
																	"line": 119,
																	"character": 27
																}
															],
															"parameters": [
																{
																	"id": 2036,
																	"name": "valueInput",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2037,
																	"name": "index",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2038,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																					"qualifiedName": "React.KeyboardEvent"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																							"qualifiedName": "Element"
																						},
																						"name": "Element",
																						"package": "typescript"
																					}
																				],
																				"name": "KeyboardEvent",
																				"package": "@types/react",
																				"qualifiedName": "React.KeyboardEvent"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																					"qualifiedName": "React.ChangeEvent"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																							"qualifiedName": "Element"
																						},
																						"name": "Element",
																						"package": "typescript"
																					}
																				],
																				"name": "ChangeEvent",
																				"package": "@types/react",
																				"qualifiedName": "React.ChangeEvent"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.handleInputChange"
											}
										},
										{
											"id": 2021,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.id"
											}
										},
										{
											"id": 2051,
											"name": "inputId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.inputId"
											}
										},
										{
											"id": 2031,
											"name": "largeStep",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The large step value of the slider when incrementing or decrementing while the shift key is held,\nor when using Page-Up or Page-Down keys. Snaps to multiples of this value."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n10\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 125,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.largeStep"
											}
										},
										{
											"id": 2027,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum allowed value of the slider."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 130,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.max"
											}
										},
										{
											"id": 2028,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The minimum allowed value of the slider."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 134,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.min"
											}
										},
										{
											"id": 2030,
											"name": "minStepsBetweenValues",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The minimum steps between values in a range slider."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 138,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.minStepsBetweenValues"
											}
										},
										{
											"id": 2018,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 139,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.name"
											}
										},
										{
											"id": 2007,
											"name": "onBlur",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.FocusEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													}
												],
												"name": "FocusEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.FocusEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Partial.onBlur"
											}
										},
										{
											"id": 2008,
											"name": "onFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.FocusEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													}
												],
												"name": "FocusEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.FocusEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Partial.onFocus"
											}
										},
										{
											"id": 2009,
											"name": "onKeyDown",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.KeyboardEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													}
												],
												"name": "KeyboardEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.KeyboardEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Partial.onKeyDown"
											}
										},
										{
											"id": 2005,
											"name": "onPointerLeave",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.PointerEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													}
												],
												"name": "PointerEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.PointerEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Omit.onPointerLeave"
											}
										},
										{
											"id": 2006,
											"name": "onPointerOver",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.PointerEventHandler"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													}
												],
												"name": "PointerEventHandler",
												"package": "@types/react",
												"qualifiedName": "React.PointerEventHandler"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Omit.onPointerOver"
											}
										},
										{
											"id": 2020,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The component orientation."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'horizontal'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 144,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
													"qualifiedName": "useSliderRoot.Orientation"
												},
												"name": "Orientation",
												"package": "@base-ui-components/react",
												"qualifiedName": "useSliderRoot.Orientation"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.orientation"
											}
										},
										{
											"id": 2039,
											"name": "percentageValues",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value(s) of the slider as percentages"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 148,
													"character": 8
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.percentageValues"
											}
										},
										{
											"id": 2010,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2011,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
																	"line": 27,
																	"character": 18
																}
															],
															"signatures": [
																{
																	"id": 2012,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
																			"line": 27,
																			"character": 18
																		}
																	],
																	"parameters": [
																		{
																			"id": 2013,
																			"name": "props",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																					"qualifiedName": "React.DetailedHTMLProps"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																							"qualifiedName": "React.HTMLAttributes"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																									"qualifiedName": "HTMLDivElement"
																								},
																								"name": "HTMLDivElement",
																								"package": "typescript"
																							}
																						],
																						"name": "HTMLAttributes",
																						"package": "@types/react",
																						"qualifiedName": "React.HTMLAttributes"
																					}
																				],
																				"name": "DetailedHTMLProps",
																				"package": "@types/react",
																				"qualifiedName": "React.DetailedHTMLProps"
																			}
																		},
																		{
																			"id": 2014,
																			"name": "inputProps",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																					"qualifiedName": "React.DetailedHTMLProps"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																							"qualifiedName": "React.InputHTMLAttributes"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																									"qualifiedName": "HTMLInputElement"
																								},
																								"name": "HTMLInputElement",
																								"package": "typescript"
																							}
																						],
																						"name": "InputHTMLAttributes",
																						"package": "@types/react",
																						"qualifiedName": "React.InputHTMLAttributes"
																					}
																				],
																				"name": "DetailedHTMLProps",
																				"package": "@types/react",
																				"qualifiedName": "React.DetailedHTMLProps"
																			}
																		},
																		{
																			"id": 2015,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1989,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SliderThumb.State"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.ReactElement"
																		},
																		"name": "ReactElement",
																		"package": "@types/react",
																		"qualifiedName": "React.ReactElement"
																	}
																}
															]
														}
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.ReactElement"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																					"qualifiedName": "React.JSXElementConstructor"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "JSXElementConstructor",
																				"package": "@types/react",
																				"qualifiedName": "React.JSXElementConstructor"
																			}
																		]
																	}
																],
																"name": "ReactElement",
																"package": "@types/react",
																"qualifiedName": "React.ReactElement"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2016,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 2017,
																			"name": "ref",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
																					"line": 28,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																					"qualifiedName": "React.Ref"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																							"qualifiedName": "Element"
																						},
																						"name": "Element",
																						"package": "typescript"
																					}
																				],
																				"name": "Ref",
																				"package": "@types/react",
																				"qualifiedName": "React.Ref"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2017
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
																			"line": 27,
																			"character": 173
																		}
																	]
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2029,
											"name": "step",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The step increment of the slider when incrementing or decrementing. It will snap\nto multiples of this value. Decimal values are supported."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n1\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 163,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.step"
											}
										},
										{
											"id": 2022,
											"name": "tabIndex",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optional tab index attribute for the thumb components."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nnull\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/thumb/useSliderThumb.d.ts",
													"line": 51,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.tabIndex"
											}
										},
										{
											"id": 2026,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value(s) of the slider"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/useSliderRoot.d.ts",
													"line": 169,
													"character": 8
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Partial.values"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2032,
												2023,
												2024,
												2025,
												2052,
												2019,
												2040,
												2041,
												2045,
												2033,
												2021,
												2051,
												2031,
												2027,
												2028,
												2030,
												2018,
												2007,
												2008,
												2009,
												2005,
												2006,
												2020,
												2039,
												2010,
												2029,
												2022,
												2026
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
											"line": 15,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Omit"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
																"qualifiedName": "useSliderThumb.Parameters"
															},
															"name": "useSliderThumb.Parameters",
															"package": "@base-ui-components/react"
														},
														{
															"type": "literal",
															"value": "rootRef"
														}
													],
													"name": "Omit",
													"package": "typescript"
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "div"
														},
														{
															"type": "reference",
															"target": 1989,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "SliderThumb.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "render"
														},
														{
															"type": "literal",
															"value": "tabIndex"
														}
													]
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 1989,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1990,
											"name": "activeThumbIndex",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The index of the active thumb."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1905,
												"name": "State.activeThumbIndex"
											}
										},
										{
											"id": 2000,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1915,
												"name": "State.dirty"
											}
										},
										{
											"id": 1991,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 26,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1906,
												"name": "State.disabled"
											}
										},
										{
											"id": 1992,
											"name": "dragging",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the thumb is currently being dragged."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1907,
												"name": "State.dragging"
											}
										},
										{
											"id": 2002,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1917,
												"name": "State.filled"
											}
										},
										{
											"id": 2003,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1918,
												"name": "State.focused"
											}
										},
										{
											"id": 1993,
											"name": "max",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1908,
												"name": "State.max"
											}
										},
										{
											"id": 1994,
											"name": "min",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 32,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1909,
												"name": "State.min"
											}
										},
										{
											"id": 1995,
											"name": "minStepsBetweenValues",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The minimum steps between values in a range slider."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1910,
												"name": "State.minStepsBetweenValues"
											}
										},
										{
											"id": 1996,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The component orientation."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
													"qualifiedName": "useSliderRoot.Orientation"
												},
												"name": "Orientation",
												"package": "@base-ui-components/react",
												"qualifiedName": "useSliderRoot.Orientation"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1911,
												"name": "State.orientation"
											}
										},
										{
											"id": 1997,
											"name": "step",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The step increment of the slider when incrementing or decrementing. It will snap\nto multiples of this value. Decimal values are supported."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n1\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 47,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1912,
												"name": "State.step"
											}
										},
										{
											"id": 1999,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1914,
												"name": "State.touched"
											}
										},
										{
											"id": 2001,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1916,
												"name": "State.valid"
											}
										},
										{
											"id": 1998,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The raw number value of the slider."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
													"line": 51,
													"character": 8
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 1913,
												"name": "State.values"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1990,
												2000,
												1991,
												1992,
												2002,
												2003,
												1993,
												1994,
												1995,
												1996,
												1997,
												1999,
												2001,
												1998
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 1904,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "SliderRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2004,
										1989
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 1978,
							"name": "Track",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Contains the slider indicator and represents the entire range of the slider.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"children": [
								{
									"id": 1979,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1980,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1981,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1982,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1983,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1904,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SliderRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 1984,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1904,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SliderRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1980,
												1984
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/track/SliderTrack.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 1904,
													"name": "SliderRoot.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1979
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/track/SliderTrack.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/track/SliderTrack.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1952,
							"name": "Value",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays the current value of the slider as text.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<output>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"children": [
								{
									"id": 1953,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1954,
											"name": "aria-live",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'off'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "off"
													},
													{
														"type": "literal",
														"value": "assertive"
													},
													{
														"type": "literal",
														"value": "polite"
													}
												]
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Omit.aria-live"
											}
										},
										{
											"id": 1955,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1956,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
																	"line": 17,
																	"character": 27
																}
															],
															"signatures": [
																{
																	"id": 1957,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
																			"line": 17,
																			"character": 27
																		}
																	],
																	"parameters": [
																		{
																			"id": 1958,
																			"name": "formattedValues",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "typeOperator",
																				"operator": "readonly",
																				"target": {
																					"type": "array",
																					"elementType": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			}
																		},
																		{
																			"id": 1959,
																			"name": "values",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "typeOperator",
																				"operator": "readonly",
																				"target": {
																					"type": "array",
																					"elementType": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.ReactNode"
																		},
																		"name": "ReactNode",
																		"package": "@types/react",
																		"qualifiedName": "React.ReactNode"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 1960,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1961,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 1962,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 1963,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 1904,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SliderRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 1964,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 1904,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SliderRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1954,
												1955,
												1960,
												1964
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "output"
														},
														{
															"type": "reference",
															"target": 1904,
															"name": "SliderRoot.State",
															"package": "@base-ui-components/react"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "children"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1953
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 1965,
							"name": "Control",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The clickable, interactive part of the slider.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/control/SliderControl.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/control/SliderControl.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1966,
									"name": "Control",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/control/SliderControl.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/slider/control/SliderControl.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1967,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1969,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SliderControl.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2056,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Visualizes the current value of the slider.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/indicator/SliderIndicator.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/indicator/SliderIndicator.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2057,
									"name": "Indicator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/indicator/SliderIndicator.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/slider/indicator/SliderIndicator.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2058,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2060,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SliderIndicator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLElement"
																},
																"name": "HTMLElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1897,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the slider.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
									"line": 17,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1898,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
											"line": 12,
											"character": 4
										}
									],
									"typeParameters": [
										{
											"id": 1899,
											"name": "Value",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1900,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1919,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1899,
																"name": "Value",
																"package": "@base-ui-components/react",
																"refersToTypeParameter": true
															}
														],
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SliderRoot.Props"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1901,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1902,
																	"name": "ref",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
																			"line": 13,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.RefObject"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "HTMLDivElement"
																				},
																				"name": "HTMLDivElement",
																				"package": "typescript"
																			}
																		],
																		"name": "RefObject",
																		"package": "@types/react",
																		"qualifiedName": "React.RefObject"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1902
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/build/esm/slider/root/SliderRoot.d.ts",
																	"line": 12,
																	"character": 80
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						},
						{
							"id": 1985,
							"name": "Thumb",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The draggable part of the the slider at the tip of the indicator.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1986,
									"name": "Thumb",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/slider/thumb/SliderThumb.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1987,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2004,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SliderThumb.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1975,
							"name": "Track",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Contains the slider indicator and represents the entire range of the slider.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/track/SliderTrack.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/track/SliderTrack.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1976,
									"name": "Track",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/track/SliderTrack.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/slider/track/SliderTrack.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1977,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1979,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SliderTrack.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLElement"
																},
																"name": "HTMLElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 1949,
							"name": "Value",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays the current value of the slider as text.\nRenders an "
									},
									{
										"kind": "code",
										"text": "`<output>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Slider](https://base-ui.com/react/components/slider)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1950,
									"name": "Value",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/slider/value/SliderValue.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1951,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 1953,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SliderValue.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLOutputElement"
																},
																"name": "HTMLOutputElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1968,
								2059,
								1903,
								1988,
								1978,
								1952
							]
						},
						{
							"title": "Functions",
							"children": [
								1965,
								2056,
								1897,
								1985,
								1975,
								1949
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/slider/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 2066,
					"name": "Switch",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 2070,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents the switch itself.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element and a hidden "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " beside.\n\nDocumentation: [Base UI Switch](https://base-ui.com/react/components/switch)"
									}
								]
							},
							"children": [
								{
									"id": 2071,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2073,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the switch is currently active.\n\nTo render an uncontrolled switch, use the "
													},
													{
														"kind": "code",
														"text": "`defaultChecked`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.checked"
											}
										},
										{
											"id": 2085,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2086,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2087,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2088,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2090,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SwitchRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 2074,
											"name": "defaultChecked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the switch is initially active.\n\nTo render a controlled switch, use the "
													},
													{
														"kind": "code",
														"text": "`checked`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.defaultChecked"
											}
										},
										{
											"id": 2075,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 26,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.disabled"
											}
										},
										{
											"id": 2072,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the switch element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 8,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.id"
											}
										},
										{
											"id": 2076,
											"name": "inputRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A React ref to access the hidden "
													},
													{
														"kind": "code",
														"text": "`<input>`"
													},
													{
														"kind": "text",
														"text": " element."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.Ref"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLInputElement"
														},
														"name": "HTMLInputElement",
														"package": "typescript"
													}
												],
												"name": "Ref",
												"package": "@types/react",
												"qualifiedName": "React.Ref"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.inputRef"
											}
										},
										{
											"id": 2077,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Identifies the field when a form is submitted."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.name"
											}
										},
										{
											"id": 2078,
											"name": "onCheckedChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the switch is activated or deactivated."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2079,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
															"line": 41,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 2080,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
																	"line": 41,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 2081,
																	"name": "checked",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The new checked state."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 2082,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The corresponding event that initiated the change."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.onCheckedChange"
											}
										},
										{
											"id": 2083,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to activate or deactivate the switch."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 46,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.readOnly"
											}
										},
										{
											"id": 2089,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2090,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SwitchRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										},
										{
											"id": 2084,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must activate the switch before submitting a form."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/useSwitchRoot.d.ts",
													"line": 51,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useSwitchRoot.Parameters.required"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2073,
												2085,
												2074,
												2075,
												2072,
												2076,
												2077,
												2078,
												2083,
												2089,
												2084
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
												"qualifiedName": "useSwitchRoot.Parameters"
											},
											"name": "Parameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useSwitchRoot.Parameters"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "button"
														},
														{
															"type": "reference",
															"target": 2090,
															"name": "SwitchRoot.State",
															"package": "@base-ui-components/react"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "onChange"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 2090,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2091,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the switch is currently active."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2096,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 543,
												"name": "State.dirty"
											}
										},
										{
											"id": 2092,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"overwrites": {
												"type": "reference",
												"target": 541,
												"name": "State.disabled"
											}
										},
										{
											"id": 2098,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 545,
												"name": "State.filled"
											}
										},
										{
											"id": 2099,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 546,
												"name": "State.focused"
											}
										},
										{
											"id": 2093,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to activate or deactivate the switch."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2094,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must activate the switch before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2095,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 542,
												"name": "State.touched"
											}
										},
										{
											"id": 2097,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 544,
												"name": "State.valid"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2091,
												2096,
												2092,
												2098,
												2099,
												2093,
												2094,
												2095,
												2097
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
											"line": 15,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 540,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "FieldRoot.State"
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"target": 2110,
											"name": "State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2071,
										2090
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 2103,
							"name": "Thumb",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The movable part of the switch that indicates whether the switch is on or off.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": ".\n\nDocumentation: [Base UI Switch](https://base-ui.com/react/components/switch)"
									}
								]
							},
							"children": [
								{
									"id": 2104,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2105,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2106,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2107,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2108,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2110,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "SwitchThumb.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2109,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2110,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "SwitchThumb.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2105,
												2109
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/switch/thumb/SwitchThumb.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 2110,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "SwitchThumb.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 2110,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2111,
											"name": "checked",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the switch is currently active."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2091,
												"name": "State.checked"
											}
										},
										{
											"id": 2116,
											"name": "dirty",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 36,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2096,
												"name": "State.dirty"
											}
										},
										{
											"id": 2112,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2092,
												"name": "State.disabled"
											}
										},
										{
											"id": 2118,
											"name": "filled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2098,
												"name": "State.filled"
											}
										},
										{
											"id": 2119,
											"name": "focused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2099,
												"name": "State.focused"
											}
										},
										{
											"id": 2113,
											"name": "readOnly",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user should be unable to activate or deactivate the switch."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2093,
												"name": "State.readOnly"
											}
										},
										{
											"id": 2114,
											"name": "required",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the user must activate the switch before submitting a form."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2094,
												"name": "State.required"
											}
										},
										{
											"id": 2115,
											"name": "touched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2095,
												"name": "State.touched"
											}
										},
										{
											"id": 2117,
											"name": "valid",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/field/root/FieldRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": 2097,
												"name": "State.valid"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2111,
												2116,
												2112,
												2118,
												2119,
												2113,
												2114,
												2115,
												2117
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/switch/thumb/SwitchThumb.d.ts",
											"line": 14,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 2090,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "SwitchRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2104,
										2110
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/switch/thumb/SwitchThumb.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/switch/thumb/SwitchThumb.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 2067,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents the switch itself.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element and a hidden "
									},
									{
										"kind": "code",
										"text": "`<input>`"
									},
									{
										"kind": "text",
										"text": " beside.\n\nDocumentation: [Base UI Switch](https://base-ui.com/react/components/switch)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2068,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/switch/root/SwitchRoot.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2069,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2071,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SwitchRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2100,
							"name": "Thumb",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The movable part of the switch that indicates whether the switch is on or off.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": ".\n\nDocumentation: [Base UI Switch](https://base-ui.com/react/components/switch)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/switch/thumb/SwitchThumb.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/switch/thumb/SwitchThumb.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2101,
									"name": "Thumb",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/switch/thumb/SwitchThumb.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/switch/thumb/SwitchThumb.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2102,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2104,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "SwitchThumb.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								2070,
								2103
							]
						},
						{
							"title": "Functions",
							"children": [
								2067,
								2100
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/switch/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 2120,
					"name": "Tabs",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 2161,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A visual indicator that can be styled to match the position of the currently active tab.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"children": [
								{
									"id": 2167,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2169,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2170,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2171,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2172,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2162,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TabsIndicator.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2173,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2162,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TabsIndicator.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 2168,
											"name": "renderBeforeHydration",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to render itself before React hydrates.\nThis minimizes the time that the indicator isn’t visible after server-side rendering."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2169,
												2173,
												2168
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
											"line": 18,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "span"
												},
												{
													"type": "reference",
													"target": 2162,
													"name": "TabsIndicator.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 2162,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2165,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
													"qualifiedName": "TabsOrientation"
												},
												"name": "TabsOrientation",
												"package": "@base-ui-components/react"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "TabsRoot.State.orientation"
											}
										},
										{
											"id": 2163,
											"name": "selectedTabPosition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/tabs/indicator/useTabsIndicator.d.ts",
															"qualifiedName": "ActiveTabPosition"
														},
														"name": "ActiveTabPosition",
														"package": "@base-ui-components/react"
													}
												]
											}
										},
										{
											"id": 2164,
											"name": "selectedTabSize",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/tabs/indicator/useTabsIndicator.d.ts",
															"qualifiedName": "ActiveTabSize"
														},
														"name": "ActiveTabSize",
														"package": "@base-ui-components/react"
													}
												]
											}
										},
										{
											"id": 2166,
											"name": "tabActivationDirection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
													"qualifiedName": "TabActivationDirection"
												},
												"name": "TabActivationDirection",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "TabsRoot.State.tabActivationDirection"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2165,
												2163,
												2164,
												2166
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 2125,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "TabsRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2167,
										2162
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 2193,
							"name": "List",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the individual tab buttons.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"children": [
								{
									"id": 2195,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2196,
											"name": "activateOnFocus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to automatically change the active tab on arrow key focus.\nOtherwise, tabs will be activated using Enter or Spacebar key press."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2198,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2199,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2200,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2201,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2125,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TabsRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2197,
											"name": "loop",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to loop keyboard focus back to the first item\nwhen the end of the list is reached while using the arrow keys."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2202,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2125,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TabsRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2196,
												2198,
												2197,
												2202
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 2194,
													"name": "TabsList.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 2194,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
											"line": 12,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": 2125,
										"name": "TabsRoot.State",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2195
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										2194
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 2177,
							"name": "Panel",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A panel displayed when the corresponding tab is active.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"children": [
								{
									"id": 2182,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2185,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2186,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2187,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2188,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2178,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TabsPanel.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2184,
											"name": "keepMounted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to keep the HTML element in the DOM while the panel is hidden."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
													"line": 26,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2189,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2178,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TabsPanel.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 2183,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\nIf not provided, it will fall back to the index of the panel.\nIt is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2185,
												2184,
												2189,
												2183
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
											"line": 15,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 2178,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "TabsPanel.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 2178,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2179,
											"name": "hidden",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
													"line": 13,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2180,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
													"qualifiedName": "TabsOrientation"
												},
												"name": "TabsOrientation",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "TabsRoot.State.orientation"
											}
										},
										{
											"id": 2181,
											"name": "tabActivationDirection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isInherited": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
													"qualifiedName": "TabActivationDirection"
												},
												"name": "TabActivationDirection",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "TabsRoot.State.tabActivationDirection"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2179,
												2180,
												2181
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": 2125,
											"name": "State",
											"package": "@base-ui-components/react",
											"qualifiedName": "TabsRoot.State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2182,
										2178
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 2124,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the tabs and the corresponding panels.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"children": [
								{
									"id": 2129,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2138,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2139,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2140,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2141,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2125,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TabsRoot.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.className"
											}
										},
										{
											"id": 2131,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The default value. Use when the component is not controlled.\nWhen the value is "
													},
													{
														"kind": "code",
														"text": "`null`"
													},
													{
														"kind": "text",
														"text": ", no Tab will be selected."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
													"line": 29,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2133,
											"name": "onValueChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback invoked when new value is being set."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2134,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
															"line": 38,
															"character": 24
														}
													],
													"signatures": [
														{
															"id": 2135,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
																	"line": 38,
																	"character": 24
																}
															],
															"parameters": [
																{
																	"id": 2136,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 2137,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 2132,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The component orientation (layout flow direction)."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'horizontal'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
													"qualifiedName": "TabsOrientation"
												},
												"name": "TabsOrientation",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 2142,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2125,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TabsRoot.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "Omit.render"
											}
										},
										{
											"id": 2130,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value of the currently selected "
													},
													{
														"kind": "code",
														"text": "`Tab`"
													},
													{
														"kind": "text",
														"text": ". Use when the component is controlled.\nWhen the value is "
													},
													{
														"kind": "code",
														"text": "`null`"
													},
													{
														"kind": "text",
														"text": ", no Tab will be selected."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2138,
												2131,
												2133,
												2132,
												2142,
												2130
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
											"line": 18,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/utils/types.d.ts",
														"qualifiedName": "BaseUIComponentProps"
													},
													"typeArguments": [
														{
															"type": "literal",
															"value": "div"
														},
														{
															"type": "reference",
															"target": 2125,
															"name": "State",
															"package": "@base-ui-components/react",
															"qualifiedName": "TabsRoot.State"
														}
													],
													"name": "BaseUIComponentProps",
													"package": "@base-ui-components/react"
												},
												{
													"type": "literal",
													"value": "defaultValue"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								},
								{
									"id": 2125,
									"name": "State",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
											"line": 14,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2126,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2127,
													"name": "orientation",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
															"line": 15,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
															"qualifiedName": "TabsOrientation"
														},
														"name": "TabsOrientation",
														"package": "@base-ui-components/react"
													}
												},
												{
													"id": 2128,
													"name": "tabActivationDirection",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
															"line": 16,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
															"qualifiedName": "TabActivationDirection"
														},
														"name": "TabActivationDirection",
														"package": "@base-ui-components/react"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2127,
														2128
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
													"line": 14,
													"character": 17
												}
											]
										}
									},
									"extendedBy": [
										{
											"type": "reference",
											"target": 2162,
											"name": "State"
										},
										{
											"type": "reference",
											"target": 2178,
											"name": "State"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2129
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										2125
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
									"line": 13,
									"character": 25
								}
							]
						},
						{
							"id": 2146,
							"name": "Tab",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An individual interactive tab button that toggles the corresponding panel.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"children": [
								{
									"id": 2147,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2149,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2150,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2151,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2152,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2154,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TabsTab.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2153,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2154,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TabsTab.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 2148,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value of the Tab.\nWhen not specified, the value is the child position index."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.value"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2149,
												2153,
												2148
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
											"line": 12,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 2154,
													"name": "TabsTab.State",
													"package": "@base-ui-components/react"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 2154,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2155,
											"name": "disabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the component should ignore user interaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2157,
											"name": "orientation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
													"qualifiedName": "TabsOrientation"
												},
												"name": "TabsOrientation",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 2156,
											"name": "selected",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2155,
												2157,
												2156
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
											"line": 19,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2147,
										2154
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 2158,
							"name": "Indicator",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A visual indicator that can be styled to match the position of the currently active tab.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<span>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2159,
									"name": "Indicator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tabs/indicator/TabsIndicator.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2160,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2167,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TabsIndicator.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2190,
							"name": "List",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the individual tab buttons.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2191,
									"name": "List",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tabs/list/TabsList.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2192,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2195,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TabsList.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2174,
							"name": "Panel",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A panel displayed when the corresponding tab is active.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2175,
									"name": "Panel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tabs/panel/TabsPanel.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2176,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2182,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TabsPanel.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2121,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the tabs and the corresponding panels.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
									"line": 13,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2122,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tabs/root/TabsRoot.d.ts",
											"line": 13,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2123,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2129,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TabsRoot.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2143,
							"name": "Tab",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An individual interactive tab button that toggles the corresponding panel.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tabs](https://base-ui.com/react/components/tabs)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2144,
									"name": "Tab",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tabs/tab/TabsTab.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2145,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2147,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TabsTab.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Element"
																},
																"name": "Element",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								2161,
								2193,
								2177,
								2124,
								2146
							]
						},
						{
							"title": "Functions",
							"children": [
								2158,
								2190,
								2174,
								2121,
								2143
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/tabs/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 2206,
					"name": "Toggle",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A two-state button that can be on or off.\nRenders a "
							},
							{
								"kind": "code",
								"text": "`<button>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nDocumentation: [Base UI Toggle](https://base-ui.com/react/components/toggle)"
							}
						]
					},
					"children": [
						{
							"id": 2210,
							"name": "Props",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2211,
									"name": "aria-label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The label for the Toggle."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
											"line": 23,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Omit.aria-label"
									}
								},
								{
									"id": 2212,
									"name": "aria-labelledby",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An id or space-separated list of ids of elements that label the Toggle."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
											"line": 27,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Omit.aria-labelledby"
									}
								},
								{
									"id": 2222,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2223,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/utils/types.d.ts",
															"line": 32,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 2224,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 2225,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2207,
																		"name": "State",
																		"package": "@base-ui-components/react",
																		"qualifiedName": "Toggle.State"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Omit.className"
									}
								},
								{
									"id": 2216,
									"name": "defaultPressed",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The default pressed state. Use when the component is not controlled."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/useToggle.d.ts",
											"line": 15,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.defaultPressed"
									}
								},
								{
									"id": 2214,
									"name": "disabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the component should ignore user interaction."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/useToggle.d.ts",
											"line": 20,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.disabled"
									}
								},
								{
									"id": 2217,
									"name": "onPressedChange",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback fired when the pressed state is changed."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/useToggle.d.ts",
											"line": 27,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2218,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/toggle/useToggle.d.ts",
													"line": 27,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 2219,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/toggle/useToggle.d.ts",
															"line": 27,
															"character": 25
														}
													],
													"parameters": [
														{
															"id": 2220,
															"name": "pressed",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The new pressed state."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 2221,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The corresponding event that initiated the change."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.onPressedChange"
									}
								},
								{
									"id": 2215,
									"name": "pressed",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the toggle button is currently active."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/useToggle.d.ts",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.pressed"
									}
								},
								{
									"id": 2226,
									"name": "render",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
											},
											{
												"kind": "code",
												"text": "`ReactElement`"
											},
											{
												"kind": "text",
												"text": " or a function that returns the element to render."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 39,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactElement"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.JSXElementConstructor"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "JSXElementConstructor",
																"package": "@types/react",
																"qualifiedName": "React.JSXElementConstructor"
															}
														]
													}
												],
												"name": "ReactElement",
												"package": "@types/react",
												"qualifiedName": "React.ReactElement"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/types.d.ts",
													"qualifiedName": "ComponentRenderFn"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "GenericHTMLProps"
														},
														"name": "GenericHTMLProps",
														"package": "@base-ui-components/react"
													},
													{
														"type": "reference",
														"target": 2207,
														"name": "State",
														"package": "@base-ui-components/react",
														"qualifiedName": "Toggle.State"
													}
												],
												"name": "ComponentRenderFn",
												"package": "@base-ui-components/react"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Omit.render"
									}
								},
								{
									"id": 2213,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A unique string that identifies the component when used\ninside a ToggleGroup."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/useToggle.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.value"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2211,
										2212,
										2222,
										2216,
										2214,
										2217,
										2215,
										2226,
										2213
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Partial"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Pick"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "build/esm/toggle/useToggle.d.ts",
														"qualifiedName": "useToggle.Parameters"
													},
													"name": "useToggle.Parameters",
													"package": "@base-ui-components/react"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "pressed"
														},
														{
															"type": "literal",
															"value": "defaultPressed"
														},
														{
															"type": "literal",
															"value": "disabled"
														},
														{
															"type": "literal",
															"value": "onPressedChange"
														},
														{
															"type": "literal",
															"value": "value"
														}
													]
												}
											],
											"name": "Pick",
											"package": "typescript"
										}
									],
									"name": "Partial",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "button"
												},
												{
													"type": "reference",
													"target": 2207,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "Toggle.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										},
										{
											"type": "literal",
											"value": "value"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							]
						},
						{
							"id": 2207,
							"name": "State",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2209,
									"name": "disabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the component should ignore user interaction."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
											"line": 17,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2208,
									"name": "pressed",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
											"line": 13,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2209,
										2208
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
									"line": 12,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								2210,
								2207
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
							"line": 10,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
							"line": 11,
							"character": 25
						}
					]
				},
				{
					"id": 2230,
					"name": "ToggleGroup",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides a shared state to a series of toggle buttons.\n\nDocumentation: [Base UI Toggle Group](https://base-ui.com/react/components/toggle-group)"
							}
						]
					},
					"children": [
						{
							"id": 2234,
							"name": "Props",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2246,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2247,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/utils/types.d.ts",
															"line": 32,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 2248,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 2249,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2231,
																		"name": "State",
																		"package": "@base-ui-components/react",
																		"qualifiedName": "ToggleGroup.State"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Omit.className"
									}
								},
								{
									"id": 2239,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The open state of the ToggleGroup represented by an array of\nthe values of all pressed "
											},
											{
												"kind": "code",
												"text": "`<ToggleGroup.Item/>`"
											},
											{
												"kind": "text",
												"text": "s.\nThis is the uncontrolled counterpart of "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/useToggleGroup.d.ts",
											"line": 17,
											"character": 8
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.defaultValue"
									}
								},
								{
									"id": 2235,
									"name": "disabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the component should ignore user interaction."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
											"line": 24,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Partial.disabled"
									}
								},
								{
									"id": 2237,
									"name": "loop",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether to loop keyboard focus back to the first item\nwhen the end of the list is reached while using the arrow keys."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\ntrue\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
											"line": 34,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2240,
									"name": "onValueChange",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback fired when the pressed states of the ToggleGroup changes."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/useToggleGroup.d.ts",
											"line": 24,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2241,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/toggle-group/useToggleGroup.d.ts",
													"line": 24,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 2242,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/toggle-group/useToggleGroup.d.ts",
															"line": 24,
															"character": 23
														}
													],
													"parameters": [
														{
															"id": 2243,
															"name": "groupValue",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "An array of the "
																	},
																	{
																		"kind": "code",
																		"text": "`value`"
																	},
																	{
																		"kind": "text",
																		"text": "s of all the pressed items."
																	}
																]
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														},
														{
															"id": 2244,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The corresponding event that initiated the change."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.onValueChange"
									}
								},
								{
									"id": 2236,
									"name": "orientation",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n'horizontal'\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
											"line": 28,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
											"qualifiedName": "ToggleGroupOrientation"
										},
										"name": "ToggleGroupOrientation",
										"package": "@base-ui-components/react"
									}
								},
								{
									"id": 2250,
									"name": "render",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
											},
											{
												"kind": "code",
												"text": "`ReactElement`"
											},
											{
												"kind": "text",
												"text": " or a function that returns the element to render."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/utils/types.d.ts",
											"line": 39,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactElement"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.JSXElementConstructor"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "JSXElementConstructor",
																"package": "@types/react",
																"qualifiedName": "React.JSXElementConstructor"
															}
														]
													}
												],
												"name": "ReactElement",
												"package": "@types/react",
												"qualifiedName": "React.ReactElement"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/types.d.ts",
													"qualifiedName": "ComponentRenderFn"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "GenericHTMLProps"
														},
														"name": "GenericHTMLProps",
														"package": "@base-ui-components/react"
													},
													{
														"type": "reference",
														"target": 2231,
														"name": "State",
														"package": "@base-ui-components/react",
														"qualifiedName": "ToggleGroup.State"
													}
												],
												"name": "ComponentRenderFn",
												"package": "@base-ui-components/react"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Omit.render"
									}
								},
								{
									"id": 2245,
									"name": "toggleMultiple",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " only one item in the group can be pressed. If any item in\nthe group becomes pressed, the others will become unpressed.\nWhen "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " multiple items can be pressed."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/useToggleGroup.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.toggleMultiple"
									}
								},
								{
									"id": 2238,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The open state of the ToggleGroup represented by an array of\nthe values of all pressed "
											},
											{
												"kind": "code",
												"text": "`<ToggleGroup.Item/>`"
											},
											{
												"kind": "text",
												"text": "s\nThis is the controlled counterpart of "
											},
											{
												"kind": "code",
												"text": "`defaultValue`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/useToggleGroup.d.ts",
											"line": 11,
											"character": 8
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Partial.value"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2246,
										2239,
										2235,
										2237,
										2240,
										2236,
										2250,
										2245,
										2238
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Partial"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
												"qualifiedName": "useToggleGroup.Parameters"
											},
											"name": "useToggleGroup.Parameters",
											"package": "@base-ui-components/react"
										}
									],
									"name": "Partial",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 2231,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "ToggleGroup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										},
										{
											"type": "literal",
											"value": "defaultValue"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							]
						},
						{
							"id": 2231,
							"name": "State",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2232,
									"name": "disabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the component should ignore user interaction."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
											"line": 16,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2233,
									"name": "multiple",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
											"line": 17,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2232,
										2233
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
									"line": 12,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								2234,
								2231
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
							"line": 9,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
							"line": 11,
							"character": 25
						}
					]
				},
				{
					"id": 2251,
					"name": "Tooltip",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 2342,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the tooltip anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"children": [
								{
									"id": 2348,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2349,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2350,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2351,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2352,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2343,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TooltipArrow.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2353,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2343,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TooltipArrow.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2349,
												2353
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
											"line": 21,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 2343,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "TooltipArrow.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 2343,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2346,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 2344,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the tooltip is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2345,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 2347,
											"name": "uncentered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2346,
												2344,
												2345,
												2347
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
											"line": 12,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2348,
										2343
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
									"line": 11,
									"character": 25
								}
							]
						},
						{
							"id": 2326,
							"name": "Popup",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the tooltip contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"children": [
								{
									"id": 2333,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2334,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2335,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2336,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2337,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2327,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TooltipPopup.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2338,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2327,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TooltipPopup.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2334,
												2338
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
											"line": 23,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 2327,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "TooltipPopup.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 2327,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2330,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 2331,
											"name": "instant",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": "focus"
													},
													{
														"type": "literal",
														"value": "delay"
													},
													{
														"type": "literal",
														"value": "dismiss"
													}
												]
											}
										},
										{
											"id": 2328,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the tooltip is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2329,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 2332,
											"name": "transitionStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 2451,
												"name": "TransitionStatus",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2330,
												2331,
												2328,
												2329,
												2332
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2333,
										2327
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 2296,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the tooltip against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"children": [
								{
									"id": 2302,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2316,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How to align the popup relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'center'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 63,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "center"
													},
													{
														"type": "literal",
														"value": "start"
													},
													{
														"type": "literal",
														"value": "end"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.align"
											}
										},
										{
											"id": 2317,
											"name": "alignOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional offset along the alignment axis in pixels.\nAlso accepts a function that returns the offset to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 75,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.alignOffset"
											}
										},
										{
											"id": 2310,
											"name": "anchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element to position the popup against.\nBy default, the popup will be positioned against the trigger."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 31,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Element"
														},
														"name": "Element",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
															"qualifiedName": "VirtualElement"
														},
														"name": "VirtualElement",
														"package": "@floating-ui/dom"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefObject"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Element"
																		},
																		"name": "Element",
																		"package": "typescript"
																	}
																]
															}
														],
														"name": "RefObject",
														"package": "@types/react",
														"qualifiedName": "React.RefObject"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2311,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																	"line": 31,
																	"character": 86
																}
															],
															"signatures": [
																{
																	"id": 2312,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
																			"line": 31,
																			"character": 86
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Element"
																				},
																				"name": "Element",
																				"package": "typescript"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.d.mts",
																					"qualifiedName": "VirtualElement"
																				},
																				"name": "VirtualElement",
																				"package": "@floating-ui/dom"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.anchor"
											}
										},
										{
											"id": 2321,
											"name": "arrowPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Minimum distance to maintain between the arrow and the edges of the popup.\n\nUse it to prevent the arrow element from hanging out of the rounded corners of a popup."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 98,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.arrowPadding"
											}
										},
										{
											"id": 2303,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2304,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2305,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2306,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2297,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TooltipPositioner.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2318,
											"name": "collisionBoundary",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An element or a rectangle that delimits the area that the popup is confined to."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'clipping-ancestors'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 80,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Boundary"
												},
												"name": "Boundary",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.collisionBoundary"
											}
										},
										{
											"id": 2319,
											"name": "collisionPadding",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional space to maintain from the edge of the collision boundary."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n5\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 85,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.d.mts",
													"qualifiedName": "Padding"
												},
												"name": "Padding",
												"package": "@floating-ui/utils"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.collisionPadding"
											}
										},
										{
											"id": 2313,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 35,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.open"
											}
										},
										{
											"id": 2314,
											"name": "positionMethod",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines which CSS "
													},
													{
														"kind": "code",
														"text": "`position`"
													},
													{
														"kind": "text",
														"text": " property to use."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'absolute'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "fixed"
													},
													{
														"type": "literal",
														"value": "absolute"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.positionMethod"
											}
										},
										{
											"id": 2307,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2297,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TooltipPositioner.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										},
										{
											"id": 2309,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Which side of the anchor element to align the popup against.\nMay automatically change to avoid collisions."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'top'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/positioner/useTooltipPositioner.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.side"
											}
										},
										{
											"id": 2315,
											"name": "sideOffset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Distance between the anchor and the popup in pixels.\nAlso accepts a function that returns the distance to read the dimensions of the anchor\nand positioner elements, along with its side and alignment.\n\n- "
													},
													{
														"kind": "code",
														"text": "`data.anchor`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the anchor element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.positioner`"
													},
													{
														"kind": "text",
														"text": ": the dimensions of the positioner element with properties "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ".\n- "
													},
													{
														"kind": "code",
														"text": "`data.side`"
													},
													{
														"kind": "text",
														"text": ": which side of the anchor element the positioner is aligned against.\n- "
													},
													{
														"kind": "code",
														"text": "`data.align`"
													},
													{
														"kind": "text",
														"text": ": how the positioner is aligned relative to the specified side."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 58,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
															"qualifiedName": "OffsetFunction"
														},
														"name": "OffsetFunction",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.sideOffset"
											}
										},
										{
											"id": 2320,
											"name": "sticky",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether to maintain the popup in the viewport after\nthe anchor element was scrolled out of view."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 91,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.sticky"
											}
										},
										{
											"id": 2322,
											"name": "trackAnchor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the popup tracks any layout shift of its positioning anchor."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useAnchorPositioning.d.ts",
													"line": 103,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.trackAnchor"
											}
										},
										{
											"id": 2308,
											"name": "trackCursorAxis",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines which axis the tooltip should track the cursor on."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'none'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/positioner/useTooltipPositioner.d.ts",
													"line": 12,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "x"
													},
													{
														"type": "literal",
														"value": "y"
													},
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "both"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipPositioner.SharedParameters.trackCursorAxis"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2316,
												2317,
												2310,
												2321,
												2303,
												2318,
												2319,
												2313,
												2314,
												2307,
												2309,
												2315,
												2320,
												2322,
												2308
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
											"line": 22,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 2297,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "TooltipPositioner.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/tooltip/positioner/useTooltipPositioner.d.ts",
												"qualifiedName": "useTooltipPositioner.SharedParameters"
											},
											"name": "SharedParameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useTooltipPositioner.SharedParameters"
										}
									]
								},
								{
									"id": 2297,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2300,
											"name": "align",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Align"
												},
												"name": "Align",
												"package": "@base-ui-components/react"
											}
										},
										{
											"id": 2301,
											"name": "anchorHidden",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
													"line": 20,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2298,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the tooltip is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
													"line": 17,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2299,
											"name": "side",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
													"qualifiedName": "Side"
												},
												"name": "Side",
												"package": "@base-ui-components/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2300,
												2301,
												2298,
												2299
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2302,
										2297
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							]
						},
						{
							"id": 2357,
							"name": "Provider",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Provides a shared delay for multiple tooltips. The grouping logic ensures that\nonce a tooltip becomes visible, the adjacent tooltips will be shown instantly.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"children": [
								{
									"id": 2358,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2359,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
													"line": 11,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										},
										{
											"id": 2361,
											"name": "closeDelay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before closing a tooltip. Specified in milliseconds."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2360,
											"name": "delay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before opening a tooltip. Specified in milliseconds."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2362,
											"name": "timeout",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Another tooltip will open instantly if the previous tooltip\nis closed within this timeout. Specified in milliseconds."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n400\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2359,
												2361,
												2360,
												2362
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
											"line": 10,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2358
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
									"line": 8,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
									"line": 9,
									"character": 25
								}
							]
						},
						{
							"id": 2255,
							"name": "Root",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the tooltip.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"children": [
								{
									"id": 2257,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2275,
											"name": "actionsRef",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A ref to imperative actions."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 51,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefObject"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
															"qualifiedName": "useTooltipRoot.Actions"
														},
														"name": "Actions",
														"package": "@base-ui-components/react",
														"qualifiedName": "useTooltipRoot.Actions"
													}
												],
												"name": "RefObject",
												"package": "@types/react",
												"qualifiedName": "React.RefObject"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.actionsRef"
											}
										},
										{
											"id": 2258,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										},
										{
											"id": 2274,
											"name": "closeDelay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before closing the tooltip. Specified in milliseconds."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n0\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 47,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.closeDelay"
											}
										},
										{
											"id": 2259,
											"name": "defaultOpen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the tooltip is initially open.\n\nTo render a controlled tooltip, use the "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " prop instead."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.defaultOpen"
											}
										},
										{
											"id": 2273,
											"name": "delay",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How long to wait before opening the tooltip. Specified in milliseconds."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n600\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 42,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.delay"
											}
										},
										{
											"id": 2271,
											"name": "hoverable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the tooltip contents can be hovered without closing the tooltip."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 32,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.hoverable"
											}
										},
										{
											"id": 2261,
											"name": "onOpenChange",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called when the tooltip is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 23,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2262,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
															"line": 23,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 2263,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
																	"line": 23,
																	"character": 23
																}
															],
															"parameters": [
																{
																	"id": 2264,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 2265,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "Event"
																		},
																		"name": "Event",
																		"package": "typescript"
																	}
																},
																{
																	"id": 2266,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "build/esm/utils/translateOpenChangeReason.d.ts",
																			"qualifiedName": "OpenChangeReason"
																		},
																		"name": "OpenChangeReason",
																		"package": "@base-ui-components/react"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.onOpenChange"
											}
										},
										{
											"id": 2267,
											"name": "onOpenChangeComplete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Event handler called after any animations complete when the tooltip is opened or closed."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2268,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
															"line": 27,
															"character": 31
														}
													],
													"signatures": [
														{
															"id": 2269,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
																	"line": 27,
																	"character": 31
																}
															],
															"parameters": [
																{
																	"id": 2270,
																	"name": "open",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.onOpenChangeComplete"
											}
										},
										{
											"id": 2260,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the tooltip is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 19,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.open"
											}
										},
										{
											"id": 2272,
											"name": "trackCursorAxis",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Determines which axis the tooltip should track the cursor on."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'none'\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/root/useTooltipRoot.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "x"
													},
													{
														"type": "literal",
														"value": "y"
													},
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "both"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "useTooltipRoot.Parameters.trackCursorAxis"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2275,
												2258,
												2274,
												2259,
												2273,
												2271,
												2261,
												2267,
												2260,
												2272
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
											"line": 13,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
												"qualifiedName": "useTooltipRoot.Parameters"
											},
											"name": "Parameters",
											"package": "@base-ui-components/react",
											"qualifiedName": "useTooltipRoot.Parameters"
										}
									]
								},
								{
									"id": 2256,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
											"line": 11,
											"character": 14
										}
									]
								},
								{
									"id": 2276,
									"name": "Actions",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
											"line": 16,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
											"qualifiedName": "useTooltipRoot.Actions"
										},
										"name": "useTooltipRoot.Actions",
										"package": "@base-ui-components/react"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2257,
										2256
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										2276
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 2280,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An element to attach the tooltip to.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"children": [
								{
									"id": 2283,
									"name": "Props",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2284,
											"name": "className",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2285,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/build/esm/utils/types.d.ts",
																	"line": 32,
																	"character": 26
																}
															],
															"signatures": [
																{
																	"id": 2286,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/utils/types.d.ts",
																			"line": 32,
																			"character": 26
																		}
																	],
																	"parameters": [
																		{
																			"id": 2287,
																			"name": "state",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 2281,
																				"name": "State",
																				"package": "@base-ui-components/react",
																				"qualifiedName": "TooltipTrigger.State"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.className"
											}
										},
										{
											"id": 2288,
											"name": "render",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isInherited": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a "
													},
													{
														"kind": "code",
														"text": "`ReactElement`"
													},
													{
														"kind": "text",
														"text": " or a function that returns the element to render."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/types.d.ts",
													"line": 39,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactElement"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"qualifiedName": "React.JSXElementConstructor"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "JSXElementConstructor",
																		"package": "@types/react",
																		"qualifiedName": "React.JSXElementConstructor"
																	}
																]
															}
														],
														"name": "ReactElement",
														"package": "@types/react",
														"qualifiedName": "React.ReactElement"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "build/esm/utils/types.d.ts",
															"qualifiedName": "ComponentRenderFn"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "build/esm/utils/types.d.ts",
																	"qualifiedName": "GenericHTMLProps"
																},
																"name": "GenericHTMLProps",
																"package": "@base-ui-components/react"
															},
															{
																"type": "reference",
																"target": 2281,
																"name": "State",
																"package": "@base-ui-components/react",
																"qualifiedName": "TooltipTrigger.State"
															}
														],
														"name": "ComponentRenderFn",
														"package": "@base-ui-components/react"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"target": -1,
												"name": "BaseUIComponentProps.render"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2284,
												2288
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
											"line": 17,
											"character": 14
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "build/esm/utils/types.d.ts",
												"qualifiedName": "BaseUIComponentProps"
											},
											"typeArguments": [
												{
													"type": "literal",
													"value": "div"
												},
												{
													"type": "reference",
													"target": 2281,
													"name": "State",
													"package": "@base-ui-components/react",
													"qualifiedName": "TooltipTrigger.State"
												}
											],
											"name": "BaseUIComponentProps",
											"package": "@base-ui-components/react"
										}
									]
								},
								{
									"id": 2281,
									"name": "State",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 2282,
											"name": "open",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Whether the tooltip is currently open."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
													"line": 15,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2282
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
											"line": 11,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										2283,
										2281
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							]
						},
						{
							"id": 2339,
							"name": "Arrow",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Displays an element positioned against the tooltip anchor.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2340,
									"name": "Arrow",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
											"line": 10,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tooltip/arrow/TooltipArrow.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2341,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2348,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TooltipArrow.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2323,
							"name": "Popup",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A container for the tooltip contents.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2324,
									"name": "Popup",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tooltip/popup/TooltipPopup.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2325,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2333,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TooltipPopup.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2289,
							"name": "Portal",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"children": [
								{
									"id": 2292,
									"name": "propTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/portal/TooltipPortal.d.ts",
											"line": 10,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2292
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/portal/TooltipPortal.d.ts",
									"line": 8,
									"character": 24
								},
								{
									"fileName": "packages/react/build/esm/tooltip/portal/TooltipPortal.d.ts",
									"line": 9,
									"character": 25
								},
								{
									"fileName": "packages/react/build/esm/tooltip/portal/TooltipPortal.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2290,
									"name": "Portal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A portal element that moves the popup to a different part of the DOM.\nBy default, the portal element is appended to "
											},
											{
												"kind": "code",
												"text": "`<body>`"
											},
											{
												"kind": "text",
												"text": ".\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/portal/TooltipPortal.d.ts",
											"line": 8,
											"character": 24
										}
									],
									"parameters": [
										{
											"id": 2291,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "build/esm/tooltip/portal/TooltipPortal.d.ts",
													"qualifiedName": "TooltipPortal.Props"
												},
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "TooltipPortal.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										]
									}
								}
							]
						},
						{
							"id": 2293,
							"name": "Positioner",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Positions the tooltip against the trigger.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<div>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
									"line": 11,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
									"line": 12,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2294,
									"name": "Positioner",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
											"line": 11,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tooltip/positioner/TooltipPositioner.d.ts",
											"line": 12,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2295,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2302,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TooltipPositioner.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						},
						{
							"id": 2354,
							"name": "Provider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Provides a shared delay for multiple tooltips. The grouping logic ensures that\nonce a tooltip becomes visible, the adjacent tooltips will be shown instantly.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
									"line": 8,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
									"line": 9,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2355,
									"name": "Provider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
											"line": 8,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tooltip/provider/TooltipProvider.d.ts",
											"line": 9,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2356,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2358,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "TooltipProvider.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						},
						{
							"id": 2252,
							"name": "Root",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups all parts of the tooltip.\nDoesn’t render its own HTML element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2253,
									"name": "Root",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tooltip/root/TooltipRoot.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2254,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2257,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "TooltipRoot.Props"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						},
						{
							"id": 2277,
							"name": "Trigger",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An element to attach the tooltip to.\nRenders a "
									},
									{
										"kind": "code",
										"text": "`<button>`"
									},
									{
										"kind": "text",
										"text": " element.\n\nDocumentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2278,
									"name": "Trigger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
											"line": 9,
											"character": 21
										},
										{
											"fileName": "packages/react/build/esm/tooltip/trigger/TooltipTrigger.d.ts",
											"line": 10,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 2279,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 2283,
														"name": "Props",
														"package": "@base-ui-components/react",
														"qualifiedName": "TooltipTrigger.Props"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.RefAttributes"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "RefAttributes",
														"package": "@types/react",
														"qualifiedName": "React.RefAttributes"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								2342,
								2326,
								2296,
								2357,
								2255,
								2280
							]
						},
						{
							"title": "Functions",
							"children": [
								2339,
								2323,
								2289,
								2293,
								2354,
								2252,
								2277
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/tooltip/index.parts.d.ts",
							"line": 1,
							"character": 0
						}
					]
				},
				{
					"id": 534,
					"name": "TextDirection",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/direction-provider/DirectionContext.d.ts",
							"line": 2,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "ltr"
							},
							{
								"type": "literal",
								"value": "rtl"
							}
						]
					}
				},
				{
					"id": 1640,
					"name": "MIN_THUMB_SIZE",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/scroll-area/constants.d.ts",
							"line": 2,
							"character": 21
						}
					],
					"type": {
						"type": "literal",
						"value": 16
					},
					"defaultValue": "16"
				},
				{
					"id": 1639,
					"name": "SCROLL_TIMEOUT",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/scroll-area/constants.d.ts",
							"line": 1,
							"character": 21
						}
					],
					"type": {
						"type": "literal",
						"value": 500
					},
					"defaultValue": "500"
				},
				{
					"id": 346,
					"name": "CheckboxGroup",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides a shared state to a series of checkboxes.\n\nDocumentation: [Base UI Checkbox Group](https://base-ui.com/react/components/checkbox-group)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
							"line": 9,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
							"line": 10,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "CheckboxGroup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/checkbox-group/CheckboxGroup.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"parameters": [
								{
									"id": 348,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 357,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "CheckboxGroup.Props"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 527,
					"name": "DirectionProvider",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enables RTL behavior for Base UI components.\n\nDocumentation: [Base UI Direction Provider](https://base-ui.com/react/utils/direction-provider)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
							"line": 8,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
							"line": 9,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 528,
							"name": "DirectionProvider",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
									"line": 8,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/direction-provider/DirectionProvider.d.ts",
									"line": 9,
									"character": 25
								}
							],
							"parameters": [
								{
									"id": 529,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 531,
										"name": "Props",
										"package": "@base-ui-components/react",
										"qualifiedName": "DirectionProvider.Props"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 667,
					"name": "Form",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A native form element with consolidated error handling.\nRenders a "
							},
							{
								"kind": "code",
								"text": "`<form>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nDocumentation: [Base UI Form](https://base-ui.com/react/components/form)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/form/Form.d.ts",
							"line": 10,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/form/Form.d.ts",
							"line": 11,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 668,
							"name": "Form",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/form/Form.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/form/Form.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"parameters": [
								{
									"id": 669,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 671,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "Form.Props"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLFormElement"
														},
														"name": "HTMLFormElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 683,
					"name": "Input",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A native input element that automatically works with [Field](https://base-ui.com/react/components/field).\nRenders an "
							},
							{
								"kind": "code",
								"text": "`<input>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nDocumentation: [Base UI Input](https://base-ui.com/react/components/input)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/input/Input.d.ts",
							"line": 9,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/input/Input.d.ts",
							"line": 10,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 684,
							"name": "Input",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/input/Input.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/input/Input.d.ts",
									"line": 10,
									"character": 25
								}
							],
							"parameters": [
								{
									"id": 685,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 687,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "Input.Props"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLInputElement"
														},
														"name": "HTMLInputElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 1548,
					"name": "RadioGroup",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides a shared state to a series of radio buttons.\nRenders a "
							},
							{
								"kind": "code",
								"text": "`<div>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nDocumentation: [Base UI Radio Group](https://base-ui.com/react/components/radio)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
							"line": 10,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
							"line": 11,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 1549,
							"name": "RadioGroup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/radio-group/RadioGroup.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"parameters": [
								{
									"id": 1550,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 1560,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "RadioGroup.Props"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 2203,
					"name": "Toggle",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A two-state button that can be on or off.\nRenders a "
							},
							{
								"kind": "code",
								"text": "`<button>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nDocumentation: [Base UI Toggle](https://base-ui.com/react/components/toggle)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
							"line": 10,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
							"line": 11,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 2204,
							"name": "Toggle",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
									"line": 10,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/toggle/Toggle.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"parameters": [
								{
									"id": 2205,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 2210,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "Toggle.Props"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 2227,
					"name": "ToggleGroup",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provides a shared state to a series of toggle buttons.\n\nDocumentation: [Base UI Toggle Group](https://base-ui.com/react/components/toggle-group)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
							"line": 9,
							"character": 21
						},
						{
							"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
							"line": 11,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 2228,
							"name": "ToggleGroup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
									"line": 9,
									"character": 21
								},
								{
									"fileName": "packages/react/build/esm/toggle-group/ToggleGroup.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"parameters": [
								{
									"id": 2229,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 2234,
												"name": "Props",
												"package": "@base-ui-components/react",
												"qualifiedName": "ToggleGroup.Props"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 1895,
					"name": "Separator",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/separator/index.d.ts",
							"line": 1,
							"character": 9
						}
					],
					"target": 953
				},
				{
					"id": 54,
					"name": "utils",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/index.d.ts",
							"line": 29,
							"character": 12
						}
					],
					"target": 53
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						55,
						137,
						246,
						284,
						349,
						372,
						416,
						530,
						535,
						641,
						670,
						686,
						694,
						984,
						1170,
						1322,
						1434,
						1514,
						1551,
						1577,
						1641,
						1896,
						2066,
						2120,
						2206,
						2230,
						2251
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						534
					]
				},
				{
					"title": "Variables",
					"children": [
						1640,
						1639
					]
				},
				{
					"title": "Functions",
					"children": [
						346,
						527,
						667,
						683,
						1548,
						2203,
						2227
					]
				},
				{
					"title": "References",
					"children": [
						1895,
						54
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "accordion",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2363,
					"name": "Accordion",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/accordion/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 55
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2363
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/accordion/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3,
			"name": "alert-dialog",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2364,
					"name": "AlertDialog",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/alert-dialog/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 137
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2364
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/alert-dialog/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4,
			"name": "avatar",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2365,
					"name": "Avatar",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/avatar/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 246
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2365
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/avatar/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5,
			"name": "checkbox",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2366,
					"name": "Checkbox",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/checkbox/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 284
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2366
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/checkbox/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 6,
			"name": "checkbox-group",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2367,
					"name": "CheckboxGroup",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/checkbox-group/index.d.ts",
							"line": 1,
							"character": 9
						}
					],
					"target": 346
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2367
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/checkbox-group/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 7,
			"name": "collapsible",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2368,
					"name": "Collapsible",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/collapsible/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 372
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2368
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/collapsible/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 8,
			"name": "dialog",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2369,
					"name": "Dialog",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/dialog/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 416
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2369
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/dialog/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 9,
			"name": "direction-provider",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2370,
					"name": "DirectionProvider",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/direction-provider/index.d.ts",
							"line": 1,
							"character": 21
						}
					],
					"target": 527
				},
				{
					"id": 2371,
					"name": "TextDirection",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/direction-provider/index.d.ts",
							"line": 1,
							"character": 45
						}
					],
					"target": 534
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2370,
						2371
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/direction-provider/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 10,
			"name": "field",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2372,
					"name": "Field",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/field/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 535
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2372
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/field/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 11,
			"name": "fieldset",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2373,
					"name": "Fieldset",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/fieldset/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 641
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2373
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/fieldset/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 12,
			"name": "form",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2374,
					"name": "Form",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/form/index.d.ts",
							"line": 1,
							"character": 9
						}
					],
					"target": 667
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2374
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/form/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 13,
			"name": "input",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2375,
					"name": "Input",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/input/index.d.ts",
							"line": 1,
							"character": 9
						}
					],
					"target": 683
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2375
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/input/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 14,
			"name": "menu",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2376,
					"name": "Menu",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/menu/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 694
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2376
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/menu/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 15,
			"name": "number-field",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2377,
					"name": "NumberField",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/number-field/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 984
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2377
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/number-field/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 16,
			"name": "popover",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2378,
					"name": "Popover",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/popover/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 1170
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2378
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/popover/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 17,
			"name": "preview-card",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2379,
					"name": "PreviewCard",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/preview-card/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 1322
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2379
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/preview-card/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 18,
			"name": "progress",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2380,
					"name": "Progress",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/progress/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 1434
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2380
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/progress/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 19,
			"name": "radio",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2381,
					"name": "Radio",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/radio/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 1514
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2381
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/radio/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 20,
			"name": "radio-group",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2382,
					"name": "RadioGroup",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/radio-group/index.d.ts",
							"line": 1,
							"character": 9
						}
					],
					"target": 1548
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2382
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/radio-group/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 21,
			"name": "scroll-area",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2385,
					"name": "MIN_THUMB_SIZE",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/scroll-area/constants.d.ts",
							"line": 2,
							"character": 21
						}
					],
					"target": 1640
				},
				{
					"id": 2384,
					"name": "SCROLL_TIMEOUT",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/scroll-area/constants.d.ts",
							"line": 1,
							"character": 21
						}
					],
					"target": 1639
				},
				{
					"id": 2383,
					"name": "ScrollArea",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/scroll-area/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 1577
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2385,
						2384,
						2383
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/scroll-area/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 22,
			"name": "select",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2386,
					"name": "Select",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/select/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 1641
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2386
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/select/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 23,
			"name": "separator",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2387,
					"name": "Separator",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/separator/index.d.ts",
							"line": 1,
							"character": 9
						}
					],
					"target": 953
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2387
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/separator/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 24,
			"name": "slider",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2388,
					"name": "Slider",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/slider/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 1896
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2388
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/slider/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 25,
			"name": "switch",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2389,
					"name": "Switch",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/switch/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 2066
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2389
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/switch/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 26,
			"name": "tabs",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2390,
					"name": "Tabs",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/tabs/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 2120
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2390
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/tabs/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 27,
			"name": "toggle",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2391,
					"name": "Toggle",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/toggle/index.d.ts",
							"line": 1,
							"character": 9
						}
					],
					"target": 2203
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2391
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/toggle/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 28,
			"name": "toggle-group",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2392,
					"name": "ToggleGroup",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/toggle-group/index.d.ts",
							"line": 1,
							"character": 9
						}
					],
					"target": 2227
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2392
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/toggle-group/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 29,
			"name": "tooltip",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2393,
					"name": "Tooltip",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/tooltip/index.d.ts",
							"line": 1,
							"character": 12
						}
					],
					"target": 2251
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2393
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/tooltip/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 30,
			"name": "unstable-no-ssr",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2397,
					"name": "NoSsr",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 2398,
							"name": "propTypes",
							"variant": "declaration",
							"kind": 32,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.d.ts",
									"line": 17,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"children": [
								2398
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.d.ts",
							"line": 15,
							"character": 24
						},
						{
							"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.d.ts",
							"line": 16,
							"character": 25
						}
					]
				},
				{
					"id": 2399,
					"name": "NoSsrProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2400,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "You can wrap a node."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.types.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 2401,
							"name": "defer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the component will not only prevent server-side rendering.\nIt will also defer the rendering of the children into a different screen frame."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.types.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2402,
							"name": "fallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fallback content to display."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nnull\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.types.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2400,
								2401,
								2402
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.types.d.ts",
							"line": 2,
							"character": 17
						}
					]
				},
				{
					"id": 2394,
					"name": "NoSsr",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.d.ts",
							"line": 15,
							"character": 24
						},
						{
							"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.d.ts",
							"line": 16,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 2395,
							"name": "NoSsr",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n\nThis component can be useful in a variety of situations:\n\n* Escape hatch for broken dependencies not supporting SSR.\n* Improve the time-to-first paint on the client by only rendering above the fold.\n* Reduce the rendering time on the server.\n* Under too heavy server load, you can turn on service degradation.\n\nDocumentation: [Base UI Unstable No Ssr](https://base-ui.com/react/components/unstable-no-ssr)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/unstable-no-ssr/NoSsr.d.ts",
									"line": 15,
									"character": 24
								}
							],
							"parameters": [
								{
									"id": 2396,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2399,
										"name": "NoSsrProps",
										"package": "@base-ui-components/react"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						2397
					]
				},
				{
					"title": "Interfaces",
					"children": [
						2399
					]
				},
				{
					"title": "Functions",
					"children": [
						2394
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/unstable-no-ssr/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 31,
			"name": "unstable-use-media-query",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 36,
					"name": "useMediaQuery",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 37,
							"name": "Options",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 38,
									"name": "defaultMatches",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "As "
											},
											{
												"kind": "code",
												"text": "`window.matchMedia()`"
											},
											{
												"kind": "text",
												"text": " is unavailable on the server,\nit returns a default matches during the first mount."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
											"line": 9,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 39,
									"name": "matchMedia",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "You can provide your own implementation of matchMedia.\nThis can be used for handling an iframe content window."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
											"line": 14,
											"character": 8
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 40,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 26491,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 41,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/matchMedia)"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"line": 26491,
																	"character": 4
																}
															],
															"parameters": [
																{
																	"id": 42,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "MediaQueryList"
																},
																"name": "MediaQueryList",
																"package": "typescript"
															}
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 43,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
															"line": 28134,
															"character": 17
														}
													],
													"signatures": [
														{
															"id": 44,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/matchMedia)"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"line": 28134,
																	"character": 17
																}
															],
															"parameters": [
																{
																	"id": 45,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "MediaQueryList"
																},
																"name": "MediaQueryList",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 46,
									"name": "noSsr",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "To perform the server-side hydration, the hook needs to render twice.\nA first time with "
											},
											{
												"kind": "code",
												"text": "`defaultMatches`"
											},
											{
												"kind": "text",
												"text": ", the value of the server, and a second time with the resolved value.\nThis double pass rendering cycle comes with a drawback: it's slower.\nYou can set this option to "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if you use the returned value **only** client-side."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
											"line": 22,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 47,
									"name": "ssrMatchMedia",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "You can provide your own implementation of "
											},
											{
												"kind": "code",
												"text": "`matchMedia`"
											},
											{
												"kind": "text",
												"text": ", it's used when rendering server-side."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
											"line": 26,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 48,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
													"line": 26,
													"character": 24
												}
											],
											"signatures": [
												{
													"id": 49,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
															"line": 26,
															"character": 24
														}
													],
													"parameters": [
														{
															"id": 50,
															"name": "query",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 51,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 52,
																	"name": "matches",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
																			"line": 27,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		52
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
																	"line": 26,
																	"character": 43
																}
															]
														}
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38,
										39,
										46,
										47
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
									"line": 3,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								37
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
							"line": 1,
							"character": 24
						},
						{
							"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
							"line": 2,
							"character": 25
						}
					]
				},
				{
					"id": 32,
					"name": "useMediaQuery",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
							"line": 1,
							"character": 24
						},
						{
							"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
							"line": 2,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 33,
							"name": "useMediaQuery",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
									"line": 1,
									"character": 24
								}
							],
							"parameters": [
								{
									"id": 34,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37,
										"name": "Options",
										"package": "@base-ui-components/react",
										"qualifiedName": "useMediaQuery.Options"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						36
					]
				},
				{
					"title": "Functions",
					"children": [
						32
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/unstable-use-media-query/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 53,
			"name": "utils",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2416,
					"name": "UseControlledProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2417,
							"name": "controlled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds the component value when it's controlled."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 2421,
										"name": "T",
										"package": "@base-ui-components/react",
										"qualifiedName": "UseControlledProps.T",
										"refersToTypeParameter": true
									}
								]
							}
						},
						{
							"id": 2418,
							"name": "default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The default value when uncontrolled."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 2421,
										"name": "T",
										"package": "@base-ui-components/react",
										"qualifiedName": "UseControlledProps.T",
										"refersToTypeParameter": true
									}
								]
							}
						},
						{
							"id": 2419,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The component name displayed in warnings."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2420,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the state variable displayed in warnings."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2417,
								2418,
								2419,
								2420
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
							"line": 1,
							"character": 17
						}
					],
					"typeParameters": [
						{
							"id": 2421,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 2451,
					"name": "TransitionStatus",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/useTransitionStatus.d.ts",
							"line": 2,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "starting"
							},
							{
								"type": "literal",
								"value": "ending"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 2452,
					"name": "visuallyHidden",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/visuallyHidden.d.ts",
							"line": 2,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "React.CSSProperties",
						"package": "@types/react"
					}
				},
				{
					"id": 2403,
					"name": "getReactElementRef",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/getReactElementRef.d.ts",
							"line": 9,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2404,
							"name": "getReactElementRef",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the ref of a React element handling differences between React 19 and older versions.\nIt will throw runtime error if the element is not a valid React element."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "React.Ref<any> | null"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/getReactElementRef.d.ts",
									"line": 9,
									"character": 24
								}
							],
							"parameters": [
								{
									"id": 2405,
									"name": "element",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "React.ReactElement"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "ReactElement",
										"package": "@types/react",
										"qualifiedName": "React.ReactElement"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.Ref"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Ref",
								"package": "@types/react",
								"qualifiedName": "React.Ref"
							}
						}
					]
				},
				{
					"id": 2406,
					"name": "useControlled",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
							"line": 19,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2407,
							"name": "useControlled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
									"line": 19,
									"character": 24
								}
							],
							"typeParameters": [
								{
									"id": 2408,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 2409,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2416,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2408,
												"name": "T",
												"package": "@base-ui-components/react",
												"refersToTypeParameter": true
											}
										],
										"name": "UseControlledProps",
										"package": "@base-ui-components/react"
									}
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 2408,
										"name": "T",
										"package": "@base-ui-components/react",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2410,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
													"line": 19,
													"character": 131
												}
											],
											"signatures": [
												{
													"id": 2411,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
															"line": 19,
															"character": 131
														}
													],
													"parameters": [
														{
															"id": 2412,
															"name": "newValue",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": 2408,
																		"name": "T",
																		"package": "@base-ui-components/react",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2413,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
																					"line": 19,
																					"character": 147
																				}
																			],
																			"signatures": [
																				{
																					"id": 2414,
																					"name": "__type",
																					"variant": "signature",
																					"kind": 4096,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react/build/esm/utils/useControlled.d.ts",
																							"line": 19,
																							"character": 147
																						}
																					],
																					"parameters": [
																						{
																							"id": 2415,
																							"name": "prevValue",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "reference",
																								"target": 2408,
																								"name": "T",
																								"package": "@base-ui-components/react",
																								"refersToTypeParameter": true
																							}
																						}
																					],
																					"type": {
																						"type": "reference",
																						"target": 2408,
																						"name": "T",
																						"package": "@base-ui-components/react",
																						"refersToTypeParameter": true
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 2422,
					"name": "useEnhancedEffect",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A version of "
							},
							{
								"kind": "code",
								"text": "`React.useLayoutEffect`"
							},
							{
								"kind": "text",
								"text": " that does not show a warning when server-side rendering.\nThis is useful for effects that are only needed for client-side rendering but not for SSR.\n\nBefore you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nand confirm it doesn't apply to your use-case."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/useEnhancedEffect.d.ts",
							"line": 9,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 2423,
							"name": "useEnhancedEffect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The signature is identical to "
									},
									{
										"kind": "code",
										"text": "`useEffect`"
									},
									{
										"kind": "text",
										"text": ", but it fires synchronously after all DOM mutations.\nUse this to read layout from the DOM and synchronously re-render. Updates scheduled inside\n"
									},
									{
										"kind": "code",
										"text": "`useLayoutEffect`"
									},
									{
										"kind": "text",
										"text": " will be flushed synchronously, before the browser has a chance to paint.\n\nPrefer the standard "
									},
									{
										"kind": "code",
										"text": "`useEffect`"
									},
									{
										"kind": "text",
										"text": " when possible to avoid blocking visual updates.\n\nIf you’re migrating code from a class component, "
									},
									{
										"kind": "code",
										"text": "`useLayoutEffect`"
									},
									{
										"kind": "text",
										"text": " fires in the same phase as\n"
									},
									{
										"kind": "code",
										"text": "`componentDidMount`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`componentDidUpdate`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "16.8.0"
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "https://react.dev/reference/react/useLayoutEffect",
												"target": "https://react.dev/reference/react/useLayoutEffect"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useEnhancedEffect.d.ts",
									"line": 9,
									"character": 21
								}
							],
							"parameters": [
								{
									"id": 2424,
									"name": "effect",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.EffectCallback"
										},
										"name": "EffectCallback",
										"package": "@types/react",
										"qualifiedName": "React.EffectCallback"
									}
								},
								{
									"id": 2425,
									"name": "deps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.DependencyList"
										},
										"name": "DependencyList",
										"package": "@types/react",
										"qualifiedName": "React.DependencyList"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2426,
					"name": "useForkRef",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/useForkRef.d.ts",
							"line": 18,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2427,
							"name": "useForkRef",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Takes an array of refs and returns a new ref which will apply any modification to all of the refs.\nThis is useful when you want to have the ref used in multiple places.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst rootRef = React.useRef<Instance>(null);\nconst refFork = useForkRef(rootRef, props.ref);\n\nreturn (\n  <Root {...props} ref={refFork} />\n);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The new ref callback."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useForkRef.d.ts",
									"line": 18,
									"character": 24
								}
							],
							"typeParameters": [
								{
									"id": 2428,
									"name": "Instance",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2429,
									"name": "refs",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ref array."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "undefined"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
														"qualifiedName": "React.Ref"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 2428,
															"name": "Instance",
															"package": "@base-ui-components/react",
															"refersToTypeParameter": true
														}
													],
													"name": "Ref",
													"package": "@types/react",
													"qualifiedName": "React.Ref"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2430,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
													"line": 175,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 2431,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
															"line": 175,
															"character": 8
														}
													],
													"parameters": [
														{
															"id": 2432,
															"name": "instance",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": 2428,
																		"name": "Instance",
																		"package": "@base-ui-components/react",
																		"refersToTypeParameter": true
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2433,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																			"line": 179,
																			"character": 15
																		}
																	],
																	"signatures": [
																		{
																			"id": 2434,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																					"line": 179,
																					"character": 15
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
																					"qualifiedName": "VoidOrUndefinedOnly"
																				},
																				"name": "VoidOrUndefinedOnly",
																				"package": "@types/react"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											]
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 2435,
					"name": "useId",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/useId.d.ts",
							"line": 7,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2436,
							"name": "useId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n<div id={useId()} />\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useId.d.ts",
									"line": 7,
									"character": 24
								}
							],
							"parameters": [
								{
									"id": 2437,
									"name": "idOverride",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2438,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 2439,
					"name": "useScrollLock",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/build/esm/utils/useScrollLock.d.ts",
							"line": 6,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2440,
							"name": "useScrollLock",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Locks the scroll of the document when enabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/build/esm/utils/useScrollLock.d.ts",
									"line": 6,
									"character": 24
								}
							],
							"parameters": [
								{
									"id": 2441,
									"name": "enabled",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether to enable the scroll lock."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2442,
									"name": "referenceElement",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Element"
												},
												"name": "Element",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						2416
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						2451
					]
				},
				{
					"title": "Variables",
					"children": [
						2452
					]
				},
				{
					"title": "Functions",
					"children": [
						2403,
						2406,
						2422,
						2426,
						2435,
						2439
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/build/esm/utils/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				22,
				23,
				24,
				25,
				26,
				27,
				28,
				29,
				30,
				31,
				53
			]
		}
	],
	"packageName": "@base-ui-components/react",
	"readme": [
		{
			"kind": "text",
			"text": "<!-- markdownlint-disable MD041 -->\n\n<a href=\"https://base-ui.com\" rel=\"noopener\" target=\"_blank\"><img width=\"150\" height=\"133\" src=\"https://base-ui.com/static/logo.svg\" alt=\"Base UI logo\"></a>\n\nBase UI is a library of unstyled React components. You gain complete control over your app's CSS and accessibility features.\n\n## Installation\n\nInstall the package in your project directory with:\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm install @base-ui-components/react\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Documentation\n\n<!-- #default-branch-switch -->\n\nVisit [base-ui.com](https://base-ui.com) to view the full documentation.\n\n## Questions\n\nFor how-to questions that don't involve making changes to the code base, please use [Stack Overflow](https://stackoverflow.com/questions/tagged/base-ui) instead of GitHub issues.\nUse the \"base-ui\" tag on Stack Overflow to make it easier for the community to find your question.\n\n## Contributing\n\nRead the [contributing guide](/CONTRIBUTING.md) to learn about our development process, how to propose bug fixes and improvements, and how to build and test your changes.\n\nContributing to Base UI is about more than just issues and pull requests!\nThere are many other ways to [support Base UI](https://mui.com/material-ui/getting-started/faq/#mui-is-awesome-how-can-i-support-the-project) beyond contributing to the code base.\n\n## Changelog\n\nThe [changelog](https://github.com/mui/base-ui/releases) is regularly updated to reflect what's changed in each new release.\n\n## Roadmap\n\nFuture plans and high-priority features and enhancements can be found in the [roadmap](https://github.com/orgs/mui/projects/1).\n\n## License\n\nThis project is licensed under the terms of the\n[MIT license](/LICENSE).\n\n## Security\n\nFor details of supported versions and contact details for reporting security issues, please refer to the [security policy](https://github.com/mui/base-ui/security/policy)."
		}
	],
	"symbolIdMap": {
		"1": {
			"sourceFileName": "build/esm/index.d.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "build/esm/accordion/index.d.ts",
			"qualifiedName": ""
		},
		"3": {
			"sourceFileName": "build/esm/alert-dialog/index.d.ts",
			"qualifiedName": ""
		},
		"4": {
			"sourceFileName": "build/esm/avatar/index.d.ts",
			"qualifiedName": ""
		},
		"5": {
			"sourceFileName": "build/esm/checkbox/index.d.ts",
			"qualifiedName": ""
		},
		"6": {
			"sourceFileName": "build/esm/checkbox-group/index.d.ts",
			"qualifiedName": ""
		},
		"7": {
			"sourceFileName": "build/esm/collapsible/index.d.ts",
			"qualifiedName": ""
		},
		"8": {
			"sourceFileName": "build/esm/dialog/index.d.ts",
			"qualifiedName": ""
		},
		"9": {
			"sourceFileName": "build/esm/direction-provider/index.d.ts",
			"qualifiedName": ""
		},
		"10": {
			"sourceFileName": "build/esm/field/index.d.ts",
			"qualifiedName": ""
		},
		"11": {
			"sourceFileName": "build/esm/fieldset/index.d.ts",
			"qualifiedName": ""
		},
		"12": {
			"sourceFileName": "build/esm/form/index.d.ts",
			"qualifiedName": ""
		},
		"13": {
			"sourceFileName": "build/esm/input/index.d.ts",
			"qualifiedName": ""
		},
		"14": {
			"sourceFileName": "build/esm/menu/index.d.ts",
			"qualifiedName": ""
		},
		"15": {
			"sourceFileName": "build/esm/number-field/index.d.ts",
			"qualifiedName": ""
		},
		"16": {
			"sourceFileName": "build/esm/popover/index.d.ts",
			"qualifiedName": ""
		},
		"17": {
			"sourceFileName": "build/esm/preview-card/index.d.ts",
			"qualifiedName": ""
		},
		"18": {
			"sourceFileName": "build/esm/progress/index.d.ts",
			"qualifiedName": ""
		},
		"19": {
			"sourceFileName": "build/esm/radio/index.d.ts",
			"qualifiedName": ""
		},
		"20": {
			"sourceFileName": "build/esm/radio-group/index.d.ts",
			"qualifiedName": ""
		},
		"21": {
			"sourceFileName": "build/esm/scroll-area/index.d.ts",
			"qualifiedName": ""
		},
		"22": {
			"sourceFileName": "build/esm/select/index.d.ts",
			"qualifiedName": ""
		},
		"23": {
			"sourceFileName": "build/esm/separator/index.d.ts",
			"qualifiedName": ""
		},
		"24": {
			"sourceFileName": "build/esm/slider/index.d.ts",
			"qualifiedName": ""
		},
		"25": {
			"sourceFileName": "build/esm/switch/index.d.ts",
			"qualifiedName": ""
		},
		"26": {
			"sourceFileName": "build/esm/tabs/index.d.ts",
			"qualifiedName": ""
		},
		"27": {
			"sourceFileName": "build/esm/toggle/index.d.ts",
			"qualifiedName": ""
		},
		"28": {
			"sourceFileName": "build/esm/toggle-group/index.d.ts",
			"qualifiedName": ""
		},
		"29": {
			"sourceFileName": "build/esm/tooltip/index.d.ts",
			"qualifiedName": ""
		},
		"30": {
			"sourceFileName": "build/esm/unstable-no-ssr/index.d.ts",
			"qualifiedName": ""
		},
		"31": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": ""
		},
		"32": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "useMediaQuery"
		},
		"33": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "useMediaQuery"
		},
		"34": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "query"
		},
		"35": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "options"
		},
		"36": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "useMediaQuery"
		},
		"37": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "useMediaQuery.Options"
		},
		"38": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "useMediaQuery.Options.defaultMatches"
		},
		"39": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "useMediaQuery.Options.matchMedia"
		},
		"40": {
			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Window.matchMedia"
		},
		"41": {
			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "Window.matchMedia"
		},
		"42": {
			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "query"
		},
		"43": {
			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "matchMedia"
		},
		"44": {
			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "matchMedia"
		},
		"45": {
			"sourceFileName": "../../node_modules/.pnpm/typescript@5.7.3/node_modules/typescript/lib/lib.dom.d.ts",
			"qualifiedName": "query"
		},
		"46": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "useMediaQuery.Options.noSsr"
		},
		"47": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "useMediaQuery.Options.ssrMatchMedia"
		},
		"48": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "__type"
		},
		"49": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "__type"
		},
		"50": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "query"
		},
		"51": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "__type"
		},
		"52": {
			"sourceFileName": "build/esm/unstable-use-media-query/index.d.ts",
			"qualifiedName": "__type.matches"
		},
		"53": {
			"sourceFileName": "build/esm/utils/index.d.ts",
			"qualifiedName": ""
		},
		"54": {
			"sourceFileName": "build/esm/index.d.ts",
			"qualifiedName": "utils"
		},
		"55": {
			"sourceFileName": "build/esm/accordion/index.parts.d.ts",
			"qualifiedName": ""
		},
		"56": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot"
		},
		"57": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AccordionRoot"
		},
		"58": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"59": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot"
		},
		"60": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.State"
		},
		"61": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.State.value"
		},
		"62": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.State.disabled"
		},
		"63": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.State.orientation"
		},
		"64": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.Props"
		},
		"65": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.Props.hiddenUntilFound"
		},
		"66": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.Props.keepMounted"
		},
		"67": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "value"
		},
		"68": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "defaultValue"
		},
		"69": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "disabled"
		},
		"70": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "loop"
		},
		"71": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "onValueChange"
		},
		"72": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "__type"
		},
		"73": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "__type"
		},
		"74": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "value"
		},
		"75": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "openMultiple"
		},
		"76": {
			"sourceFileName": "build/esm/accordion/root/useAccordionRoot.d.ts",
			"qualifiedName": "orientation"
		},
		"77": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"78": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"79": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"80": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"81": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"82": {
			"sourceFileName": "build/esm/accordion/item/AccordionItem.d.ts",
			"qualifiedName": "AccordionItem"
		},
		"83": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AccordionItem"
		},
		"84": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"85": {
			"sourceFileName": "build/esm/accordion/item/AccordionItem.d.ts",
			"qualifiedName": "AccordionItem"
		},
		"86": {
			"sourceFileName": "build/esm/accordion/item/AccordionItem.d.ts",
			"qualifiedName": "AccordionItem.State"
		},
		"87": {
			"sourceFileName": "build/esm/accordion/item/AccordionItem.d.ts",
			"qualifiedName": "AccordionItem.State.index"
		},
		"88": {
			"sourceFileName": "build/esm/accordion/item/AccordionItem.d.ts",
			"qualifiedName": "AccordionItem.State.open"
		},
		"89": {
			"sourceFileName": "build/esm/accordion/item/AccordionItem.d.ts",
			"qualifiedName": "AccordionItem.State.transitionStatus"
		},
		"90": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.State.value"
		},
		"91": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.State.disabled"
		},
		"92": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "AccordionRoot.State.orientation"
		},
		"93": {
			"sourceFileName": "build/esm/accordion/item/AccordionItem.d.ts",
			"qualifiedName": "AccordionItem.Props"
		},
		"94": {
			"sourceFileName": "build/esm/accordion/item/AccordionItem.d.ts",
			"qualifiedName": "AccordionItem.Props.value"
		},
		"95": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"96": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"97": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"98": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"99": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"100": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "disabled"
		},
		"101": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "onOpenChange"
		},
		"102": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "__type"
		},
		"103": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "__type"
		},
		"104": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "open"
		},
		"105": {
			"sourceFileName": "build/esm/accordion/header/AccordionHeader.d.ts",
			"qualifiedName": "AccordionHeader"
		},
		"106": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AccordionHeader"
		},
		"107": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"108": {
			"sourceFileName": "build/esm/accordion/header/AccordionHeader.d.ts",
			"qualifiedName": "AccordionHeader"
		},
		"109": {
			"sourceFileName": "build/esm/accordion/header/AccordionHeader.d.ts",
			"qualifiedName": "AccordionHeader.Props"
		},
		"110": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"111": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"112": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"113": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"114": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"115": {
			"sourceFileName": "build/esm/accordion/trigger/AccordionTrigger.d.ts",
			"qualifiedName": "AccordionTrigger"
		},
		"116": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AccordionTrigger"
		},
		"117": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"118": {
			"sourceFileName": "build/esm/accordion/trigger/AccordionTrigger.d.ts",
			"qualifiedName": "AccordionTrigger"
		},
		"119": {
			"sourceFileName": "build/esm/accordion/trigger/AccordionTrigger.d.ts",
			"qualifiedName": "AccordionTrigger.Props"
		},
		"120": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"121": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"122": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"123": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"124": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"125": {
			"sourceFileName": "build/esm/accordion/panel/AccordionPanel.d.ts",
			"qualifiedName": "AccordionPanel"
		},
		"126": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AccordionPanel"
		},
		"127": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"128": {
			"sourceFileName": "build/esm/accordion/panel/AccordionPanel.d.ts",
			"qualifiedName": "AccordionPanel"
		},
		"129": {
			"sourceFileName": "build/esm/accordion/panel/AccordionPanel.d.ts",
			"qualifiedName": "AccordionPanel.Props"
		},
		"130": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"131": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"132": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"133": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"134": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"135": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "hiddenUntilFound"
		},
		"136": {
			"sourceFileName": "build/esm/accordion/root/AccordionRoot.d.ts",
			"qualifiedName": "keepMounted"
		},
		"137": {
			"sourceFileName": "build/esm/alert-dialog/index.parts.d.ts",
			"qualifiedName": ""
		},
		"138": {
			"sourceFileName": "build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
			"qualifiedName": "AlertDialogBackdrop"
		},
		"139": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AlertDialogBackdrop"
		},
		"140": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"141": {
			"sourceFileName": "build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
			"qualifiedName": "AlertDialogBackdrop"
		},
		"142": {
			"sourceFileName": "build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
			"qualifiedName": "AlertDialogBackdrop.Props"
		},
		"143": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"144": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"145": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"146": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"147": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"148": {
			"sourceFileName": "build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
			"qualifiedName": "AlertDialogBackdrop.State"
		},
		"149": {
			"sourceFileName": "build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
			"qualifiedName": "AlertDialogBackdrop.State.open"
		},
		"150": {
			"sourceFileName": "build/esm/alert-dialog/backdrop/AlertDialogBackdrop.d.ts",
			"qualifiedName": "AlertDialogBackdrop.State.transitionStatus"
		},
		"151": {
			"sourceFileName": "build/esm/alert-dialog/close/AlertDialogClose.d.ts",
			"qualifiedName": "AlertDialogClose"
		},
		"152": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AlertDialogClose"
		},
		"153": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"154": {
			"sourceFileName": "build/esm/alert-dialog/close/AlertDialogClose.d.ts",
			"qualifiedName": "AlertDialogClose"
		},
		"155": {
			"sourceFileName": "build/esm/alert-dialog/close/AlertDialogClose.d.ts",
			"qualifiedName": "AlertDialogClose.Props"
		},
		"156": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"157": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"158": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"159": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"160": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"161": {
			"sourceFileName": "build/esm/alert-dialog/close/AlertDialogClose.d.ts",
			"qualifiedName": "AlertDialogClose.State"
		},
		"162": {
			"sourceFileName": "build/esm/alert-dialog/close/AlertDialogClose.d.ts",
			"qualifiedName": "AlertDialogClose.State.disabled"
		},
		"163": {
			"sourceFileName": "build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
			"qualifiedName": "AlertDialogDescription"
		},
		"164": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AlertDialogDescription"
		},
		"165": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"166": {
			"sourceFileName": "build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
			"qualifiedName": "AlertDialogDescription"
		},
		"167": {
			"sourceFileName": "build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
			"qualifiedName": "AlertDialogDescription.Props"
		},
		"168": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"169": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"170": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"171": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"172": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"173": {
			"sourceFileName": "build/esm/alert-dialog/description/AlertDialogDescription.d.ts",
			"qualifiedName": "AlertDialogDescription.State"
		},
		"174": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup"
		},
		"175": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AlertDialogPopup"
		},
		"176": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"177": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup"
		},
		"178": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup.Props"
		},
		"179": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup.Props.initialFocus"
		},
		"180": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "__type"
		},
		"181": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "__type"
		},
		"182": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "interactionType"
		},
		"183": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup.Props.finalFocus"
		},
		"184": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"185": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"186": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"187": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"188": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"189": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup.State"
		},
		"190": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup.State.open"
		},
		"191": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup.State.transitionStatus"
		},
		"192": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup.State.nested"
		},
		"193": {
			"sourceFileName": "build/esm/alert-dialog/popup/AlertDialogPopup.d.ts",
			"qualifiedName": "AlertDialogPopup.State.hasNestedDialogs"
		},
		"194": {
			"sourceFileName": "build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
			"qualifiedName": "AlertDialogPortal"
		},
		"195": {
			"sourceFileName": "build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
			"qualifiedName": "AlertDialogPortal"
		},
		"196": {
			"sourceFileName": "build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
			"qualifiedName": "props"
		},
		"197": {
			"sourceFileName": "build/esm/alert-dialog/portal/AlertDialogPortal.d.ts",
			"qualifiedName": "AlertDialogPortal.propTypes"
		},
		"198": {
			"sourceFileName": "build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
			"qualifiedName": "AlertDialogRoot"
		},
		"199": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AlertDialogRoot"
		},
		"200": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"201": {
			"sourceFileName": "build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
			"qualifiedName": "AlertDialogRoot"
		},
		"202": {
			"sourceFileName": "build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
			"qualifiedName": "AlertDialogRoot.Props"
		},
		"203": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "open"
		},
		"204": {
			"sourceFileName": "build/esm/dialog/root/DialogRoot.d.ts",
			"qualifiedName": "children"
		},
		"205": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "onOpenChange"
		},
		"206": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"207": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"208": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "open"
		},
		"209": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "event"
		},
		"210": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "reason"
		},
		"211": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "defaultOpen"
		},
		"212": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "onOpenChangeComplete"
		},
		"213": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"214": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"215": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "open"
		},
		"216": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "actionsRef"
		},
		"217": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"218": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type.unmount"
		},
		"219": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"220": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"221": {
			"sourceFileName": "build/esm/alert-dialog/root/AlertDialogRoot.d.ts",
			"qualifiedName": "AlertDialogRoot.Actions"
		},
		"222": {
			"sourceFileName": "build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
			"qualifiedName": "AlertDialogTitle"
		},
		"223": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AlertDialogTitle"
		},
		"224": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"225": {
			"sourceFileName": "build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
			"qualifiedName": "AlertDialogTitle"
		},
		"226": {
			"sourceFileName": "build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
			"qualifiedName": "AlertDialogTitle.Props"
		},
		"227": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"228": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"229": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"230": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"231": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"232": {
			"sourceFileName": "build/esm/alert-dialog/title/AlertDialogTitle.d.ts",
			"qualifiedName": "AlertDialogTitle.State"
		},
		"233": {
			"sourceFileName": "build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
			"qualifiedName": "AlertDialogTrigger"
		},
		"234": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AlertDialogTrigger"
		},
		"235": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"236": {
			"sourceFileName": "build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
			"qualifiedName": "AlertDialogTrigger"
		},
		"237": {
			"sourceFileName": "build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
			"qualifiedName": "AlertDialogTrigger.Props"
		},
		"238": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"239": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"240": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"241": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"242": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"243": {
			"sourceFileName": "build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
			"qualifiedName": "AlertDialogTrigger.State"
		},
		"244": {
			"sourceFileName": "build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
			"qualifiedName": "AlertDialogTrigger.State.disabled"
		},
		"245": {
			"sourceFileName": "build/esm/alert-dialog/trigger/AlertDialogTrigger.d.ts",
			"qualifiedName": "AlertDialogTrigger.State.open"
		},
		"246": {
			"sourceFileName": "build/esm/avatar/index.parts.d.ts",
			"qualifiedName": ""
		},
		"247": {
			"sourceFileName": "build/esm/avatar/root/AvatarRoot.d.ts",
			"qualifiedName": "AvatarRoot"
		},
		"248": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AvatarRoot"
		},
		"249": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"250": {
			"sourceFileName": "build/esm/avatar/root/AvatarRoot.d.ts",
			"qualifiedName": "AvatarRoot"
		},
		"251": {
			"sourceFileName": "build/esm/avatar/root/AvatarRoot.d.ts",
			"qualifiedName": "AvatarRoot.Props"
		},
		"252": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"253": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"254": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"255": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"256": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"257": {
			"sourceFileName": "build/esm/avatar/root/AvatarRoot.d.ts",
			"qualifiedName": "AvatarRoot.State"
		},
		"258": {
			"sourceFileName": "build/esm/avatar/root/AvatarRoot.d.ts",
			"qualifiedName": "AvatarRoot.State.imageLoadingStatus"
		},
		"259": {
			"sourceFileName": "build/esm/avatar/image/AvatarImage.d.ts",
			"qualifiedName": "AvatarImage"
		},
		"260": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AvatarImage"
		},
		"261": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"262": {
			"sourceFileName": "build/esm/avatar/image/AvatarImage.d.ts",
			"qualifiedName": "AvatarImage"
		},
		"263": {
			"sourceFileName": "build/esm/avatar/image/AvatarImage.d.ts",
			"qualifiedName": "AvatarImage.Props"
		},
		"264": {
			"sourceFileName": "build/esm/avatar/image/AvatarImage.d.ts",
			"qualifiedName": "AvatarImage.Props.onLoadingStatusChange"
		},
		"265": {
			"sourceFileName": "build/esm/avatar/image/AvatarImage.d.ts",
			"qualifiedName": "__type"
		},
		"266": {
			"sourceFileName": "build/esm/avatar/image/AvatarImage.d.ts",
			"qualifiedName": "__type"
		},
		"267": {
			"sourceFileName": "build/esm/avatar/image/AvatarImage.d.ts",
			"qualifiedName": "status"
		},
		"268": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"269": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"270": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"271": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"272": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"273": {
			"sourceFileName": "build/esm/avatar/fallback/AvatarFallback.d.ts",
			"qualifiedName": "AvatarFallback"
		},
		"274": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "AvatarFallback"
		},
		"275": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"276": {
			"sourceFileName": "build/esm/avatar/fallback/AvatarFallback.d.ts",
			"qualifiedName": "AvatarFallback"
		},
		"277": {
			"sourceFileName": "build/esm/avatar/fallback/AvatarFallback.d.ts",
			"qualifiedName": "AvatarFallback.Props"
		},
		"278": {
			"sourceFileName": "build/esm/avatar/fallback/AvatarFallback.d.ts",
			"qualifiedName": "AvatarFallback.Props.delay"
		},
		"279": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"280": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"281": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"282": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"283": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"284": {
			"sourceFileName": "build/esm/checkbox/index.parts.d.ts",
			"qualifiedName": ""
		},
		"285": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot"
		},
		"286": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "CheckboxRoot"
		},
		"287": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"288": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot"
		},
		"289": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State"
		},
		"290": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.checked"
		},
		"291": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.disabled"
		},
		"292": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.readOnly"
		},
		"293": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.required"
		},
		"294": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.indeterminate"
		},
		"295": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"296": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"297": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"298": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"299": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"300": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.Props"
		},
		"301": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.id"
		},
		"302": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.name"
		},
		"303": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.checked"
		},
		"304": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.defaultChecked"
		},
		"305": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.disabled"
		},
		"306": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.onCheckedChange"
		},
		"307": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "__type"
		},
		"308": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "__type"
		},
		"309": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "checked"
		},
		"310": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "event"
		},
		"311": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.readOnly"
		},
		"312": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.required"
		},
		"313": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.autoFocus"
		},
		"314": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.indeterminate"
		},
		"315": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.inputRef"
		},
		"316": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.parent"
		},
		"317": {
			"sourceFileName": "build/esm/checkbox/root/useCheckboxRoot.d.ts",
			"qualifiedName": "useCheckboxRoot.Parameters.value"
		},
		"318": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"319": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"320": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"321": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"322": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"323": {
			"sourceFileName": "build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
			"qualifiedName": "CheckboxIndicator"
		},
		"324": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "CheckboxIndicator"
		},
		"325": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"326": {
			"sourceFileName": "build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
			"qualifiedName": "CheckboxIndicator"
		},
		"327": {
			"sourceFileName": "build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
			"qualifiedName": "CheckboxIndicator.State"
		},
		"328": {
			"sourceFileName": "build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
			"qualifiedName": "CheckboxIndicator.State.transitionStatus"
		},
		"329": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.checked"
		},
		"330": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.disabled"
		},
		"331": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.readOnly"
		},
		"332": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.required"
		},
		"333": {
			"sourceFileName": "build/esm/checkbox/root/CheckboxRoot.d.ts",
			"qualifiedName": "CheckboxRoot.State.indeterminate"
		},
		"334": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"335": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"336": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"337": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"338": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"339": {
			"sourceFileName": "build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
			"qualifiedName": "CheckboxIndicator.Props"
		},
		"340": {
			"sourceFileName": "build/esm/checkbox/indicator/CheckboxIndicator.d.ts",
			"qualifiedName": "CheckboxIndicator.Props.keepMounted"
		},
		"341": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"342": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"343": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"344": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"345": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"346": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup"
		},
		"347": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "CheckboxGroup"
		},
		"348": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"349": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup"
		},
		"350": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup.State"
		},
		"351": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup.State.disabled"
		},
		"352": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"353": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"354": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"355": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"356": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"357": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup.Props"
		},
		"358": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup.Props.value"
		},
		"359": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup.Props.defaultValue"
		},
		"360": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup.Props.onValueChange"
		},
		"361": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "__type"
		},
		"362": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "__type"
		},
		"363": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "value"
		},
		"364": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "event"
		},
		"365": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup.Props.allValues"
		},
		"366": {
			"sourceFileName": "build/esm/checkbox-group/CheckboxGroup.d.ts",
			"qualifiedName": "CheckboxGroup.Props.disabled"
		},
		"367": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"368": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"369": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"370": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"371": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"372": {
			"sourceFileName": "build/esm/collapsible/index.parts.d.ts",
			"qualifiedName": ""
		},
		"373": {
			"sourceFileName": "build/esm/collapsible/root/CollapsibleRoot.d.ts",
			"qualifiedName": "CollapsibleRoot"
		},
		"374": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "CollapsibleRoot"
		},
		"375": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"376": {
			"sourceFileName": "build/esm/collapsible/root/CollapsibleRoot.d.ts",
			"qualifiedName": "CollapsibleRoot"
		},
		"377": {
			"sourceFileName": "build/esm/collapsible/root/CollapsibleRoot.d.ts",
			"qualifiedName": "CollapsibleRoot.State"
		},
		"378": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "open"
		},
		"379": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "disabled"
		},
		"380": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "transitionStatus"
		},
		"381": {
			"sourceFileName": "build/esm/collapsible/root/CollapsibleRoot.d.ts",
			"qualifiedName": "CollapsibleRoot.Props"
		},
		"382": {
			"sourceFileName": "build/esm/collapsible/root/CollapsibleRoot.d.ts",
			"qualifiedName": "CollapsibleRoot.Props.render"
		},
		"383": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "open"
		},
		"384": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "defaultOpen"
		},
		"385": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "onOpenChange"
		},
		"386": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "__type"
		},
		"387": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "__type"
		},
		"388": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "open"
		},
		"389": {
			"sourceFileName": "build/esm/collapsible/root/useCollapsibleRoot.d.ts",
			"qualifiedName": "disabled"
		},
		"390": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"391": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"392": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"393": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"394": {
			"sourceFileName": "build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
			"qualifiedName": "CollapsibleTrigger"
		},
		"395": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "CollapsibleTrigger"
		},
		"396": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"397": {
			"sourceFileName": "build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
			"qualifiedName": "CollapsibleTrigger"
		},
		"398": {
			"sourceFileName": "build/esm/collapsible/trigger/CollapsibleTrigger.d.ts",
			"qualifiedName": "CollapsibleTrigger.Props"
		},
		"399": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"400": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"401": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"402": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"403": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"404": {
			"sourceFileName": "build/esm/collapsible/panel/CollapsiblePanel.d.ts",
			"qualifiedName": "CollapsiblePanel"
		},
		"405": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "CollapsiblePanel"
		},
		"406": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"407": {
			"sourceFileName": "build/esm/collapsible/panel/CollapsiblePanel.d.ts",
			"qualifiedName": "CollapsiblePanel"
		},
		"408": {
			"sourceFileName": "build/esm/collapsible/panel/CollapsiblePanel.d.ts",
			"qualifiedName": "CollapsiblePanel.Props"
		},
		"409": {
			"sourceFileName": "build/esm/collapsible/panel/CollapsiblePanel.d.ts",
			"qualifiedName": "CollapsiblePanel.Props.hiddenUntilFound"
		},
		"410": {
			"sourceFileName": "build/esm/collapsible/panel/CollapsiblePanel.d.ts",
			"qualifiedName": "CollapsiblePanel.Props.keepMounted"
		},
		"411": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"412": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"413": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"414": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"415": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"416": {
			"sourceFileName": "build/esm/dialog/index.parts.d.ts",
			"qualifiedName": ""
		},
		"417": {
			"sourceFileName": "build/esm/dialog/backdrop/DialogBackdrop.d.ts",
			"qualifiedName": "DialogBackdrop"
		},
		"418": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "DialogBackdrop"
		},
		"419": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"420": {
			"sourceFileName": "build/esm/dialog/backdrop/DialogBackdrop.d.ts",
			"qualifiedName": "DialogBackdrop"
		},
		"421": {
			"sourceFileName": "build/esm/dialog/backdrop/DialogBackdrop.d.ts",
			"qualifiedName": "DialogBackdrop.Props"
		},
		"422": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"423": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"424": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"425": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"426": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"427": {
			"sourceFileName": "build/esm/dialog/backdrop/DialogBackdrop.d.ts",
			"qualifiedName": "DialogBackdrop.State"
		},
		"428": {
			"sourceFileName": "build/esm/dialog/backdrop/DialogBackdrop.d.ts",
			"qualifiedName": "DialogBackdrop.State.open"
		},
		"429": {
			"sourceFileName": "build/esm/dialog/backdrop/DialogBackdrop.d.ts",
			"qualifiedName": "DialogBackdrop.State.transitionStatus"
		},
		"430": {
			"sourceFileName": "build/esm/dialog/close/DialogClose.d.ts",
			"qualifiedName": "DialogClose"
		},
		"431": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "DialogClose"
		},
		"432": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"433": {
			"sourceFileName": "build/esm/dialog/close/DialogClose.d.ts",
			"qualifiedName": "DialogClose"
		},
		"434": {
			"sourceFileName": "build/esm/dialog/close/DialogClose.d.ts",
			"qualifiedName": "DialogClose.Props"
		},
		"435": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"436": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"437": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"438": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"439": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"440": {
			"sourceFileName": "build/esm/dialog/close/DialogClose.d.ts",
			"qualifiedName": "DialogClose.State"
		},
		"441": {
			"sourceFileName": "build/esm/dialog/close/DialogClose.d.ts",
			"qualifiedName": "DialogClose.State.disabled"
		},
		"442": {
			"sourceFileName": "build/esm/dialog/description/DialogDescription.d.ts",
			"qualifiedName": "DialogDescription"
		},
		"443": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "DialogDescription"
		},
		"444": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"445": {
			"sourceFileName": "build/esm/dialog/description/DialogDescription.d.ts",
			"qualifiedName": "DialogDescription"
		},
		"446": {
			"sourceFileName": "build/esm/dialog/description/DialogDescription.d.ts",
			"qualifiedName": "DialogDescription.Props"
		},
		"447": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"448": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"449": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"450": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"451": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"452": {
			"sourceFileName": "build/esm/dialog/description/DialogDescription.d.ts",
			"qualifiedName": "DialogDescription.State"
		},
		"453": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup"
		},
		"454": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "DialogPopup"
		},
		"455": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"456": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup"
		},
		"457": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup.Props"
		},
		"458": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup.Props.initialFocus"
		},
		"459": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "__type"
		},
		"460": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "__type"
		},
		"461": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "interactionType"
		},
		"462": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup.Props.finalFocus"
		},
		"463": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"464": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"465": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"466": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"467": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"468": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup.State"
		},
		"469": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup.State.open"
		},
		"470": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup.State.transitionStatus"
		},
		"471": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup.State.nested"
		},
		"472": {
			"sourceFileName": "build/esm/dialog/popup/DialogPopup.d.ts",
			"qualifiedName": "DialogPopup.State.hasNestedDialogs"
		},
		"473": {
			"sourceFileName": "build/esm/dialog/portal/DialogPortal.d.ts",
			"qualifiedName": "DialogPortal"
		},
		"474": {
			"sourceFileName": "build/esm/dialog/portal/DialogPortal.d.ts",
			"qualifiedName": "DialogPortal"
		},
		"475": {
			"sourceFileName": "build/esm/dialog/portal/DialogPortal.d.ts",
			"qualifiedName": "props"
		},
		"476": {
			"sourceFileName": "build/esm/dialog/portal/DialogPortal.d.ts",
			"qualifiedName": "DialogPortal.propTypes"
		},
		"477": {
			"sourceFileName": "build/esm/dialog/root/DialogRoot.d.ts",
			"qualifiedName": "DialogRoot"
		},
		"478": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "DialogRoot"
		},
		"479": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"480": {
			"sourceFileName": "build/esm/dialog/root/DialogRoot.d.ts",
			"qualifiedName": "DialogRoot"
		},
		"481": {
			"sourceFileName": "build/esm/dialog/root/DialogRoot.d.ts",
			"qualifiedName": "DialogRoot.Props"
		},
		"482": {
			"sourceFileName": "build/esm/dialog/root/DialogRoot.d.ts",
			"qualifiedName": "DialogRoot.Props.children"
		},
		"483": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "SharedParameters.open"
		},
		"484": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "SharedParameters.defaultOpen"
		},
		"485": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "SharedParameters.modal"
		},
		"486": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "SharedParameters.onOpenChange"
		},
		"487": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"488": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"489": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "open"
		},
		"490": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "event"
		},
		"491": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "reason"
		},
		"492": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "SharedParameters.onOpenChangeComplete"
		},
		"493": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"494": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"495": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "open"
		},
		"496": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "SharedParameters.dismissible"
		},
		"497": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "SharedParameters.actionsRef"
		},
		"498": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"499": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type.unmount"
		},
		"500": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"501": {
			"sourceFileName": "build/esm/dialog/root/useDialogRoot.d.ts",
			"qualifiedName": "__type"
		},
		"502": {
			"sourceFileName": "build/esm/dialog/root/DialogRoot.d.ts",
			"qualifiedName": "DialogRoot.Actions"
		},
		"503": {
			"sourceFileName": "build/esm/dialog/title/DialogTitle.d.ts",
			"qualifiedName": "DialogTitle"
		},
		"504": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "DialogTitle"
		},
		"505": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"506": {
			"sourceFileName": "build/esm/dialog/title/DialogTitle.d.ts",
			"qualifiedName": "DialogTitle"
		},
		"507": {
			"sourceFileName": "build/esm/dialog/title/DialogTitle.d.ts",
			"qualifiedName": "DialogTitle.Props"
		},
		"508": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"509": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"510": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"511": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"512": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"513": {
			"sourceFileName": "build/esm/dialog/title/DialogTitle.d.ts",
			"qualifiedName": "DialogTitle.State"
		},
		"514": {
			"sourceFileName": "build/esm/dialog/trigger/DialogTrigger.d.ts",
			"qualifiedName": "DialogTrigger"
		},
		"515": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "DialogTrigger"
		},
		"516": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"517": {
			"sourceFileName": "build/esm/dialog/trigger/DialogTrigger.d.ts",
			"qualifiedName": "DialogTrigger"
		},
		"518": {
			"sourceFileName": "build/esm/dialog/trigger/DialogTrigger.d.ts",
			"qualifiedName": "DialogTrigger.Props"
		},
		"519": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"520": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"521": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"522": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"523": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"524": {
			"sourceFileName": "build/esm/dialog/trigger/DialogTrigger.d.ts",
			"qualifiedName": "DialogTrigger.State"
		},
		"525": {
			"sourceFileName": "build/esm/dialog/trigger/DialogTrigger.d.ts",
			"qualifiedName": "DialogTrigger.State.disabled"
		},
		"526": {
			"sourceFileName": "build/esm/dialog/trigger/DialogTrigger.d.ts",
			"qualifiedName": "DialogTrigger.State.open"
		},
		"527": {
			"sourceFileName": "build/esm/direction-provider/DirectionProvider.d.ts",
			"qualifiedName": "DirectionProvider"
		},
		"528": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "DirectionProvider"
		},
		"529": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"530": {
			"sourceFileName": "build/esm/direction-provider/DirectionProvider.d.ts",
			"qualifiedName": "DirectionProvider"
		},
		"531": {
			"sourceFileName": "build/esm/direction-provider/DirectionProvider.d.ts",
			"qualifiedName": "DirectionProvider.Props"
		},
		"532": {
			"sourceFileName": "build/esm/direction-provider/DirectionProvider.d.ts",
			"qualifiedName": "DirectionProvider.Props.children"
		},
		"533": {
			"sourceFileName": "build/esm/direction-provider/DirectionProvider.d.ts",
			"qualifiedName": "DirectionProvider.Props.direction"
		},
		"534": {
			"sourceFileName": "build/esm/direction-provider/DirectionContext.d.ts",
			"qualifiedName": "TextDirection"
		},
		"535": {
			"sourceFileName": "build/esm/field/index.parts.d.ts",
			"qualifiedName": ""
		},
		"536": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot"
		},
		"537": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "FieldRoot"
		},
		"538": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"539": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot"
		},
		"540": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State"
		},
		"541": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.disabled"
		},
		"542": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"543": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"544": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"545": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"546": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"547": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.Props"
		},
		"548": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.Props.disabled"
		},
		"549": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.Props.name"
		},
		"550": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.Props.validate"
		},
		"551": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type"
		},
		"552": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type"
		},
		"553": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "value"
		},
		"554": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.Props.validationMode"
		},
		"555": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.Props.validationDebounceTime"
		},
		"556": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.Props.invalid"
		},
		"557": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"558": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"559": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"560": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"561": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"562": {
			"sourceFileName": "build/esm/field/label/FieldLabel.d.ts",
			"qualifiedName": "FieldLabel"
		},
		"563": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "FieldLabel"
		},
		"564": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"565": {
			"sourceFileName": "build/esm/field/label/FieldLabel.d.ts",
			"qualifiedName": "FieldLabel"
		},
		"566": {
			"sourceFileName": "build/esm/field/label/FieldLabel.d.ts",
			"qualifiedName": "FieldLabel.State"
		},
		"567": {
			"sourceFileName": "build/esm/field/label/FieldLabel.d.ts",
			"qualifiedName": "FieldLabel.Props"
		},
		"568": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"569": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"570": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"571": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"572": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"573": {
			"sourceFileName": "build/esm/field/error/FieldError.d.ts",
			"qualifiedName": "FieldError"
		},
		"574": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "FieldError"
		},
		"575": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"576": {
			"sourceFileName": "build/esm/field/error/FieldError.d.ts",
			"qualifiedName": "FieldError"
		},
		"577": {
			"sourceFileName": "build/esm/field/error/FieldError.d.ts",
			"qualifiedName": "FieldError.State"
		},
		"578": {
			"sourceFileName": "build/esm/field/error/FieldError.d.ts",
			"qualifiedName": "FieldError.Props"
		},
		"579": {
			"sourceFileName": "build/esm/field/error/FieldError.d.ts",
			"qualifiedName": "FieldError.Props.match"
		},
		"580": {
			"sourceFileName": "build/esm/field/error/FieldError.d.ts",
			"qualifiedName": "FieldError.Props.forceShow"
		},
		"581": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"582": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"583": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"584": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"585": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"586": {
			"sourceFileName": "build/esm/field/description/FieldDescription.d.ts",
			"qualifiedName": "FieldDescription"
		},
		"587": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "FieldDescription"
		},
		"588": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"589": {
			"sourceFileName": "build/esm/field/description/FieldDescription.d.ts",
			"qualifiedName": "FieldDescription"
		},
		"590": {
			"sourceFileName": "build/esm/field/description/FieldDescription.d.ts",
			"qualifiedName": "FieldDescription.State"
		},
		"591": {
			"sourceFileName": "build/esm/field/description/FieldDescription.d.ts",
			"qualifiedName": "FieldDescription.Props"
		},
		"592": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"593": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"594": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"595": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"596": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"597": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "FieldControl"
		},
		"598": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "FieldControl"
		},
		"599": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"600": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "FieldControl"
		},
		"601": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "FieldControl.State"
		},
		"602": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "FieldControl.Props"
		},
		"603": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "FieldControl.Props.onValueChange"
		},
		"604": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "__type"
		},
		"605": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "__type"
		},
		"606": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "value"
		},
		"607": {
			"sourceFileName": "build/esm/field/control/FieldControl.d.ts",
			"qualifiedName": "event"
		},
		"608": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"609": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"610": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"611": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"612": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"613": {
			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
			"qualifiedName": "FieldValidity"
		},
		"614": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "FieldValidity"
		},
		"615": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"616": {
			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
			"qualifiedName": "FieldValidity"
		},
		"617": {
			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
			"qualifiedName": "FieldValidity.State"
		},
		"618": {
			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
			"qualifiedName": "FieldValidity.Props"
		},
		"619": {
			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
			"qualifiedName": "FieldValidity.Props.children"
		},
		"620": {
			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
			"qualifiedName": "__type"
		},
		"621": {
			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
			"qualifiedName": "__type"
		},
		"622": {
			"sourceFileName": "build/esm/field/validity/FieldValidity.d.ts",
			"qualifiedName": "state"
		},
		"623": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldValidityData"
		},
		"624": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldValidityData.state"
		},
		"625": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type"
		},
		"626": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.badInput"
		},
		"627": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.customError"
		},
		"628": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.patternMismatch"
		},
		"629": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.rangeOverflow"
		},
		"630": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.rangeUnderflow"
		},
		"631": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.stepMismatch"
		},
		"632": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.tooLong"
		},
		"633": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.tooShort"
		},
		"634": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.typeMismatch"
		},
		"635": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.valueMissing"
		},
		"636": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "__type.valid"
		},
		"637": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldValidityData.error"
		},
		"638": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldValidityData.errors"
		},
		"639": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldValidityData.value"
		},
		"640": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldValidityData.initialValue"
		},
		"641": {
			"sourceFileName": "build/esm/fieldset/index.parts.d.ts",
			"qualifiedName": ""
		},
		"642": {
			"sourceFileName": "build/esm/fieldset/root/FieldsetRoot.d.ts",
			"qualifiedName": "FieldsetRoot"
		},
		"643": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "FieldsetRoot"
		},
		"644": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"645": {
			"sourceFileName": "build/esm/fieldset/root/FieldsetRoot.d.ts",
			"qualifiedName": "FieldsetRoot"
		},
		"646": {
			"sourceFileName": "build/esm/fieldset/root/FieldsetRoot.d.ts",
			"qualifiedName": "FieldsetRoot.State"
		},
		"647": {
			"sourceFileName": "build/esm/fieldset/root/FieldsetRoot.d.ts",
			"qualifiedName": "__type"
		},
		"648": {
			"sourceFileName": "build/esm/fieldset/root/FieldsetRoot.d.ts",
			"qualifiedName": "__type.disabled"
		},
		"649": {
			"sourceFileName": "build/esm/fieldset/root/FieldsetRoot.d.ts",
			"qualifiedName": "FieldsetRoot.Props"
		},
		"650": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"651": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"652": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"653": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"654": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"655": {
			"sourceFileName": "build/esm/fieldset/legend/FieldsetLegend.d.ts",
			"qualifiedName": "FieldsetLegend"
		},
		"656": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "FieldsetLegend"
		},
		"657": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"658": {
			"sourceFileName": "build/esm/fieldset/legend/FieldsetLegend.d.ts",
			"qualifiedName": "FieldsetLegend"
		},
		"659": {
			"sourceFileName": "build/esm/fieldset/legend/FieldsetLegend.d.ts",
			"qualifiedName": "FieldsetLegend.State"
		},
		"660": {
			"sourceFileName": "build/esm/fieldset/legend/FieldsetLegend.d.ts",
			"qualifiedName": "FieldsetLegend.State.disabled"
		},
		"661": {
			"sourceFileName": "build/esm/fieldset/legend/FieldsetLegend.d.ts",
			"qualifiedName": "FieldsetLegend.Props"
		},
		"662": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"663": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"664": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"665": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"666": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"667": {
			"sourceFileName": "build/esm/form/Form.d.ts",
			"qualifiedName": "Form"
		},
		"668": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "Form"
		},
		"669": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"670": {
			"sourceFileName": "build/esm/form/Form.d.ts",
			"qualifiedName": "Form"
		},
		"671": {
			"sourceFileName": "build/esm/form/Form.d.ts",
			"qualifiedName": "Form.Props"
		},
		"672": {
			"sourceFileName": "build/esm/form/Form.d.ts",
			"qualifiedName": "Form.Props.errors"
		},
		"673": {
			"sourceFileName": "build/esm/form/Form.d.ts",
			"qualifiedName": "Form.Props.onClearErrors"
		},
		"674": {
			"sourceFileName": "build/esm/form/FormContext.d.ts",
			"qualifiedName": "__type"
		},
		"675": {
			"sourceFileName": "build/esm/form/FormContext.d.ts",
			"qualifiedName": "__type"
		},
		"676": {
			"sourceFileName": "build/esm/form/FormContext.d.ts",
			"qualifiedName": "errors"
		},
		"677": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"678": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"679": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"680": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"681": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"682": {
			"sourceFileName": "build/esm/form/Form.d.ts",
			"qualifiedName": "Form.State"
		},
		"683": {
			"sourceFileName": "build/esm/input/Input.d.ts",
			"qualifiedName": "Input"
		},
		"684": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "Input"
		},
		"685": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"686": {
			"sourceFileName": "build/esm/input/Input.d.ts",
			"qualifiedName": "Input"
		},
		"687": {
			"sourceFileName": "build/esm/input/Input.d.ts",
			"qualifiedName": "Input.Props"
		},
		"688": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"689": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"690": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"691": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"692": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"693": {
			"sourceFileName": "build/esm/input/Input.d.ts",
			"qualifiedName": "Input.State"
		},
		"694": {
			"sourceFileName": "build/esm/menu/index.parts.d.ts",
			"qualifiedName": ""
		},
		"695": {
			"sourceFileName": "build/esm/menu/arrow/MenuArrow.d.ts",
			"qualifiedName": "MenuArrow"
		},
		"696": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuArrow"
		},
		"697": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"698": {
			"sourceFileName": "build/esm/menu/arrow/MenuArrow.d.ts",
			"qualifiedName": "MenuArrow"
		},
		"699": {
			"sourceFileName": "build/esm/menu/arrow/MenuArrow.d.ts",
			"qualifiedName": "MenuArrow.State"
		},
		"700": {
			"sourceFileName": "build/esm/menu/arrow/MenuArrow.d.ts",
			"qualifiedName": "MenuArrow.State.open"
		},
		"701": {
			"sourceFileName": "build/esm/menu/arrow/MenuArrow.d.ts",
			"qualifiedName": "MenuArrow.State.side"
		},
		"702": {
			"sourceFileName": "build/esm/menu/arrow/MenuArrow.d.ts",
			"qualifiedName": "MenuArrow.State.align"
		},
		"703": {
			"sourceFileName": "build/esm/menu/arrow/MenuArrow.d.ts",
			"qualifiedName": "MenuArrow.State.uncentered"
		},
		"704": {
			"sourceFileName": "build/esm/menu/arrow/MenuArrow.d.ts",
			"qualifiedName": "MenuArrow.Props"
		},
		"705": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"706": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"707": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"708": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"709": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"710": {
			"sourceFileName": "build/esm/menu/backdrop/MenuBackdrop.d.ts",
			"qualifiedName": "MenuBackdrop"
		},
		"711": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuBackdrop"
		},
		"712": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"713": {
			"sourceFileName": "build/esm/menu/backdrop/MenuBackdrop.d.ts",
			"qualifiedName": "MenuBackdrop"
		},
		"714": {
			"sourceFileName": "build/esm/menu/backdrop/MenuBackdrop.d.ts",
			"qualifiedName": "MenuBackdrop.State"
		},
		"715": {
			"sourceFileName": "build/esm/menu/backdrop/MenuBackdrop.d.ts",
			"qualifiedName": "MenuBackdrop.State.open"
		},
		"716": {
			"sourceFileName": "build/esm/menu/backdrop/MenuBackdrop.d.ts",
			"qualifiedName": "MenuBackdrop.State.transitionStatus"
		},
		"717": {
			"sourceFileName": "build/esm/menu/backdrop/MenuBackdrop.d.ts",
			"qualifiedName": "MenuBackdrop.Props"
		},
		"718": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"719": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"720": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"721": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"722": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"723": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem"
		},
		"724": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuCheckboxItem"
		},
		"725": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"726": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem"
		},
		"727": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.State"
		},
		"728": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "__type"
		},
		"729": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "__type.disabled"
		},
		"730": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "__type.highlighted"
		},
		"731": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "__type.checked"
		},
		"732": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props"
		},
		"733": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props.checked"
		},
		"734": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props.defaultChecked"
		},
		"735": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props.onCheckedChange"
		},
		"736": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "__type"
		},
		"737": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "__type"
		},
		"738": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "checked"
		},
		"739": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "event"
		},
		"740": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props.children"
		},
		"741": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props.onClick"
		},
		"742": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props.disabled"
		},
		"743": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props.label"
		},
		"745": {
			"sourceFileName": "build/esm/menu/checkbox-item/MenuCheckboxItem.d.ts",
			"qualifiedName": "MenuCheckboxItem.Props.closeOnClick"
		},
		"746": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"747": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"748": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"749": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"750": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"751": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator"
		},
		"752": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator"
		},
		"753": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"754": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator"
		},
		"755": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator.Props"
		},
		"756": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator.Props.keepMounted"
		},
		"757": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"758": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"759": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"760": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"761": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"762": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator.State"
		},
		"763": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator.State.checked"
		},
		"764": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator.State.disabled"
		},
		"765": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator.State.highlighted"
		},
		"766": {
			"sourceFileName": "build/esm/menu/checkbox-item-indicator/MenuCheckboxItemIndicator.d.ts",
			"qualifiedName": "MenuCheckboxItemIndicator.State.transitionStatus"
		},
		"767": {
			"sourceFileName": "build/esm/menu/group/MenuGroup.d.ts",
			"qualifiedName": "MenuGroup"
		},
		"768": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuGroup"
		},
		"769": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"770": {
			"sourceFileName": "build/esm/menu/group/MenuGroup.d.ts",
			"qualifiedName": "MenuGroup"
		},
		"771": {
			"sourceFileName": "build/esm/menu/group/MenuGroup.d.ts",
			"qualifiedName": "MenuGroup.Props"
		},
		"772": {
			"sourceFileName": "build/esm/menu/group/MenuGroup.d.ts",
			"qualifiedName": "MenuGroup.Props.children"
		},
		"773": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"774": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"775": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"776": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"777": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"778": {
			"sourceFileName": "build/esm/menu/group/MenuGroup.d.ts",
			"qualifiedName": "MenuGroup.State"
		},
		"779": {
			"sourceFileName": "build/esm/menu/group-label/MenuGroupLabel.d.ts",
			"qualifiedName": "MenuGroupLabel"
		},
		"780": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuGroupLabel"
		},
		"781": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"782": {
			"sourceFileName": "build/esm/menu/group-label/MenuGroupLabel.d.ts",
			"qualifiedName": "MenuGroupLabel"
		},
		"783": {
			"sourceFileName": "build/esm/menu/group-label/MenuGroupLabel.d.ts",
			"qualifiedName": "MenuGroupLabel.Props"
		},
		"784": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"785": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"786": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"787": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"788": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"789": {
			"sourceFileName": "build/esm/menu/group-label/MenuGroupLabel.d.ts",
			"qualifiedName": "MenuGroupLabel.State"
		},
		"790": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem"
		},
		"791": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuItem"
		},
		"792": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"793": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem"
		},
		"794": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem.State"
		},
		"795": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "__type"
		},
		"796": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "__type.disabled"
		},
		"797": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "__type.highlighted"
		},
		"798": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem.Props"
		},
		"799": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem.Props.children"
		},
		"800": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem.Props.onClick"
		},
		"801": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem.Props.disabled"
		},
		"802": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem.Props.label"
		},
		"804": {
			"sourceFileName": "build/esm/menu/item/MenuItem.d.ts",
			"qualifiedName": "MenuItem.Props.closeOnClick"
		},
		"805": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"806": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"807": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"808": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"809": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"810": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "MenuPopup"
		},
		"811": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuPopup"
		},
		"812": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"813": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "MenuPopup"
		},
		"814": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "MenuPopup.Props"
		},
		"815": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "MenuPopup.Props.children"
		},
		"817": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"818": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"819": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"820": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"821": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"822": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "MenuPopup.State"
		},
		"823": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "__type"
		},
		"824": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "__type.transitionStatus"
		},
		"825": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "__type.side"
		},
		"826": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "__type.align"
		},
		"827": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "__type.open"
		},
		"828": {
			"sourceFileName": "build/esm/menu/popup/MenuPopup.d.ts",
			"qualifiedName": "__type.nested"
		},
		"829": {
			"sourceFileName": "build/esm/menu/portal/MenuPortal.d.ts",
			"qualifiedName": "MenuPortal"
		},
		"830": {
			"sourceFileName": "build/esm/menu/portal/MenuPortal.d.ts",
			"qualifiedName": "MenuPortal"
		},
		"831": {
			"sourceFileName": "build/esm/menu/portal/MenuPortal.d.ts",
			"qualifiedName": "props"
		},
		"832": {
			"sourceFileName": "build/esm/menu/portal/MenuPortal.d.ts",
			"qualifiedName": "MenuPortal.propTypes"
		},
		"833": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner"
		},
		"834": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuPositioner"
		},
		"835": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"836": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner"
		},
		"837": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner.State"
		},
		"838": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner.State.open"
		},
		"839": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner.State.side"
		},
		"840": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner.State.align"
		},
		"841": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner.State.anchorHidden"
		},
		"842": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner.State.nested"
		},
		"843": {
			"sourceFileName": "build/esm/menu/positioner/MenuPositioner.d.ts",
			"qualifiedName": "MenuPositioner.Props"
		},
		"844": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.anchor"
		},
		"845": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"846": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"847": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.open"
		},
		"848": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.positionMethod"
		},
		"849": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.side"
		},
		"850": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sideOffset"
		},
		"851": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.align"
		},
		"852": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.alignOffset"
		},
		"853": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionBoundary"
		},
		"854": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionPadding"
		},
		"855": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sticky"
		},
		"856": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.arrowPadding"
		},
		"857": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.trackAnchor"
		},
		"858": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"859": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"860": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"861": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"862": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"863": {
			"sourceFileName": "build/esm/menu/radio-group/MenuRadioGroup.d.ts",
			"qualifiedName": "MemoizedMenuRadioGroup"
		},
		"864": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MemoizedMenuRadioGroup"
		},
		"865": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"866": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem"
		},
		"867": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuRadioItem"
		},
		"868": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"869": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem"
		},
		"870": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem.State"
		},
		"871": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "__type"
		},
		"872": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "__type.disabled"
		},
		"873": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "__type.highlighted"
		},
		"874": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "__type.checked"
		},
		"875": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem.Props"
		},
		"876": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem.Props.value"
		},
		"877": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem.Props.children"
		},
		"878": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem.Props.onClick"
		},
		"879": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem.Props.disabled"
		},
		"880": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem.Props.label"
		},
		"882": {
			"sourceFileName": "build/esm/menu/radio-item/MenuRadioItem.d.ts",
			"qualifiedName": "MenuRadioItem.Props.closeOnClick"
		},
		"883": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"884": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"885": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"886": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"887": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"888": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator"
		},
		"889": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuRadioItemIndicator"
		},
		"890": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"891": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator"
		},
		"892": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator.Props"
		},
		"893": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator.Props.keepMounted"
		},
		"894": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"895": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"896": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"897": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"898": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"899": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator.State"
		},
		"900": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator.State.checked"
		},
		"901": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator.State.disabled"
		},
		"902": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator.State.highlighted"
		},
		"903": {
			"sourceFileName": "build/esm/menu/radio-item-indicator/MenuRadioItemIndicator.d.ts",
			"qualifiedName": "MenuRadioItemIndicator.State.transitionStatus"
		},
		"904": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot"
		},
		"905": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuRoot"
		},
		"906": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"907": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot"
		},
		"908": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props"
		},
		"909": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.children"
		},
		"910": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.defaultOpen"
		},
		"911": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.loop"
		},
		"912": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.modal"
		},
		"913": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.onOpenChange"
		},
		"914": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"915": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"916": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "open"
		},
		"917": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "event"
		},
		"918": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "reason"
		},
		"919": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.onOpenChangeComplete"
		},
		"920": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"921": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"922": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "open"
		},
		"923": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.open"
		},
		"924": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.orientation"
		},
		"925": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.disabled"
		},
		"926": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.closeParentOnEsc"
		},
		"927": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.delay"
		},
		"928": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.openOnHover"
		},
		"929": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Props.actionsRef"
		},
		"930": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"931": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type.unmount"
		},
		"932": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"933": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"934": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Actions"
		},
		"935": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "MenuRoot.Actions.unmount"
		},
		"936": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"937": {
			"sourceFileName": "build/esm/menu/root/MenuRoot.d.ts",
			"qualifiedName": "__type"
		},
		"938": {
			"sourceFileName": "build/esm/menu/trigger/MenuTrigger.d.ts",
			"qualifiedName": "MenuTrigger"
		},
		"939": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuTrigger"
		},
		"940": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"941": {
			"sourceFileName": "build/esm/menu/trigger/MenuTrigger.d.ts",
			"qualifiedName": "MenuTrigger"
		},
		"942": {
			"sourceFileName": "build/esm/menu/trigger/MenuTrigger.d.ts",
			"qualifiedName": "MenuTrigger.Props"
		},
		"943": {
			"sourceFileName": "build/esm/menu/trigger/MenuTrigger.d.ts",
			"qualifiedName": "MenuTrigger.Props.children"
		},
		"944": {
			"sourceFileName": "build/esm/menu/trigger/MenuTrigger.d.ts",
			"qualifiedName": "MenuTrigger.Props.disabled"
		},
		"945": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"946": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"947": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"948": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"949": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"950": {
			"sourceFileName": "build/esm/menu/trigger/MenuTrigger.d.ts",
			"qualifiedName": "MenuTrigger.State"
		},
		"951": {
			"sourceFileName": "build/esm/menu/trigger/MenuTrigger.d.ts",
			"qualifiedName": "__type"
		},
		"952": {
			"sourceFileName": "build/esm/menu/trigger/MenuTrigger.d.ts",
			"qualifiedName": "__type.open"
		},
		"953": {
			"sourceFileName": "build/esm/separator/Separator.d.ts",
			"qualifiedName": "Separator"
		},
		"954": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "Separator"
		},
		"955": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"956": {
			"sourceFileName": "build/esm/separator/Separator.d.ts",
			"qualifiedName": "Separator"
		},
		"957": {
			"sourceFileName": "build/esm/separator/Separator.d.ts",
			"qualifiedName": "Separator.Props"
		},
		"958": {
			"sourceFileName": "build/esm/separator/Separator.d.ts",
			"qualifiedName": "Separator.Props.orientation"
		},
		"959": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"960": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"961": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"962": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"963": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"964": {
			"sourceFileName": "build/esm/separator/Separator.d.ts",
			"qualifiedName": "Separator.State"
		},
		"965": {
			"sourceFileName": "build/esm/separator/Separator.d.ts",
			"qualifiedName": "Separator.State.orientation"
		},
		"966": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger"
		},
		"967": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MenuSubmenuTrigger"
		},
		"968": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"969": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger"
		},
		"970": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger.Props"
		},
		"971": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger.Props.children"
		},
		"972": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger.Props.onClick"
		},
		"973": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger.Props.label"
		},
		"975": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"976": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"977": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"978": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"979": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"980": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger.State"
		},
		"981": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger.State.disabled"
		},
		"982": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger.State.highlighted"
		},
		"983": {
			"sourceFileName": "build/esm/menu/submenu-trigger/MenuSubmenuTrigger.d.ts",
			"qualifiedName": "MenuSubmenuTrigger.State.open"
		},
		"984": {
			"sourceFileName": "build/esm/number-field/index.parts.d.ts",
			"qualifiedName": ""
		},
		"985": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot"
		},
		"986": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NumberFieldRoot"
		},
		"987": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"988": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot"
		},
		"989": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.Props"
		},
		"990": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.id"
		},
		"991": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.min"
		},
		"992": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.max"
		},
		"993": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.smallStep"
		},
		"994": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.step"
		},
		"995": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.largeStep"
		},
		"996": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.required"
		},
		"997": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.disabled"
		},
		"998": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.invalid"
		},
		"999": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.autoFocus"
		},
		"1000": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.readOnly"
		},
		"1001": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.name"
		},
		"1002": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.value"
		},
		"1003": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.defaultValue"
		},
		"1004": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.allowWheelScrub"
		},
		"1005": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.format"
		},
		"1006": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "useNumberFieldRoot.Parameters.onValueChange"
		},
		"1007": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1008": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1009": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "value"
		},
		"1010": {
			"sourceFileName": "build/esm/number-field/root/useNumberFieldRoot.d.ts",
			"qualifiedName": "event"
		},
		"1011": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"1012": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1013": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1014": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1015": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"1016": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State"
		},
		"1017": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.value"
		},
		"1018": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.inputValue"
		},
		"1019": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.required"
		},
		"1020": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.disabled"
		},
		"1021": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.invalid"
		},
		"1022": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.readOnly"
		},
		"1023": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.scrubbing"
		},
		"1024": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1025": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1026": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1027": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1028": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1029": {
			"sourceFileName": "build/esm/number-field/group/NumberFieldGroup.d.ts",
			"qualifiedName": "NumberFieldGroup"
		},
		"1030": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NumberFieldGroup"
		},
		"1031": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1032": {
			"sourceFileName": "build/esm/number-field/group/NumberFieldGroup.d.ts",
			"qualifiedName": "NumberFieldGroup"
		},
		"1033": {
			"sourceFileName": "build/esm/number-field/group/NumberFieldGroup.d.ts",
			"qualifiedName": "NumberFieldGroup.State"
		},
		"1034": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.value"
		},
		"1035": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.inputValue"
		},
		"1036": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.required"
		},
		"1037": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.disabled"
		},
		"1038": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.invalid"
		},
		"1039": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.readOnly"
		},
		"1040": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.scrubbing"
		},
		"1041": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1042": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1043": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1044": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1045": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1046": {
			"sourceFileName": "build/esm/number-field/group/NumberFieldGroup.d.ts",
			"qualifiedName": "NumberFieldGroup.Props"
		},
		"1047": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1048": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1049": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1050": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1051": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1052": {
			"sourceFileName": "build/esm/number-field/increment/NumberFieldIncrement.d.ts",
			"qualifiedName": "NumberFieldIncrement"
		},
		"1053": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NumberFieldIncrement"
		},
		"1054": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1055": {
			"sourceFileName": "build/esm/number-field/increment/NumberFieldIncrement.d.ts",
			"qualifiedName": "NumberFieldIncrement"
		},
		"1056": {
			"sourceFileName": "build/esm/number-field/increment/NumberFieldIncrement.d.ts",
			"qualifiedName": "NumberFieldIncrement.State"
		},
		"1057": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.value"
		},
		"1058": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.inputValue"
		},
		"1059": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.required"
		},
		"1060": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.disabled"
		},
		"1061": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.invalid"
		},
		"1062": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.readOnly"
		},
		"1063": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.scrubbing"
		},
		"1064": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1065": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1066": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1067": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1068": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1069": {
			"sourceFileName": "build/esm/number-field/increment/NumberFieldIncrement.d.ts",
			"qualifiedName": "NumberFieldIncrement.Props"
		},
		"1070": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1071": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1072": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1073": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1074": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1075": {
			"sourceFileName": "build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
			"qualifiedName": "NumberFieldDecrement"
		},
		"1076": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NumberFieldDecrement"
		},
		"1077": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1078": {
			"sourceFileName": "build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
			"qualifiedName": "NumberFieldDecrement"
		},
		"1079": {
			"sourceFileName": "build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
			"qualifiedName": "NumberFieldDecrement.State"
		},
		"1080": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.value"
		},
		"1081": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.inputValue"
		},
		"1082": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.required"
		},
		"1083": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.disabled"
		},
		"1084": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.invalid"
		},
		"1085": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.readOnly"
		},
		"1086": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.scrubbing"
		},
		"1087": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1088": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1089": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1090": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1091": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1092": {
			"sourceFileName": "build/esm/number-field/decrement/NumberFieldDecrement.d.ts",
			"qualifiedName": "NumberFieldDecrement.Props"
		},
		"1093": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1094": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1095": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1096": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1097": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1098": {
			"sourceFileName": "build/esm/number-field/input/NumberFieldInput.d.ts",
			"qualifiedName": "NumberFieldInput"
		},
		"1099": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NumberFieldInput"
		},
		"1100": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1101": {
			"sourceFileName": "build/esm/number-field/input/NumberFieldInput.d.ts",
			"qualifiedName": "NumberFieldInput"
		},
		"1102": {
			"sourceFileName": "build/esm/number-field/input/NumberFieldInput.d.ts",
			"qualifiedName": "NumberFieldInput.State"
		},
		"1103": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.value"
		},
		"1104": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.inputValue"
		},
		"1105": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.required"
		},
		"1106": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.disabled"
		},
		"1107": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.invalid"
		},
		"1108": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.readOnly"
		},
		"1109": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.scrubbing"
		},
		"1110": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1111": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1112": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1113": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1114": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1115": {
			"sourceFileName": "build/esm/number-field/input/NumberFieldInput.d.ts",
			"qualifiedName": "NumberFieldInput.Props"
		},
		"1116": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1117": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1118": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1119": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1120": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1121": {
			"sourceFileName": "build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
			"qualifiedName": "NumberFieldScrubArea"
		},
		"1122": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NumberFieldScrubArea"
		},
		"1123": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1124": {
			"sourceFileName": "build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
			"qualifiedName": "NumberFieldScrubArea"
		},
		"1125": {
			"sourceFileName": "build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
			"qualifiedName": "NumberFieldScrubArea.State"
		},
		"1126": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.value"
		},
		"1127": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.inputValue"
		},
		"1128": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.required"
		},
		"1129": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.disabled"
		},
		"1130": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.invalid"
		},
		"1131": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.readOnly"
		},
		"1132": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.scrubbing"
		},
		"1133": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1134": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1135": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1136": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1137": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1138": {
			"sourceFileName": "build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
			"qualifiedName": "NumberFieldScrubArea.Props"
		},
		"1139": {
			"sourceFileName": "build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
			"qualifiedName": "NumberFieldScrubArea.Props.direction"
		},
		"1140": {
			"sourceFileName": "build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
			"qualifiedName": "NumberFieldScrubArea.Props.pixelSensitivity"
		},
		"1141": {
			"sourceFileName": "build/esm/number-field/scrub-area/NumberFieldScrubArea.d.ts",
			"qualifiedName": "NumberFieldScrubArea.Props.teleportDistance"
		},
		"1142": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1143": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1144": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1145": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1146": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1147": {
			"sourceFileName": "build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
			"qualifiedName": "NumberFieldScrubAreaCursor"
		},
		"1148": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NumberFieldScrubAreaCursor"
		},
		"1149": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1150": {
			"sourceFileName": "build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
			"qualifiedName": "NumberFieldScrubAreaCursor"
		},
		"1151": {
			"sourceFileName": "build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
			"qualifiedName": "NumberFieldScrubAreaCursor.State"
		},
		"1152": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.value"
		},
		"1153": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.inputValue"
		},
		"1154": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.required"
		},
		"1155": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.disabled"
		},
		"1156": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.invalid"
		},
		"1157": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.readOnly"
		},
		"1158": {
			"sourceFileName": "build/esm/number-field/root/NumberFieldRoot.d.ts",
			"qualifiedName": "NumberFieldRoot.State.scrubbing"
		},
		"1159": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1160": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1161": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1162": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1163": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1164": {
			"sourceFileName": "build/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.d.ts",
			"qualifiedName": "NumberFieldScrubAreaCursor.Props"
		},
		"1165": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1166": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1167": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1168": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1169": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1170": {
			"sourceFileName": "build/esm/popover/index.parts.d.ts",
			"qualifiedName": ""
		},
		"1171": {
			"sourceFileName": "build/esm/popover/root/PopoverRoot.d.ts",
			"qualifiedName": "PopoverRoot"
		},
		"1172": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverRoot"
		},
		"1173": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1174": {
			"sourceFileName": "build/esm/popover/root/PopoverRoot.d.ts",
			"qualifiedName": "PopoverRoot"
		},
		"1175": {
			"sourceFileName": "build/esm/popover/root/PopoverRoot.d.ts",
			"qualifiedName": "PopoverRoot.State"
		},
		"1176": {
			"sourceFileName": "build/esm/popover/root/PopoverRoot.d.ts",
			"qualifiedName": "PopoverRoot.Props"
		},
		"1177": {
			"sourceFileName": "build/esm/popover/root/PopoverRoot.d.ts",
			"qualifiedName": "PopoverRoot.Props.children"
		},
		"1178": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "usePopoverRoot.Parameters.defaultOpen"
		},
		"1179": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "usePopoverRoot.Parameters.open"
		},
		"1180": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "usePopoverRoot.Parameters.onOpenChange"
		},
		"1181": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1182": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1183": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "open"
		},
		"1184": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "event"
		},
		"1185": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "reason"
		},
		"1186": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "usePopoverRoot.Parameters.onOpenChangeComplete"
		},
		"1187": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1188": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1189": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "open"
		},
		"1190": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "usePopoverRoot.Parameters.openOnHover"
		},
		"1191": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "usePopoverRoot.Parameters.delay"
		},
		"1192": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "usePopoverRoot.Parameters.closeDelay"
		},
		"1193": {
			"sourceFileName": "build/esm/popover/root/usePopoverRoot.d.ts",
			"qualifiedName": "usePopoverRoot.Parameters.actionsRef"
		},
		"1194": {
			"sourceFileName": "build/esm/popover/root/PopoverRoot.d.ts",
			"qualifiedName": "PopoverRoot.Actions"
		},
		"1195": {
			"sourceFileName": "build/esm/popover/trigger/PopoverTrigger.d.ts",
			"qualifiedName": "PopoverTrigger"
		},
		"1196": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverTrigger"
		},
		"1197": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1198": {
			"sourceFileName": "build/esm/popover/trigger/PopoverTrigger.d.ts",
			"qualifiedName": "PopoverTrigger"
		},
		"1199": {
			"sourceFileName": "build/esm/popover/trigger/PopoverTrigger.d.ts",
			"qualifiedName": "PopoverTrigger.State"
		},
		"1200": {
			"sourceFileName": "build/esm/popover/trigger/PopoverTrigger.d.ts",
			"qualifiedName": "PopoverTrigger.State.disabled"
		},
		"1201": {
			"sourceFileName": "build/esm/popover/trigger/PopoverTrigger.d.ts",
			"qualifiedName": "PopoverTrigger.State.open"
		},
		"1202": {
			"sourceFileName": "build/esm/popover/trigger/PopoverTrigger.d.ts",
			"qualifiedName": "PopoverTrigger.Props"
		},
		"1203": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1204": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1205": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1206": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1207": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1208": {
			"sourceFileName": "build/esm/popover/portal/PopoverPortal.d.ts",
			"qualifiedName": "PopoverPortal"
		},
		"1209": {
			"sourceFileName": "build/esm/popover/portal/PopoverPortal.d.ts",
			"qualifiedName": "PopoverPortal"
		},
		"1210": {
			"sourceFileName": "build/esm/popover/portal/PopoverPortal.d.ts",
			"qualifiedName": "props"
		},
		"1211": {
			"sourceFileName": "build/esm/popover/portal/PopoverPortal.d.ts",
			"qualifiedName": "PopoverPortal.propTypes"
		},
		"1212": {
			"sourceFileName": "build/esm/popover/positioner/PopoverPositioner.d.ts",
			"qualifiedName": "PopoverPositioner"
		},
		"1213": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverPositioner"
		},
		"1214": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1215": {
			"sourceFileName": "build/esm/popover/positioner/PopoverPositioner.d.ts",
			"qualifiedName": "PopoverPositioner"
		},
		"1216": {
			"sourceFileName": "build/esm/popover/positioner/PopoverPositioner.d.ts",
			"qualifiedName": "PopoverPositioner.State"
		},
		"1217": {
			"sourceFileName": "build/esm/popover/positioner/PopoverPositioner.d.ts",
			"qualifiedName": "PopoverPositioner.State.open"
		},
		"1218": {
			"sourceFileName": "build/esm/popover/positioner/PopoverPositioner.d.ts",
			"qualifiedName": "PopoverPositioner.State.side"
		},
		"1219": {
			"sourceFileName": "build/esm/popover/positioner/PopoverPositioner.d.ts",
			"qualifiedName": "PopoverPositioner.State.align"
		},
		"1220": {
			"sourceFileName": "build/esm/popover/positioner/PopoverPositioner.d.ts",
			"qualifiedName": "PopoverPositioner.State.anchorHidden"
		},
		"1221": {
			"sourceFileName": "build/esm/popover/positioner/PopoverPositioner.d.ts",
			"qualifiedName": "PopoverPositioner.Props"
		},
		"1222": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.anchor"
		},
		"1223": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"1224": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"1225": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.open"
		},
		"1226": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.positionMethod"
		},
		"1227": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.side"
		},
		"1228": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sideOffset"
		},
		"1229": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.align"
		},
		"1230": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.alignOffset"
		},
		"1231": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionBoundary"
		},
		"1232": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionPadding"
		},
		"1233": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sticky"
		},
		"1234": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.arrowPadding"
		},
		"1235": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.trackAnchor"
		},
		"1236": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1237": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1238": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1239": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1240": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1241": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup"
		},
		"1242": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverPopup"
		},
		"1243": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1244": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup"
		},
		"1245": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup.State"
		},
		"1246": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup.State.open"
		},
		"1247": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup.State.side"
		},
		"1248": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup.State.align"
		},
		"1249": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup.State.transitionStatus"
		},
		"1250": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup.Props"
		},
		"1251": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup.Props.initialFocus"
		},
		"1252": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "__type"
		},
		"1253": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "__type"
		},
		"1254": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "interactionType"
		},
		"1255": {
			"sourceFileName": "build/esm/popover/popup/PopoverPopup.d.ts",
			"qualifiedName": "PopoverPopup.Props.finalFocus"
		},
		"1256": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1257": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1258": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1259": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1260": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1261": {
			"sourceFileName": "build/esm/popover/arrow/PopoverArrow.d.ts",
			"qualifiedName": "PopoverArrow"
		},
		"1262": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverArrow"
		},
		"1263": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1264": {
			"sourceFileName": "build/esm/popover/arrow/PopoverArrow.d.ts",
			"qualifiedName": "PopoverArrow"
		},
		"1265": {
			"sourceFileName": "build/esm/popover/arrow/PopoverArrow.d.ts",
			"qualifiedName": "PopoverArrow.State"
		},
		"1266": {
			"sourceFileName": "build/esm/popover/arrow/PopoverArrow.d.ts",
			"qualifiedName": "PopoverArrow.State.open"
		},
		"1267": {
			"sourceFileName": "build/esm/popover/arrow/PopoverArrow.d.ts",
			"qualifiedName": "PopoverArrow.State.side"
		},
		"1268": {
			"sourceFileName": "build/esm/popover/arrow/PopoverArrow.d.ts",
			"qualifiedName": "PopoverArrow.State.align"
		},
		"1269": {
			"sourceFileName": "build/esm/popover/arrow/PopoverArrow.d.ts",
			"qualifiedName": "PopoverArrow.State.uncentered"
		},
		"1270": {
			"sourceFileName": "build/esm/popover/arrow/PopoverArrow.d.ts",
			"qualifiedName": "PopoverArrow.Props"
		},
		"1271": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1272": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1273": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1274": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1275": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1276": {
			"sourceFileName": "build/esm/popover/backdrop/PopoverBackdrop.d.ts",
			"qualifiedName": "PopoverBackdrop"
		},
		"1277": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverBackdrop"
		},
		"1278": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1279": {
			"sourceFileName": "build/esm/popover/backdrop/PopoverBackdrop.d.ts",
			"qualifiedName": "PopoverBackdrop"
		},
		"1280": {
			"sourceFileName": "build/esm/popover/backdrop/PopoverBackdrop.d.ts",
			"qualifiedName": "PopoverBackdrop.State"
		},
		"1281": {
			"sourceFileName": "build/esm/popover/backdrop/PopoverBackdrop.d.ts",
			"qualifiedName": "PopoverBackdrop.State.open"
		},
		"1282": {
			"sourceFileName": "build/esm/popover/backdrop/PopoverBackdrop.d.ts",
			"qualifiedName": "PopoverBackdrop.State.transitionStatus"
		},
		"1283": {
			"sourceFileName": "build/esm/popover/backdrop/PopoverBackdrop.d.ts",
			"qualifiedName": "PopoverBackdrop.Props"
		},
		"1284": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1285": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1286": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1287": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1288": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1289": {
			"sourceFileName": "build/esm/popover/title/PopoverTitle.d.ts",
			"qualifiedName": "PopoverTitle"
		},
		"1290": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverTitle"
		},
		"1291": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1292": {
			"sourceFileName": "build/esm/popover/title/PopoverTitle.d.ts",
			"qualifiedName": "PopoverTitle"
		},
		"1293": {
			"sourceFileName": "build/esm/popover/title/PopoverTitle.d.ts",
			"qualifiedName": "PopoverTitle.State"
		},
		"1294": {
			"sourceFileName": "build/esm/popover/title/PopoverTitle.d.ts",
			"qualifiedName": "PopoverTitle.Props"
		},
		"1295": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1296": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1297": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1298": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1299": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1300": {
			"sourceFileName": "build/esm/popover/description/PopoverDescription.d.ts",
			"qualifiedName": "PopoverDescription"
		},
		"1301": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverDescription"
		},
		"1302": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1303": {
			"sourceFileName": "build/esm/popover/description/PopoverDescription.d.ts",
			"qualifiedName": "PopoverDescription"
		},
		"1304": {
			"sourceFileName": "build/esm/popover/description/PopoverDescription.d.ts",
			"qualifiedName": "PopoverDescription.State"
		},
		"1305": {
			"sourceFileName": "build/esm/popover/description/PopoverDescription.d.ts",
			"qualifiedName": "PopoverDescription.Props"
		},
		"1306": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1307": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1308": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1309": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1310": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1311": {
			"sourceFileName": "build/esm/popover/close/PopoverClose.d.ts",
			"qualifiedName": "PopoverClose"
		},
		"1312": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PopoverClose"
		},
		"1313": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1314": {
			"sourceFileName": "build/esm/popover/close/PopoverClose.d.ts",
			"qualifiedName": "PopoverClose"
		},
		"1315": {
			"sourceFileName": "build/esm/popover/close/PopoverClose.d.ts",
			"qualifiedName": "PopoverClose.State"
		},
		"1316": {
			"sourceFileName": "build/esm/popover/close/PopoverClose.d.ts",
			"qualifiedName": "PopoverClose.Props"
		},
		"1317": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1318": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1319": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1320": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1321": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1322": {
			"sourceFileName": "build/esm/preview-card/index.parts.d.ts",
			"qualifiedName": ""
		},
		"1323": {
			"sourceFileName": "build/esm/preview-card/root/PreviewCardRoot.d.ts",
			"qualifiedName": "PreviewCardRoot"
		},
		"1324": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PreviewCardRoot"
		},
		"1325": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1326": {
			"sourceFileName": "build/esm/preview-card/root/PreviewCardRoot.d.ts",
			"qualifiedName": "PreviewCardRoot"
		},
		"1327": {
			"sourceFileName": "build/esm/preview-card/root/PreviewCardRoot.d.ts",
			"qualifiedName": "PreviewCardRoot.State"
		},
		"1328": {
			"sourceFileName": "build/esm/preview-card/root/PreviewCardRoot.d.ts",
			"qualifiedName": "PreviewCardRoot.Props"
		},
		"1329": {
			"sourceFileName": "build/esm/preview-card/root/PreviewCardRoot.d.ts",
			"qualifiedName": "PreviewCardRoot.Props.children"
		},
		"1330": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "usePreviewCardRoot.Parameters.defaultOpen"
		},
		"1331": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "usePreviewCardRoot.Parameters.open"
		},
		"1332": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "usePreviewCardRoot.Parameters.onOpenChange"
		},
		"1333": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1334": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1335": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "open"
		},
		"1336": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "event"
		},
		"1337": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "reason"
		},
		"1338": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "usePreviewCardRoot.Parameters.onOpenChangeComplete"
		},
		"1339": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1340": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1341": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "open"
		},
		"1342": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "usePreviewCardRoot.Parameters.delay"
		},
		"1343": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "usePreviewCardRoot.Parameters.closeDelay"
		},
		"1344": {
			"sourceFileName": "build/esm/preview-card/root/usePreviewCardRoot.d.ts",
			"qualifiedName": "usePreviewCardRoot.Parameters.actionsRef"
		},
		"1345": {
			"sourceFileName": "build/esm/preview-card/root/PreviewCardRoot.d.ts",
			"qualifiedName": "PreviewCardRoot.Actions"
		},
		"1346": {
			"sourceFileName": "build/esm/preview-card/portal/PreviewCardPortal.d.ts",
			"qualifiedName": "PreviewCardPortal"
		},
		"1347": {
			"sourceFileName": "build/esm/preview-card/portal/PreviewCardPortal.d.ts",
			"qualifiedName": "PreviewCardPortal"
		},
		"1348": {
			"sourceFileName": "build/esm/preview-card/portal/PreviewCardPortal.d.ts",
			"qualifiedName": "props"
		},
		"1349": {
			"sourceFileName": "build/esm/preview-card/portal/PreviewCardPortal.d.ts",
			"qualifiedName": "PreviewCardPortal.propTypes"
		},
		"1350": {
			"sourceFileName": "build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
			"qualifiedName": "PreviewCardTrigger"
		},
		"1351": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PreviewCardTrigger"
		},
		"1352": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1353": {
			"sourceFileName": "build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
			"qualifiedName": "PreviewCardTrigger"
		},
		"1354": {
			"sourceFileName": "build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
			"qualifiedName": "PreviewCardTrigger.State"
		},
		"1355": {
			"sourceFileName": "build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
			"qualifiedName": "PreviewCardTrigger.State.open"
		},
		"1356": {
			"sourceFileName": "build/esm/preview-card/trigger/PreviewCardTrigger.d.ts",
			"qualifiedName": "PreviewCardTrigger.Props"
		},
		"1357": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1358": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1359": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1360": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1361": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1362": {
			"sourceFileName": "build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
			"qualifiedName": "PreviewCardPositioner"
		},
		"1363": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PreviewCardPositioner"
		},
		"1364": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1365": {
			"sourceFileName": "build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
			"qualifiedName": "PreviewCardPositioner"
		},
		"1366": {
			"sourceFileName": "build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
			"qualifiedName": "PreviewCardPositioner.State"
		},
		"1367": {
			"sourceFileName": "build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
			"qualifiedName": "PreviewCardPositioner.State.open"
		},
		"1368": {
			"sourceFileName": "build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
			"qualifiedName": "PreviewCardPositioner.State.side"
		},
		"1369": {
			"sourceFileName": "build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
			"qualifiedName": "PreviewCardPositioner.State.align"
		},
		"1370": {
			"sourceFileName": "build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
			"qualifiedName": "PreviewCardPositioner.State.anchorHidden"
		},
		"1371": {
			"sourceFileName": "build/esm/preview-card/positioner/PreviewCardPositioner.d.ts",
			"qualifiedName": "PreviewCardPositioner.Props"
		},
		"1372": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.anchor"
		},
		"1373": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"1374": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"1375": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.open"
		},
		"1376": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.positionMethod"
		},
		"1377": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.side"
		},
		"1378": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sideOffset"
		},
		"1379": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.align"
		},
		"1380": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.alignOffset"
		},
		"1381": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionBoundary"
		},
		"1382": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionPadding"
		},
		"1383": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sticky"
		},
		"1384": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.arrowPadding"
		},
		"1385": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.trackAnchor"
		},
		"1386": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1387": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1388": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1389": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1390": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1391": {
			"sourceFileName": "build/esm/preview-card/popup/PreviewCardPopup.d.ts",
			"qualifiedName": "PreviewCardPopup"
		},
		"1392": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PreviewCardPopup"
		},
		"1393": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1394": {
			"sourceFileName": "build/esm/preview-card/popup/PreviewCardPopup.d.ts",
			"qualifiedName": "PreviewCardPopup"
		},
		"1395": {
			"sourceFileName": "build/esm/preview-card/popup/PreviewCardPopup.d.ts",
			"qualifiedName": "PreviewCardPopup.State"
		},
		"1396": {
			"sourceFileName": "build/esm/preview-card/popup/PreviewCardPopup.d.ts",
			"qualifiedName": "PreviewCardPopup.State.open"
		},
		"1397": {
			"sourceFileName": "build/esm/preview-card/popup/PreviewCardPopup.d.ts",
			"qualifiedName": "PreviewCardPopup.State.side"
		},
		"1398": {
			"sourceFileName": "build/esm/preview-card/popup/PreviewCardPopup.d.ts",
			"qualifiedName": "PreviewCardPopup.State.align"
		},
		"1399": {
			"sourceFileName": "build/esm/preview-card/popup/PreviewCardPopup.d.ts",
			"qualifiedName": "PreviewCardPopup.State.transitionStatus"
		},
		"1400": {
			"sourceFileName": "build/esm/preview-card/popup/PreviewCardPopup.d.ts",
			"qualifiedName": "PreviewCardPopup.Props"
		},
		"1401": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1402": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1403": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1404": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1405": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1406": {
			"sourceFileName": "build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
			"qualifiedName": "PreviewCardArrow"
		},
		"1407": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PreviewCardArrow"
		},
		"1408": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1409": {
			"sourceFileName": "build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
			"qualifiedName": "PreviewCardArrow"
		},
		"1410": {
			"sourceFileName": "build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
			"qualifiedName": "PreviewCardArrow.State"
		},
		"1411": {
			"sourceFileName": "build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
			"qualifiedName": "PreviewCardArrow.State.open"
		},
		"1412": {
			"sourceFileName": "build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
			"qualifiedName": "PreviewCardArrow.State.side"
		},
		"1413": {
			"sourceFileName": "build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
			"qualifiedName": "PreviewCardArrow.State.align"
		},
		"1414": {
			"sourceFileName": "build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
			"qualifiedName": "PreviewCardArrow.State.uncentered"
		},
		"1415": {
			"sourceFileName": "build/esm/preview-card/arrow/PreviewCardArrow.d.ts",
			"qualifiedName": "PreviewCardArrow.Props"
		},
		"1416": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1417": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1418": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1419": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1420": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1421": {
			"sourceFileName": "build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
			"qualifiedName": "PreviewCardBackdrop"
		},
		"1422": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "PreviewCardBackdrop"
		},
		"1423": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1424": {
			"sourceFileName": "build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
			"qualifiedName": "PreviewCardBackdrop"
		},
		"1425": {
			"sourceFileName": "build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
			"qualifiedName": "PreviewCardBackdrop.State"
		},
		"1426": {
			"sourceFileName": "build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
			"qualifiedName": "PreviewCardBackdrop.State.open"
		},
		"1427": {
			"sourceFileName": "build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
			"qualifiedName": "PreviewCardBackdrop.State.transitionStatus"
		},
		"1428": {
			"sourceFileName": "build/esm/preview-card/backdrop/PreviewCardBackdrop.d.ts",
			"qualifiedName": "PreviewCardBackdrop.Props"
		},
		"1429": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1430": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1431": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1432": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1433": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1434": {
			"sourceFileName": "build/esm/progress/index.parts.d.ts",
			"qualifiedName": ""
		},
		"1435": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "ProgressRoot"
		},
		"1436": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ProgressRoot"
		},
		"1437": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1438": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "ProgressRoot"
		},
		"1439": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "ProgressRoot.State"
		},
		"1440": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1441": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.max"
		},
		"1442": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.min"
		},
		"1443": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.status"
		},
		"1444": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "ProgressRoot.Props"
		},
		"1445": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.aria-label"
		},
		"1446": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.aria-labelledby"
		},
		"1447": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.aria-valuetext"
		},
		"1448": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.format"
		},
		"1449": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.getAriaLabel"
		},
		"1450": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1451": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1452": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "index"
		},
		"1453": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.getAriaValueText"
		},
		"1454": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1455": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1456": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "formattedValue"
		},
		"1457": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "value"
		},
		"1458": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.max"
		},
		"1459": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.min"
		},
		"1460": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "useProgressRoot.Parameters.value"
		},
		"1461": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1462": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1463": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1464": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1465": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1466": {
			"sourceFileName": "build/esm/progress/track/ProgressTrack.d.ts",
			"qualifiedName": "ProgressTrack"
		},
		"1467": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ProgressTrack"
		},
		"1468": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1469": {
			"sourceFileName": "build/esm/progress/track/ProgressTrack.d.ts",
			"qualifiedName": "ProgressTrack"
		},
		"1470": {
			"sourceFileName": "build/esm/progress/track/ProgressTrack.d.ts",
			"qualifiedName": "ProgressTrack.State"
		},
		"1471": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.max"
		},
		"1472": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.min"
		},
		"1473": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.status"
		},
		"1474": {
			"sourceFileName": "build/esm/progress/track/ProgressTrack.d.ts",
			"qualifiedName": "ProgressTrack.Props"
		},
		"1475": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1476": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1477": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1478": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1479": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1480": {
			"sourceFileName": "build/esm/progress/indicator/ProgressIndicator.d.ts",
			"qualifiedName": "ProgressIndicator"
		},
		"1481": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ProgressIndicator"
		},
		"1482": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1483": {
			"sourceFileName": "build/esm/progress/indicator/ProgressIndicator.d.ts",
			"qualifiedName": "ProgressIndicator"
		},
		"1484": {
			"sourceFileName": "build/esm/progress/indicator/ProgressIndicator.d.ts",
			"qualifiedName": "ProgressIndicator.State"
		},
		"1485": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.max"
		},
		"1486": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.min"
		},
		"1487": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.status"
		},
		"1488": {
			"sourceFileName": "build/esm/progress/indicator/ProgressIndicator.d.ts",
			"qualifiedName": "ProgressIndicator.Props"
		},
		"1489": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1490": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1491": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1492": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1493": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1494": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "ProgressValue"
		},
		"1495": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ProgressValue"
		},
		"1496": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1497": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "ProgressValue"
		},
		"1498": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "ProgressValue.State"
		},
		"1499": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.max"
		},
		"1500": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.min"
		},
		"1501": {
			"sourceFileName": "build/esm/progress/root/ProgressRoot.d.ts",
			"qualifiedName": "__type.status"
		},
		"1502": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "ProgressValue.Props"
		},
		"1503": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "ProgressValue.Props.children"
		},
		"1504": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "__type"
		},
		"1505": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "__type"
		},
		"1506": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "formattedValue"
		},
		"1507": {
			"sourceFileName": "build/esm/progress/value/ProgressValue.d.ts",
			"qualifiedName": "value"
		},
		"1508": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"1509": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1510": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1511": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1512": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"1513": {
			"sourceFileName": "build/esm/progress/root/useProgressRoot.d.ts",
			"qualifiedName": "ProgressStatus"
		},
		"1514": {
			"sourceFileName": "build/esm/radio/index.parts.d.ts",
			"qualifiedName": ""
		},
		"1515": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot"
		},
		"1516": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "RadioRoot"
		},
		"1517": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1518": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot"
		},
		"1519": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.Props"
		},
		"1520": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.Props.value"
		},
		"1521": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.Props.disabled"
		},
		"1522": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.Props.required"
		},
		"1523": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.Props.readOnly"
		},
		"1524": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"1525": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1526": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1527": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1528": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"1529": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.State"
		},
		"1530": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.State.checked"
		},
		"1531": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.State.disabled"
		},
		"1532": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.State.readOnly"
		},
		"1533": {
			"sourceFileName": "build/esm/radio/root/RadioRoot.d.ts",
			"qualifiedName": "RadioRoot.State.required"
		},
		"1534": {
			"sourceFileName": "build/esm/radio/indicator/RadioIndicator.d.ts",
			"qualifiedName": "RadioIndicator"
		},
		"1535": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "RadioIndicator"
		},
		"1536": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1537": {
			"sourceFileName": "build/esm/radio/indicator/RadioIndicator.d.ts",
			"qualifiedName": "RadioIndicator"
		},
		"1538": {
			"sourceFileName": "build/esm/radio/indicator/RadioIndicator.d.ts",
			"qualifiedName": "RadioIndicator.Props"
		},
		"1539": {
			"sourceFileName": "build/esm/radio/indicator/RadioIndicator.d.ts",
			"qualifiedName": "RadioIndicator.Props.keepMounted"
		},
		"1540": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1541": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1542": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1543": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1544": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1545": {
			"sourceFileName": "build/esm/radio/indicator/RadioIndicator.d.ts",
			"qualifiedName": "RadioIndicator.State"
		},
		"1546": {
			"sourceFileName": "build/esm/radio/indicator/RadioIndicator.d.ts",
			"qualifiedName": "RadioIndicator.State.checked"
		},
		"1547": {
			"sourceFileName": "build/esm/radio/indicator/RadioIndicator.d.ts",
			"qualifiedName": "RadioIndicator.State.transitionStatus"
		},
		"1548": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup"
		},
		"1549": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "RadioGroup"
		},
		"1550": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1551": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup"
		},
		"1552": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.State"
		},
		"1553": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.State.readOnly"
		},
		"1554": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.disabled"
		},
		"1555": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1556": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1557": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1558": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1559": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1560": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.Props"
		},
		"1561": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.Props.disabled"
		},
		"1562": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.Props.readOnly"
		},
		"1563": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.Props.required"
		},
		"1564": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.Props.name"
		},
		"1565": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.Props.value"
		},
		"1566": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.Props.defaultValue"
		},
		"1567": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "RadioGroup.Props.onValueChange"
		},
		"1568": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "__type"
		},
		"1569": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "__type"
		},
		"1570": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "value"
		},
		"1571": {
			"sourceFileName": "build/esm/radio-group/RadioGroup.d.ts",
			"qualifiedName": "event"
		},
		"1572": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"1573": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1574": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1575": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1576": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"1577": {
			"sourceFileName": "build/esm/scroll-area/index.parts.d.ts",
			"qualifiedName": ""
		},
		"1578": {
			"sourceFileName": "build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
			"qualifiedName": "ScrollAreaRoot"
		},
		"1579": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ScrollAreaRoot"
		},
		"1580": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1581": {
			"sourceFileName": "build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
			"qualifiedName": "ScrollAreaRoot"
		},
		"1582": {
			"sourceFileName": "build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
			"qualifiedName": "ScrollAreaRoot.Props"
		},
		"1583": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1584": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1585": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1586": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1587": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1588": {
			"sourceFileName": "build/esm/scroll-area/root/ScrollAreaRoot.d.ts",
			"qualifiedName": "ScrollAreaRoot.State"
		},
		"1589": {
			"sourceFileName": "build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
			"qualifiedName": "ScrollAreaViewport"
		},
		"1590": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ScrollAreaViewport"
		},
		"1591": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1592": {
			"sourceFileName": "build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
			"qualifiedName": "ScrollAreaViewport"
		},
		"1593": {
			"sourceFileName": "build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
			"qualifiedName": "ScrollAreaViewport.Props"
		},
		"1594": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1595": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1596": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1597": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1598": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1599": {
			"sourceFileName": "build/esm/scroll-area/viewport/ScrollAreaViewport.d.ts",
			"qualifiedName": "ScrollAreaViewport.State"
		},
		"1600": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar"
		},
		"1601": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ScrollAreaScrollbar"
		},
		"1602": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1603": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar"
		},
		"1604": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar.State"
		},
		"1605": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar.State.hovering"
		},
		"1606": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar.State.scrolling"
		},
		"1607": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar.State.orientation"
		},
		"1608": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar.Props"
		},
		"1609": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar.Props.orientation"
		},
		"1610": {
			"sourceFileName": "build/esm/scroll-area/scrollbar/ScrollAreaScrollbar.d.ts",
			"qualifiedName": "ScrollAreaScrollbar.Props.keepMounted"
		},
		"1611": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1612": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1613": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1614": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1615": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1616": {
			"sourceFileName": "build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
			"qualifiedName": "ScrollAreaThumb"
		},
		"1617": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ScrollAreaThumb"
		},
		"1618": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1619": {
			"sourceFileName": "build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
			"qualifiedName": "ScrollAreaThumb"
		},
		"1620": {
			"sourceFileName": "build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
			"qualifiedName": "ScrollAreaThumb.State"
		},
		"1621": {
			"sourceFileName": "build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
			"qualifiedName": "ScrollAreaThumb.State.orientation"
		},
		"1622": {
			"sourceFileName": "build/esm/scroll-area/thumb/ScrollAreaThumb.d.ts",
			"qualifiedName": "ScrollAreaThumb.Props"
		},
		"1623": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1624": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1625": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1626": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1627": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1628": {
			"sourceFileName": "build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
			"qualifiedName": "ScrollAreaCorner"
		},
		"1629": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ScrollAreaCorner"
		},
		"1630": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1631": {
			"sourceFileName": "build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
			"qualifiedName": "ScrollAreaCorner"
		},
		"1632": {
			"sourceFileName": "build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
			"qualifiedName": "ScrollAreaCorner.State"
		},
		"1633": {
			"sourceFileName": "build/esm/scroll-area/corner/ScrollAreaCorner.d.ts",
			"qualifiedName": "ScrollAreaCorner.Props"
		},
		"1634": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1635": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1636": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1637": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1638": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1639": {
			"sourceFileName": "build/esm/scroll-area/constants.d.ts",
			"qualifiedName": "SCROLL_TIMEOUT"
		},
		"1640": {
			"sourceFileName": "build/esm/scroll-area/constants.d.ts",
			"qualifiedName": "MIN_THUMB_SIZE"
		},
		"1641": {
			"sourceFileName": "build/esm/select/index.parts.d.ts",
			"qualifiedName": ""
		},
		"1642": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot"
		},
		"1643": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot"
		},
		"1644": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "Value"
		},
		"1645": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "props"
		},
		"1646": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot"
		},
		"1647": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot.propTypes"
		},
		"1648": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot"
		},
		"1649": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "Value"
		},
		"1650": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "props"
		},
		"1651": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot"
		},
		"1652": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot.Props"
		},
		"1653": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot.Props.children"
		},
		"1654": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.name"
		},
		"1655": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.id"
		},
		"1656": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.required"
		},
		"1657": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.readOnly"
		},
		"1658": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.disabled"
		},
		"1659": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.value"
		},
		"1660": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.onValueChange"
		},
		"1661": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1662": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1663": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "value"
		},
		"1664": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "event"
		},
		"1665": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.defaultValue"
		},
		"1666": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.defaultOpen"
		},
		"1667": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.onOpenChange"
		},
		"1668": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1669": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1670": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "open"
		},
		"1671": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "event"
		},
		"1672": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.onOpenChangeComplete"
		},
		"1673": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1674": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1675": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "open"
		},
		"1676": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.open"
		},
		"1677": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.alignItemToTrigger"
		},
		"1678": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.transitionStatus"
		},
		"1679": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.modal"
		},
		"1680": {
			"sourceFileName": "build/esm/select/root/useSelectRoot.d.ts",
			"qualifiedName": "useSelectRoot.Parameters.actionsRef"
		},
		"1681": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot.Props.Value"
		},
		"1682": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot.State"
		},
		"1683": {
			"sourceFileName": "build/esm/select/root/SelectRoot.d.ts",
			"qualifiedName": "SelectRoot.Actions"
		},
		"1684": {
			"sourceFileName": "build/esm/select/trigger/SelectTrigger.d.ts",
			"qualifiedName": "SelectTrigger"
		},
		"1685": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectTrigger"
		},
		"1686": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1687": {
			"sourceFileName": "build/esm/select/trigger/SelectTrigger.d.ts",
			"qualifiedName": "SelectTrigger"
		},
		"1688": {
			"sourceFileName": "build/esm/select/trigger/SelectTrigger.d.ts",
			"qualifiedName": "SelectTrigger.Props"
		},
		"1689": {
			"sourceFileName": "build/esm/select/trigger/SelectTrigger.d.ts",
			"qualifiedName": "SelectTrigger.Props.children"
		},
		"1690": {
			"sourceFileName": "build/esm/select/trigger/SelectTrigger.d.ts",
			"qualifiedName": "SelectTrigger.Props.disabled"
		},
		"1691": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1692": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1693": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1694": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1695": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1696": {
			"sourceFileName": "build/esm/select/trigger/SelectTrigger.d.ts",
			"qualifiedName": "SelectTrigger.State"
		},
		"1697": {
			"sourceFileName": "build/esm/select/trigger/SelectTrigger.d.ts",
			"qualifiedName": "SelectTrigger.State.open"
		},
		"1698": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "SelectValue"
		},
		"1699": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectValue"
		},
		"1700": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1701": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "SelectValue"
		},
		"1702": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "SelectValue.Props"
		},
		"1703": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "SelectValue.Props.children"
		},
		"1704": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "__type"
		},
		"1705": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "__type"
		},
		"1706": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "value"
		},
		"1707": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "SelectValue.Props.placeholder"
		},
		"1708": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"1709": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1710": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1711": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1712": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"1713": {
			"sourceFileName": "build/esm/select/value/SelectValue.d.ts",
			"qualifiedName": "SelectValue.State"
		},
		"1714": {
			"sourceFileName": "build/esm/select/icon/SelectIcon.d.ts",
			"qualifiedName": "SelectIcon"
		},
		"1715": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectIcon"
		},
		"1716": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1717": {
			"sourceFileName": "build/esm/select/icon/SelectIcon.d.ts",
			"qualifiedName": "SelectIcon"
		},
		"1718": {
			"sourceFileName": "build/esm/select/icon/SelectIcon.d.ts",
			"qualifiedName": "SelectIcon.State"
		},
		"1719": {
			"sourceFileName": "build/esm/select/icon/SelectIcon.d.ts",
			"qualifiedName": "SelectIcon.Props"
		},
		"1720": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1721": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1722": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1723": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1724": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1725": {
			"sourceFileName": "build/esm/select/portal/SelectPortal.d.ts",
			"qualifiedName": "SelectPortal"
		},
		"1726": {
			"sourceFileName": "build/esm/select/portal/SelectPortal.d.ts",
			"qualifiedName": "SelectPortal"
		},
		"1727": {
			"sourceFileName": "build/esm/select/portal/SelectPortal.d.ts",
			"qualifiedName": "props"
		},
		"1728": {
			"sourceFileName": "build/esm/select/portal/SelectPortal.d.ts",
			"qualifiedName": "SelectPortal.propTypes"
		},
		"1729": {
			"sourceFileName": "build/esm/select/backdrop/SelectBackdrop.d.ts",
			"qualifiedName": "SelectBackdrop"
		},
		"1730": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectBackdrop"
		},
		"1731": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1732": {
			"sourceFileName": "build/esm/select/backdrop/SelectBackdrop.d.ts",
			"qualifiedName": "SelectBackdrop"
		},
		"1733": {
			"sourceFileName": "build/esm/select/backdrop/SelectBackdrop.d.ts",
			"qualifiedName": "SelectBackdrop.Props"
		},
		"1734": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1735": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1736": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1737": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1738": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1739": {
			"sourceFileName": "build/esm/select/backdrop/SelectBackdrop.d.ts",
			"qualifiedName": "SelectBackdrop.State"
		},
		"1740": {
			"sourceFileName": "build/esm/select/backdrop/SelectBackdrop.d.ts",
			"qualifiedName": "SelectBackdrop.State.open"
		},
		"1741": {
			"sourceFileName": "build/esm/select/backdrop/SelectBackdrop.d.ts",
			"qualifiedName": "SelectBackdrop.State.transitionStatus"
		},
		"1742": {
			"sourceFileName": "build/esm/select/positioner/SelectPositioner.d.ts",
			"qualifiedName": "SelectPositioner"
		},
		"1743": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectPositioner"
		},
		"1744": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1745": {
			"sourceFileName": "build/esm/select/positioner/SelectPositioner.d.ts",
			"qualifiedName": "SelectPositioner"
		},
		"1746": {
			"sourceFileName": "build/esm/select/positioner/SelectPositioner.d.ts",
			"qualifiedName": "SelectPositioner.State"
		},
		"1747": {
			"sourceFileName": "build/esm/select/positioner/SelectPositioner.d.ts",
			"qualifiedName": "SelectPositioner.State.open"
		},
		"1748": {
			"sourceFileName": "build/esm/select/positioner/SelectPositioner.d.ts",
			"qualifiedName": "SelectPositioner.State.side"
		},
		"1749": {
			"sourceFileName": "build/esm/select/positioner/SelectPositioner.d.ts",
			"qualifiedName": "SelectPositioner.State.align"
		},
		"1750": {
			"sourceFileName": "build/esm/select/positioner/SelectPositioner.d.ts",
			"qualifiedName": "SelectPositioner.State.anchorHidden"
		},
		"1751": {
			"sourceFileName": "build/esm/select/positioner/SelectPositioner.d.ts",
			"qualifiedName": "SelectPositioner.Props"
		},
		"1752": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.anchor"
		},
		"1753": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"1754": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"1755": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.open"
		},
		"1756": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.positionMethod"
		},
		"1757": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.side"
		},
		"1758": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sideOffset"
		},
		"1759": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.align"
		},
		"1760": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.alignOffset"
		},
		"1761": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionBoundary"
		},
		"1762": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionPadding"
		},
		"1763": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sticky"
		},
		"1764": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.arrowPadding"
		},
		"1765": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.trackAnchor"
		},
		"1766": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1767": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1768": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1769": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1770": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1771": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup"
		},
		"1772": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectPopup"
		},
		"1773": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1774": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup"
		},
		"1775": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup.Props"
		},
		"1776": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup.Props.children"
		},
		"1778": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1779": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1780": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1781": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1782": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1783": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup.State"
		},
		"1784": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup.State.side"
		},
		"1785": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup.State.align"
		},
		"1786": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup.State.open"
		},
		"1787": {
			"sourceFileName": "build/esm/select/popup/SelectPopup.d.ts",
			"qualifiedName": "SelectPopup.State.transitionStatus"
		},
		"1788": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem"
		},
		"1789": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectItem"
		},
		"1790": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1791": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem"
		},
		"1792": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.State"
		},
		"1793": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.State.disabled"
		},
		"1794": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.State.highlighted"
		},
		"1795": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.State.selected"
		},
		"1796": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.State.open"
		},
		"1797": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.Props"
		},
		"1798": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.Props.children"
		},
		"1799": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.Props.value"
		},
		"1800": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.Props.disabled"
		},
		"1801": {
			"sourceFileName": "build/esm/select/item/SelectItem.d.ts",
			"qualifiedName": "SelectItem.Props.label"
		},
		"1802": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"1803": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1804": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1805": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1806": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"1807": {
			"sourceFileName": "build/esm/select/item-indicator/SelectItemIndicator.d.ts",
			"qualifiedName": "SelectItemIndicator"
		},
		"1808": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectItemIndicator"
		},
		"1809": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1810": {
			"sourceFileName": "build/esm/select/item-indicator/SelectItemIndicator.d.ts",
			"qualifiedName": "SelectItemIndicator"
		},
		"1811": {
			"sourceFileName": "build/esm/select/item-indicator/SelectItemIndicator.d.ts",
			"qualifiedName": "SelectItemIndicator.Props"
		},
		"1812": {
			"sourceFileName": "build/esm/select/item-indicator/SelectItemIndicator.d.ts",
			"qualifiedName": "SelectItemIndicator.Props.children"
		},
		"1813": {
			"sourceFileName": "build/esm/select/item-indicator/SelectItemIndicator.d.ts",
			"qualifiedName": "SelectItemIndicator.Props.keepMounted"
		},
		"1814": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1815": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1816": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1817": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1818": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1819": {
			"sourceFileName": "build/esm/select/item-indicator/SelectItemIndicator.d.ts",
			"qualifiedName": "SelectItemIndicator.State"
		},
		"1820": {
			"sourceFileName": "build/esm/select/item-indicator/SelectItemIndicator.d.ts",
			"qualifiedName": "SelectItemIndicator.State.selected"
		},
		"1821": {
			"sourceFileName": "build/esm/select/item-indicator/SelectItemIndicator.d.ts",
			"qualifiedName": "SelectItemIndicator.State.transitionStatus"
		},
		"1822": {
			"sourceFileName": "build/esm/select/item-text/SelectItemText.d.ts",
			"qualifiedName": "SelectItemText"
		},
		"1823": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectItemText"
		},
		"1824": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1825": {
			"sourceFileName": "build/esm/select/item-text/SelectItemText.d.ts",
			"qualifiedName": "SelectItemText"
		},
		"1826": {
			"sourceFileName": "build/esm/select/item-text/SelectItemText.d.ts",
			"qualifiedName": "SelectItemText.Props"
		},
		"1827": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1828": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1829": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1830": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1831": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1832": {
			"sourceFileName": "build/esm/select/item-text/SelectItemText.d.ts",
			"qualifiedName": "SelectItemText.State"
		},
		"1833": {
			"sourceFileName": "build/esm/select/arrow/SelectArrow.d.ts",
			"qualifiedName": "SelectArrow"
		},
		"1834": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectArrow"
		},
		"1835": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1836": {
			"sourceFileName": "build/esm/select/arrow/SelectArrow.d.ts",
			"qualifiedName": "SelectArrow"
		},
		"1837": {
			"sourceFileName": "build/esm/select/arrow/SelectArrow.d.ts",
			"qualifiedName": "SelectArrow.State"
		},
		"1838": {
			"sourceFileName": "build/esm/select/arrow/SelectArrow.d.ts",
			"qualifiedName": "SelectArrow.State.open"
		},
		"1839": {
			"sourceFileName": "build/esm/select/arrow/SelectArrow.d.ts",
			"qualifiedName": "SelectArrow.State.side"
		},
		"1840": {
			"sourceFileName": "build/esm/select/arrow/SelectArrow.d.ts",
			"qualifiedName": "SelectArrow.State.align"
		},
		"1841": {
			"sourceFileName": "build/esm/select/arrow/SelectArrow.d.ts",
			"qualifiedName": "SelectArrow.State.uncentered"
		},
		"1842": {
			"sourceFileName": "build/esm/select/arrow/SelectArrow.d.ts",
			"qualifiedName": "SelectArrow.Props"
		},
		"1843": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1844": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1845": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1846": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1847": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1848": {
			"sourceFileName": "build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
			"qualifiedName": "SelectScrollDownArrow"
		},
		"1849": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectScrollDownArrow"
		},
		"1850": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1851": {
			"sourceFileName": "build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
			"qualifiedName": "SelectScrollDownArrow"
		},
		"1852": {
			"sourceFileName": "build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
			"qualifiedName": "SelectScrollDownArrow.State"
		},
		"1853": {
			"sourceFileName": "build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
			"qualifiedName": "SelectScrollDownArrow.Props"
		},
		"1854": {
			"sourceFileName": "build/esm/select/scroll-down-arrow/SelectScrollDownArrow.d.ts",
			"qualifiedName": "SelectScrollDownArrow.Props.keepMounted"
		},
		"1855": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1856": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1857": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1858": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1859": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1860": {
			"sourceFileName": "build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
			"qualifiedName": "SelectScrollUpArrow"
		},
		"1861": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectScrollUpArrow"
		},
		"1862": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1863": {
			"sourceFileName": "build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
			"qualifiedName": "SelectScrollUpArrow"
		},
		"1864": {
			"sourceFileName": "build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
			"qualifiedName": "SelectScrollUpArrow.State"
		},
		"1865": {
			"sourceFileName": "build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
			"qualifiedName": "SelectScrollUpArrow.Props"
		},
		"1866": {
			"sourceFileName": "build/esm/select/scroll-up-arrow/SelectScrollUpArrow.d.ts",
			"qualifiedName": "SelectScrollUpArrow.Props.keepMounted"
		},
		"1867": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1868": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1869": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1870": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1871": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1872": {
			"sourceFileName": "build/esm/select/group/SelectGroup.d.ts",
			"qualifiedName": "SelectGroup"
		},
		"1873": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectGroup"
		},
		"1874": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1875": {
			"sourceFileName": "build/esm/select/group/SelectGroup.d.ts",
			"qualifiedName": "SelectGroup"
		},
		"1876": {
			"sourceFileName": "build/esm/select/group/SelectGroup.d.ts",
			"qualifiedName": "SelectGroup.State"
		},
		"1877": {
			"sourceFileName": "build/esm/select/group/SelectGroup.d.ts",
			"qualifiedName": "SelectGroup.Props"
		},
		"1878": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1879": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1880": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1881": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1882": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1883": {
			"sourceFileName": "build/esm/select/group-label/SelectGroupLabel.d.ts",
			"qualifiedName": "SelectGroupLabel"
		},
		"1884": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SelectGroupLabel"
		},
		"1885": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1886": {
			"sourceFileName": "build/esm/select/group-label/SelectGroupLabel.d.ts",
			"qualifiedName": "SelectGroupLabel"
		},
		"1887": {
			"sourceFileName": "build/esm/select/group-label/SelectGroupLabel.d.ts",
			"qualifiedName": "SelectGroupLabel.State"
		},
		"1888": {
			"sourceFileName": "build/esm/select/group-label/SelectGroupLabel.d.ts",
			"qualifiedName": "SelectGroupLabel.Props"
		},
		"1889": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1890": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1891": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1892": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1893": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1894": {
			"sourceFileName": "build/esm/select/index.parts.d.ts",
			"qualifiedName": "Separator"
		},
		"1895": {
			"sourceFileName": "build/esm/separator/index.d.ts",
			"qualifiedName": "Separator"
		},
		"1896": {
			"sourceFileName": "build/esm/slider/index.parts.d.ts",
			"qualifiedName": ""
		},
		"1897": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot"
		},
		"1898": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot"
		},
		"1899": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "Value"
		},
		"1900": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "props"
		},
		"1901": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1902": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "__type.ref"
		},
		"1903": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot"
		},
		"1904": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State"
		},
		"1905": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.activeThumbIndex"
		},
		"1906": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.disabled"
		},
		"1907": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.dragging"
		},
		"1908": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.max"
		},
		"1909": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.min"
		},
		"1910": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.minStepsBetweenValues"
		},
		"1911": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.orientation"
		},
		"1912": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.step"
		},
		"1913": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.values"
		},
		"1914": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"1915": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"1916": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"1917": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"1918": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"1919": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props"
		},
		"1920": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props.defaultValue"
		},
		"1921": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props.disabled"
		},
		"1922": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props.format"
		},
		"1923": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props.tabIndex"
		},
		"1924": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props.value"
		},
		"1925": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props.onValueChange"
		},
		"1926": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1927": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1928": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "value"
		},
		"1929": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "event"
		},
		"1930": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "activeThumbIndex"
		},
		"1931": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props.onValueCommitted"
		},
		"1932": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1933": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "__type"
		},
		"1934": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "value"
		},
		"1935": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "event"
		},
		"1936": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "name"
		},
		"1937": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "orientation"
		},
		"1938": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "max"
		},
		"1939": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "min"
		},
		"1940": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "step"
		},
		"1941": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "minStepsBetweenValues"
		},
		"1942": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "largeStep"
		},
		"1943": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"1944": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1945": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1946": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1947": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"1948": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.Props.Value"
		},
		"1949": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "SliderValue"
		},
		"1950": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SliderValue"
		},
		"1951": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1952": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "SliderValue"
		},
		"1953": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "SliderValue.Props"
		},
		"1954": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "SliderValue.Props.aria-live"
		},
		"1955": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "SliderValue.Props.children"
		},
		"1956": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "__type"
		},
		"1957": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "__type"
		},
		"1958": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "formattedValues"
		},
		"1959": {
			"sourceFileName": "build/esm/slider/value/SliderValue.d.ts",
			"qualifiedName": "values"
		},
		"1960": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"1961": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1962": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1963": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1964": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"1965": {
			"sourceFileName": "build/esm/slider/control/SliderControl.d.ts",
			"qualifiedName": "SliderControl"
		},
		"1966": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SliderControl"
		},
		"1967": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1968": {
			"sourceFileName": "build/esm/slider/control/SliderControl.d.ts",
			"qualifiedName": "SliderControl"
		},
		"1969": {
			"sourceFileName": "build/esm/slider/control/SliderControl.d.ts",
			"qualifiedName": "SliderControl.Props"
		},
		"1970": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1971": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1972": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1973": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1974": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1975": {
			"sourceFileName": "build/esm/slider/track/SliderTrack.d.ts",
			"qualifiedName": "SliderTrack"
		},
		"1976": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SliderTrack"
		},
		"1977": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1978": {
			"sourceFileName": "build/esm/slider/track/SliderTrack.d.ts",
			"qualifiedName": "SliderTrack"
		},
		"1979": {
			"sourceFileName": "build/esm/slider/track/SliderTrack.d.ts",
			"qualifiedName": "SliderTrack.Props"
		},
		"1980": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"1981": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1982": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"1983": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"1984": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"1985": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb"
		},
		"1986": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SliderThumb"
		},
		"1987": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1988": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb"
		},
		"1989": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb.State"
		},
		"1990": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.activeThumbIndex"
		},
		"1991": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.disabled"
		},
		"1992": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.dragging"
		},
		"1993": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.max"
		},
		"1994": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.min"
		},
		"1995": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.minStepsBetweenValues"
		},
		"1996": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.orientation"
		},
		"1997": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.step"
		},
		"1998": {
			"sourceFileName": "build/esm/slider/root/SliderRoot.d.ts",
			"qualifiedName": "SliderRoot.State.values"
		},
		"1999": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"2000": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"2001": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"2002": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"2003": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"2004": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb.Props"
		},
		"2005": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb.Props.onPointerLeave"
		},
		"2006": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb.Props.onPointerOver"
		},
		"2007": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb.Props.onBlur"
		},
		"2008": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb.Props.onFocus"
		},
		"2009": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb.Props.onKeyDown"
		},
		"2010": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "SliderThumb.Props.render"
		},
		"2011": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "__type"
		},
		"2012": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "__type"
		},
		"2013": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "props"
		},
		"2014": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "inputProps"
		},
		"2015": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "state"
		},
		"2016": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "__type"
		},
		"2017": {
			"sourceFileName": "build/esm/slider/thumb/SliderThumb.d.ts",
			"qualifiedName": "__type.ref"
		},
		"2018": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "name"
		},
		"2019": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "disabled"
		},
		"2020": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "orientation"
		},
		"2021": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "id"
		},
		"2022": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "tabIndex"
		},
		"2023": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "aria-label"
		},
		"2024": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "aria-labelledby"
		},
		"2025": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "aria-valuetext"
		},
		"2026": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "values"
		},
		"2027": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "max"
		},
		"2028": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "min"
		},
		"2029": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "step"
		},
		"2030": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "minStepsBetweenValues"
		},
		"2031": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "largeStep"
		},
		"2032": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "active"
		},
		"2033": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "handleInputChange"
		},
		"2034": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2035": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2036": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "valueInput"
		},
		"2037": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "index"
		},
		"2038": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "event"
		},
		"2039": {
			"sourceFileName": "build/esm/slider/root/useSliderRoot.d.ts",
			"qualifiedName": "percentageValues"
		},
		"2040": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "format"
		},
		"2041": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "getAriaLabel"
		},
		"2042": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "__type"
		},
		"2043": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "__type"
		},
		"2044": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "index"
		},
		"2045": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "getAriaValueText"
		},
		"2046": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "__type"
		},
		"2047": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "__type"
		},
		"2048": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "formattedValue"
		},
		"2049": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "value"
		},
		"2050": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "index"
		},
		"2051": {
			"sourceFileName": "build/esm/slider/thumb/useSliderThumb.d.ts",
			"qualifiedName": "inputId"
		},
		"2052": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"2053": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2054": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2055": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2056": {
			"sourceFileName": "build/esm/slider/indicator/SliderIndicator.d.ts",
			"qualifiedName": "SliderIndicator"
		},
		"2057": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SliderIndicator"
		},
		"2058": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2059": {
			"sourceFileName": "build/esm/slider/indicator/SliderIndicator.d.ts",
			"qualifiedName": "SliderIndicator"
		},
		"2060": {
			"sourceFileName": "build/esm/slider/indicator/SliderIndicator.d.ts",
			"qualifiedName": "SliderIndicator.Props"
		},
		"2061": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2062": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2063": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2064": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2065": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2066": {
			"sourceFileName": "build/esm/switch/index.parts.d.ts",
			"qualifiedName": ""
		},
		"2067": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot"
		},
		"2068": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SwitchRoot"
		},
		"2069": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2070": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot"
		},
		"2071": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.Props"
		},
		"2072": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.id"
		},
		"2073": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.checked"
		},
		"2074": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.defaultChecked"
		},
		"2075": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.disabled"
		},
		"2076": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.inputRef"
		},
		"2077": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.name"
		},
		"2078": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.onCheckedChange"
		},
		"2079": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2080": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2081": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "checked"
		},
		"2082": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "event"
		},
		"2083": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.readOnly"
		},
		"2084": {
			"sourceFileName": "build/esm/switch/root/useSwitchRoot.d.ts",
			"qualifiedName": "useSwitchRoot.Parameters.required"
		},
		"2085": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"2086": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2087": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2088": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2089": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"2090": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State"
		},
		"2091": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State.checked"
		},
		"2092": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State.disabled"
		},
		"2093": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State.readOnly"
		},
		"2094": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State.required"
		},
		"2095": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"2096": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"2097": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"2098": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"2099": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"2100": {
			"sourceFileName": "build/esm/switch/thumb/SwitchThumb.d.ts",
			"qualifiedName": "SwitchThumb"
		},
		"2101": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "SwitchThumb"
		},
		"2102": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2103": {
			"sourceFileName": "build/esm/switch/thumb/SwitchThumb.d.ts",
			"qualifiedName": "SwitchThumb"
		},
		"2104": {
			"sourceFileName": "build/esm/switch/thumb/SwitchThumb.d.ts",
			"qualifiedName": "SwitchThumb.Props"
		},
		"2105": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2106": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2107": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2108": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2109": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2110": {
			"sourceFileName": "build/esm/switch/thumb/SwitchThumb.d.ts",
			"qualifiedName": "SwitchThumb.State"
		},
		"2111": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State.checked"
		},
		"2112": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State.disabled"
		},
		"2113": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State.readOnly"
		},
		"2114": {
			"sourceFileName": "build/esm/switch/root/SwitchRoot.d.ts",
			"qualifiedName": "SwitchRoot.State.required"
		},
		"2115": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.touched"
		},
		"2116": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.dirty"
		},
		"2117": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.valid"
		},
		"2118": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.filled"
		},
		"2119": {
			"sourceFileName": "build/esm/field/root/FieldRoot.d.ts",
			"qualifiedName": "FieldRoot.State.focused"
		},
		"2120": {
			"sourceFileName": "build/esm/tabs/index.parts.d.ts",
			"qualifiedName": ""
		},
		"2121": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "TabsRoot"
		},
		"2122": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TabsRoot"
		},
		"2123": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2124": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "TabsRoot"
		},
		"2125": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "TabsRoot.State"
		},
		"2126": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2127": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "__type.orientation"
		},
		"2128": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "__type.tabActivationDirection"
		},
		"2129": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "TabsRoot.Props"
		},
		"2130": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "TabsRoot.Props.value"
		},
		"2131": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "TabsRoot.Props.defaultValue"
		},
		"2132": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "TabsRoot.Props.orientation"
		},
		"2133": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "TabsRoot.Props.onValueChange"
		},
		"2134": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2135": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2136": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "value"
		},
		"2137": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "event"
		},
		"2138": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"2139": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2140": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2141": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2142": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"2143": {
			"sourceFileName": "build/esm/tabs/tab/TabsTab.d.ts",
			"qualifiedName": "TabsTab"
		},
		"2144": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TabsTab"
		},
		"2145": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2146": {
			"sourceFileName": "build/esm/tabs/tab/TabsTab.d.ts",
			"qualifiedName": "TabsTab"
		},
		"2147": {
			"sourceFileName": "build/esm/tabs/tab/TabsTab.d.ts",
			"qualifiedName": "TabsTab.Props"
		},
		"2148": {
			"sourceFileName": "build/esm/tabs/tab/TabsTab.d.ts",
			"qualifiedName": "TabsTab.Props.value"
		},
		"2149": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2150": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2151": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2152": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2153": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2154": {
			"sourceFileName": "build/esm/tabs/tab/TabsTab.d.ts",
			"qualifiedName": "TabsTab.State"
		},
		"2155": {
			"sourceFileName": "build/esm/tabs/tab/TabsTab.d.ts",
			"qualifiedName": "TabsTab.State.disabled"
		},
		"2156": {
			"sourceFileName": "build/esm/tabs/tab/TabsTab.d.ts",
			"qualifiedName": "TabsTab.State.selected"
		},
		"2157": {
			"sourceFileName": "build/esm/tabs/tab/TabsTab.d.ts",
			"qualifiedName": "TabsTab.State.orientation"
		},
		"2158": {
			"sourceFileName": "build/esm/tabs/indicator/TabsIndicator.d.ts",
			"qualifiedName": "TabsIndicator"
		},
		"2159": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TabsIndicator"
		},
		"2160": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2161": {
			"sourceFileName": "build/esm/tabs/indicator/TabsIndicator.d.ts",
			"qualifiedName": "TabsIndicator"
		},
		"2162": {
			"sourceFileName": "build/esm/tabs/indicator/TabsIndicator.d.ts",
			"qualifiedName": "TabsIndicator.State"
		},
		"2163": {
			"sourceFileName": "build/esm/tabs/indicator/TabsIndicator.d.ts",
			"qualifiedName": "TabsIndicator.State.selectedTabPosition"
		},
		"2164": {
			"sourceFileName": "build/esm/tabs/indicator/TabsIndicator.d.ts",
			"qualifiedName": "TabsIndicator.State.selectedTabSize"
		},
		"2165": {
			"sourceFileName": "build/esm/tabs/indicator/TabsIndicator.d.ts",
			"qualifiedName": "TabsIndicator.State.orientation"
		},
		"2166": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "__type.tabActivationDirection"
		},
		"2167": {
			"sourceFileName": "build/esm/tabs/indicator/TabsIndicator.d.ts",
			"qualifiedName": "TabsIndicator.Props"
		},
		"2168": {
			"sourceFileName": "build/esm/tabs/indicator/TabsIndicator.d.ts",
			"qualifiedName": "TabsIndicator.Props.renderBeforeHydration"
		},
		"2169": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2170": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2171": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2172": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2173": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2174": {
			"sourceFileName": "build/esm/tabs/panel/TabsPanel.d.ts",
			"qualifiedName": "TabsPanel"
		},
		"2175": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TabsPanel"
		},
		"2176": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2177": {
			"sourceFileName": "build/esm/tabs/panel/TabsPanel.d.ts",
			"qualifiedName": "TabsPanel"
		},
		"2178": {
			"sourceFileName": "build/esm/tabs/panel/TabsPanel.d.ts",
			"qualifiedName": "TabsPanel.State"
		},
		"2179": {
			"sourceFileName": "build/esm/tabs/panel/TabsPanel.d.ts",
			"qualifiedName": "TabsPanel.State.hidden"
		},
		"2180": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "__type.orientation"
		},
		"2181": {
			"sourceFileName": "build/esm/tabs/root/TabsRoot.d.ts",
			"qualifiedName": "__type.tabActivationDirection"
		},
		"2182": {
			"sourceFileName": "build/esm/tabs/panel/TabsPanel.d.ts",
			"qualifiedName": "TabsPanel.Props"
		},
		"2183": {
			"sourceFileName": "build/esm/tabs/panel/TabsPanel.d.ts",
			"qualifiedName": "TabsPanel.Props.value"
		},
		"2184": {
			"sourceFileName": "build/esm/tabs/panel/TabsPanel.d.ts",
			"qualifiedName": "TabsPanel.Props.keepMounted"
		},
		"2185": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2186": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2187": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2188": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2189": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2190": {
			"sourceFileName": "build/esm/tabs/list/TabsList.d.ts",
			"qualifiedName": "TabsList"
		},
		"2191": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TabsList"
		},
		"2192": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2193": {
			"sourceFileName": "build/esm/tabs/list/TabsList.d.ts",
			"qualifiedName": "TabsList"
		},
		"2194": {
			"sourceFileName": "build/esm/tabs/list/TabsList.d.ts",
			"qualifiedName": "TabsList.State"
		},
		"2195": {
			"sourceFileName": "build/esm/tabs/list/TabsList.d.ts",
			"qualifiedName": "TabsList.Props"
		},
		"2196": {
			"sourceFileName": "build/esm/tabs/list/TabsList.d.ts",
			"qualifiedName": "TabsList.Props.activateOnFocus"
		},
		"2197": {
			"sourceFileName": "build/esm/tabs/list/TabsList.d.ts",
			"qualifiedName": "TabsList.Props.loop"
		},
		"2198": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2199": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2200": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2201": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2202": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2203": {
			"sourceFileName": "build/esm/toggle/Toggle.d.ts",
			"qualifiedName": "Toggle"
		},
		"2204": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "Toggle"
		},
		"2205": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2206": {
			"sourceFileName": "build/esm/toggle/Toggle.d.ts",
			"qualifiedName": "Toggle"
		},
		"2207": {
			"sourceFileName": "build/esm/toggle/Toggle.d.ts",
			"qualifiedName": "Toggle.State"
		},
		"2208": {
			"sourceFileName": "build/esm/toggle/Toggle.d.ts",
			"qualifiedName": "Toggle.State.pressed"
		},
		"2209": {
			"sourceFileName": "build/esm/toggle/Toggle.d.ts",
			"qualifiedName": "Toggle.State.disabled"
		},
		"2210": {
			"sourceFileName": "build/esm/toggle/Toggle.d.ts",
			"qualifiedName": "Toggle.Props"
		},
		"2211": {
			"sourceFileName": "build/esm/toggle/Toggle.d.ts",
			"qualifiedName": "Toggle.Props.aria-label"
		},
		"2212": {
			"sourceFileName": "build/esm/toggle/Toggle.d.ts",
			"qualifiedName": "Toggle.Props.aria-labelledby"
		},
		"2213": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "value"
		},
		"2214": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "disabled"
		},
		"2215": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "pressed"
		},
		"2216": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "defaultPressed"
		},
		"2217": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "onPressedChange"
		},
		"2218": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "__type"
		},
		"2219": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "__type"
		},
		"2220": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "pressed"
		},
		"2221": {
			"sourceFileName": "build/esm/toggle/useToggle.d.ts",
			"qualifiedName": "event"
		},
		"2222": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"2223": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2224": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2225": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2226": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"2227": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup"
		},
		"2228": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ToggleGroup"
		},
		"2229": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2230": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup"
		},
		"2231": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup.State"
		},
		"2232": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup.State.disabled"
		},
		"2233": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup.State.multiple"
		},
		"2234": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup.Props"
		},
		"2235": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup.Props.disabled"
		},
		"2236": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup.Props.orientation"
		},
		"2237": {
			"sourceFileName": "build/esm/toggle-group/ToggleGroup.d.ts",
			"qualifiedName": "ToggleGroup.Props.loop"
		},
		"2238": {
			"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
			"qualifiedName": "value"
		},
		"2239": {
			"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
			"qualifiedName": "defaultValue"
		},
		"2240": {
			"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
			"qualifiedName": "onValueChange"
		},
		"2241": {
			"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
			"qualifiedName": "__type"
		},
		"2242": {
			"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
			"qualifiedName": "__type"
		},
		"2243": {
			"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
			"qualifiedName": "groupValue"
		},
		"2244": {
			"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
			"qualifiedName": "event"
		},
		"2245": {
			"sourceFileName": "build/esm/toggle-group/useToggleGroup.d.ts",
			"qualifiedName": "toggleMultiple"
		},
		"2246": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "className"
		},
		"2247": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2248": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2249": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2250": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "render"
		},
		"2251": {
			"sourceFileName": "build/esm/tooltip/index.parts.d.ts",
			"qualifiedName": ""
		},
		"2252": {
			"sourceFileName": "build/esm/tooltip/root/TooltipRoot.d.ts",
			"qualifiedName": "TooltipRoot"
		},
		"2253": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TooltipRoot"
		},
		"2254": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2255": {
			"sourceFileName": "build/esm/tooltip/root/TooltipRoot.d.ts",
			"qualifiedName": "TooltipRoot"
		},
		"2256": {
			"sourceFileName": "build/esm/tooltip/root/TooltipRoot.d.ts",
			"qualifiedName": "TooltipRoot.State"
		},
		"2257": {
			"sourceFileName": "build/esm/tooltip/root/TooltipRoot.d.ts",
			"qualifiedName": "TooltipRoot.Props"
		},
		"2258": {
			"sourceFileName": "build/esm/tooltip/root/TooltipRoot.d.ts",
			"qualifiedName": "TooltipRoot.Props.children"
		},
		"2259": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.defaultOpen"
		},
		"2260": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.open"
		},
		"2261": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.onOpenChange"
		},
		"2262": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2263": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2264": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "open"
		},
		"2265": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "event"
		},
		"2266": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "reason"
		},
		"2267": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.onOpenChangeComplete"
		},
		"2268": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2269": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "__type"
		},
		"2270": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "open"
		},
		"2271": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.hoverable"
		},
		"2272": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.trackCursorAxis"
		},
		"2273": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.delay"
		},
		"2274": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.closeDelay"
		},
		"2275": {
			"sourceFileName": "build/esm/tooltip/root/useTooltipRoot.d.ts",
			"qualifiedName": "useTooltipRoot.Parameters.actionsRef"
		},
		"2276": {
			"sourceFileName": "build/esm/tooltip/root/TooltipRoot.d.ts",
			"qualifiedName": "TooltipRoot.Actions"
		},
		"2277": {
			"sourceFileName": "build/esm/tooltip/trigger/TooltipTrigger.d.ts",
			"qualifiedName": "TooltipTrigger"
		},
		"2278": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TooltipTrigger"
		},
		"2279": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2280": {
			"sourceFileName": "build/esm/tooltip/trigger/TooltipTrigger.d.ts",
			"qualifiedName": "TooltipTrigger"
		},
		"2281": {
			"sourceFileName": "build/esm/tooltip/trigger/TooltipTrigger.d.ts",
			"qualifiedName": "TooltipTrigger.State"
		},
		"2282": {
			"sourceFileName": "build/esm/tooltip/trigger/TooltipTrigger.d.ts",
			"qualifiedName": "TooltipTrigger.State.open"
		},
		"2283": {
			"sourceFileName": "build/esm/tooltip/trigger/TooltipTrigger.d.ts",
			"qualifiedName": "TooltipTrigger.Props"
		},
		"2284": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2285": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2286": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2287": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2288": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2289": {
			"sourceFileName": "build/esm/tooltip/portal/TooltipPortal.d.ts",
			"qualifiedName": "TooltipPortal"
		},
		"2290": {
			"sourceFileName": "build/esm/tooltip/portal/TooltipPortal.d.ts",
			"qualifiedName": "TooltipPortal"
		},
		"2291": {
			"sourceFileName": "build/esm/tooltip/portal/TooltipPortal.d.ts",
			"qualifiedName": "props"
		},
		"2292": {
			"sourceFileName": "build/esm/tooltip/portal/TooltipPortal.d.ts",
			"qualifiedName": "TooltipPortal.propTypes"
		},
		"2293": {
			"sourceFileName": "build/esm/tooltip/positioner/TooltipPositioner.d.ts",
			"qualifiedName": "TooltipPositioner"
		},
		"2294": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TooltipPositioner"
		},
		"2295": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2296": {
			"sourceFileName": "build/esm/tooltip/positioner/TooltipPositioner.d.ts",
			"qualifiedName": "TooltipPositioner"
		},
		"2297": {
			"sourceFileName": "build/esm/tooltip/positioner/TooltipPositioner.d.ts",
			"qualifiedName": "TooltipPositioner.State"
		},
		"2298": {
			"sourceFileName": "build/esm/tooltip/positioner/TooltipPositioner.d.ts",
			"qualifiedName": "TooltipPositioner.State.open"
		},
		"2299": {
			"sourceFileName": "build/esm/tooltip/positioner/TooltipPositioner.d.ts",
			"qualifiedName": "TooltipPositioner.State.side"
		},
		"2300": {
			"sourceFileName": "build/esm/tooltip/positioner/TooltipPositioner.d.ts",
			"qualifiedName": "TooltipPositioner.State.align"
		},
		"2301": {
			"sourceFileName": "build/esm/tooltip/positioner/TooltipPositioner.d.ts",
			"qualifiedName": "TooltipPositioner.State.anchorHidden"
		},
		"2302": {
			"sourceFileName": "build/esm/tooltip/positioner/TooltipPositioner.d.ts",
			"qualifiedName": "TooltipPositioner.Props"
		},
		"2303": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2304": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2305": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2306": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2307": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2308": {
			"sourceFileName": "build/esm/tooltip/positioner/useTooltipPositioner.d.ts",
			"qualifiedName": "useTooltipPositioner.SharedParameters.trackCursorAxis"
		},
		"2309": {
			"sourceFileName": "build/esm/tooltip/positioner/useTooltipPositioner.d.ts",
			"qualifiedName": "useTooltipPositioner.SharedParameters.side"
		},
		"2310": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.anchor"
		},
		"2311": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"2312": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "__type"
		},
		"2313": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.open"
		},
		"2314": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.positionMethod"
		},
		"2315": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sideOffset"
		},
		"2316": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.align"
		},
		"2317": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.alignOffset"
		},
		"2318": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionBoundary"
		},
		"2319": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.collisionPadding"
		},
		"2320": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.sticky"
		},
		"2321": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.arrowPadding"
		},
		"2322": {
			"sourceFileName": "build/esm/utils/useAnchorPositioning.d.ts",
			"qualifiedName": "useAnchorPositioning.SharedParameters.trackAnchor"
		},
		"2323": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup"
		},
		"2324": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TooltipPopup"
		},
		"2325": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2326": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup"
		},
		"2327": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup.State"
		},
		"2328": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup.State.open"
		},
		"2329": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup.State.side"
		},
		"2330": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup.State.align"
		},
		"2331": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup.State.instant"
		},
		"2332": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup.State.transitionStatus"
		},
		"2333": {
			"sourceFileName": "build/esm/tooltip/popup/TooltipPopup.d.ts",
			"qualifiedName": "TooltipPopup.Props"
		},
		"2334": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2335": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2336": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2337": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2338": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2339": {
			"sourceFileName": "build/esm/tooltip/arrow/TooltipArrow.d.ts",
			"qualifiedName": "TooltipArrow"
		},
		"2340": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TooltipArrow"
		},
		"2341": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2342": {
			"sourceFileName": "build/esm/tooltip/arrow/TooltipArrow.d.ts",
			"qualifiedName": "TooltipArrow"
		},
		"2343": {
			"sourceFileName": "build/esm/tooltip/arrow/TooltipArrow.d.ts",
			"qualifiedName": "TooltipArrow.State"
		},
		"2344": {
			"sourceFileName": "build/esm/tooltip/arrow/TooltipArrow.d.ts",
			"qualifiedName": "TooltipArrow.State.open"
		},
		"2345": {
			"sourceFileName": "build/esm/tooltip/arrow/TooltipArrow.d.ts",
			"qualifiedName": "TooltipArrow.State.side"
		},
		"2346": {
			"sourceFileName": "build/esm/tooltip/arrow/TooltipArrow.d.ts",
			"qualifiedName": "TooltipArrow.State.align"
		},
		"2347": {
			"sourceFileName": "build/esm/tooltip/arrow/TooltipArrow.d.ts",
			"qualifiedName": "TooltipArrow.State.uncentered"
		},
		"2348": {
			"sourceFileName": "build/esm/tooltip/arrow/TooltipArrow.d.ts",
			"qualifiedName": "TooltipArrow.Props"
		},
		"2349": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.className"
		},
		"2350": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2351": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type"
		},
		"2352": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "state"
		},
		"2353": {
			"sourceFileName": "build/esm/utils/types.d.ts",
			"qualifiedName": "__type.render"
		},
		"2354": {
			"sourceFileName": "build/esm/tooltip/provider/TooltipProvider.d.ts",
			"qualifiedName": "TooltipProvider"
		},
		"2355": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "TooltipProvider"
		},
		"2356": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2357": {
			"sourceFileName": "build/esm/tooltip/provider/TooltipProvider.d.ts",
			"qualifiedName": "TooltipProvider"
		},
		"2358": {
			"sourceFileName": "build/esm/tooltip/provider/TooltipProvider.d.ts",
			"qualifiedName": "TooltipProvider.Props"
		},
		"2359": {
			"sourceFileName": "build/esm/tooltip/provider/TooltipProvider.d.ts",
			"qualifiedName": "TooltipProvider.Props.children"
		},
		"2360": {
			"sourceFileName": "build/esm/tooltip/provider/TooltipProvider.d.ts",
			"qualifiedName": "TooltipProvider.Props.delay"
		},
		"2361": {
			"sourceFileName": "build/esm/tooltip/provider/TooltipProvider.d.ts",
			"qualifiedName": "TooltipProvider.Props.closeDelay"
		},
		"2362": {
			"sourceFileName": "build/esm/tooltip/provider/TooltipProvider.d.ts",
			"qualifiedName": "TooltipProvider.Props.timeout"
		},
		"2363": {
			"sourceFileName": "build/esm/accordion/index.d.ts",
			"qualifiedName": "Accordion"
		},
		"2364": {
			"sourceFileName": "build/esm/alert-dialog/index.d.ts",
			"qualifiedName": "AlertDialog"
		},
		"2365": {
			"sourceFileName": "build/esm/avatar/index.d.ts",
			"qualifiedName": "Avatar"
		},
		"2366": {
			"sourceFileName": "build/esm/checkbox/index.d.ts",
			"qualifiedName": "Checkbox"
		},
		"2367": {
			"sourceFileName": "build/esm/checkbox-group/index.d.ts",
			"qualifiedName": "CheckboxGroup"
		},
		"2368": {
			"sourceFileName": "build/esm/collapsible/index.d.ts",
			"qualifiedName": "Collapsible"
		},
		"2369": {
			"sourceFileName": "build/esm/dialog/index.d.ts",
			"qualifiedName": "Dialog"
		},
		"2370": {
			"sourceFileName": "build/esm/direction-provider/index.d.ts",
			"qualifiedName": "DirectionProvider"
		},
		"2371": {
			"sourceFileName": "build/esm/direction-provider/index.d.ts",
			"qualifiedName": "TextDirection"
		},
		"2372": {
			"sourceFileName": "build/esm/field/index.d.ts",
			"qualifiedName": "Field"
		},
		"2373": {
			"sourceFileName": "build/esm/fieldset/index.d.ts",
			"qualifiedName": "Fieldset"
		},
		"2374": {
			"sourceFileName": "build/esm/form/index.d.ts",
			"qualifiedName": "Form"
		},
		"2375": {
			"sourceFileName": "build/esm/input/index.d.ts",
			"qualifiedName": "Input"
		},
		"2376": {
			"sourceFileName": "build/esm/menu/index.d.ts",
			"qualifiedName": "Menu"
		},
		"2377": {
			"sourceFileName": "build/esm/number-field/index.d.ts",
			"qualifiedName": "NumberField"
		},
		"2378": {
			"sourceFileName": "build/esm/popover/index.d.ts",
			"qualifiedName": "Popover"
		},
		"2379": {
			"sourceFileName": "build/esm/preview-card/index.d.ts",
			"qualifiedName": "PreviewCard"
		},
		"2380": {
			"sourceFileName": "build/esm/progress/index.d.ts",
			"qualifiedName": "Progress"
		},
		"2381": {
			"sourceFileName": "build/esm/radio/index.d.ts",
			"qualifiedName": "Radio"
		},
		"2382": {
			"sourceFileName": "build/esm/radio-group/index.d.ts",
			"qualifiedName": "RadioGroup"
		},
		"2383": {
			"sourceFileName": "build/esm/scroll-area/index.d.ts",
			"qualifiedName": "ScrollArea"
		},
		"2384": {
			"sourceFileName": "build/esm/scroll-area/constants.d.ts",
			"qualifiedName": "SCROLL_TIMEOUT"
		},
		"2385": {
			"sourceFileName": "build/esm/scroll-area/constants.d.ts",
			"qualifiedName": "MIN_THUMB_SIZE"
		},
		"2386": {
			"sourceFileName": "build/esm/select/index.d.ts",
			"qualifiedName": "Select"
		},
		"2387": {
			"sourceFileName": "build/esm/separator/index.d.ts",
			"qualifiedName": "Separator"
		},
		"2388": {
			"sourceFileName": "build/esm/slider/index.d.ts",
			"qualifiedName": "Slider"
		},
		"2389": {
			"sourceFileName": "build/esm/switch/index.d.ts",
			"qualifiedName": "Switch"
		},
		"2390": {
			"sourceFileName": "build/esm/tabs/index.d.ts",
			"qualifiedName": "Tabs"
		},
		"2391": {
			"sourceFileName": "build/esm/toggle/index.d.ts",
			"qualifiedName": "Toggle"
		},
		"2392": {
			"sourceFileName": "build/esm/toggle-group/index.d.ts",
			"qualifiedName": "ToggleGroup"
		},
		"2393": {
			"sourceFileName": "build/esm/tooltip/index.d.ts",
			"qualifiedName": "Tooltip"
		},
		"2394": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.d.ts",
			"qualifiedName": "NoSsr"
		},
		"2395": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.d.ts",
			"qualifiedName": "NoSsr"
		},
		"2396": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.d.ts",
			"qualifiedName": "props"
		},
		"2397": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.d.ts",
			"qualifiedName": "NoSsr"
		},
		"2398": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.d.ts",
			"qualifiedName": "NoSsr.propTypes"
		},
		"2399": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.types.d.ts",
			"qualifiedName": "NoSsrProps"
		},
		"2400": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.types.d.ts",
			"qualifiedName": "NoSsrProps.children"
		},
		"2401": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.types.d.ts",
			"qualifiedName": "NoSsrProps.defer"
		},
		"2402": {
			"sourceFileName": "build/esm/unstable-no-ssr/NoSsr.types.d.ts",
			"qualifiedName": "NoSsrProps.fallback"
		},
		"2403": {
			"sourceFileName": "build/esm/utils/getReactElementRef.d.ts",
			"qualifiedName": "getReactElementRef"
		},
		"2404": {
			"sourceFileName": "build/esm/utils/getReactElementRef.d.ts",
			"qualifiedName": "getReactElementRef"
		},
		"2405": {
			"sourceFileName": "build/esm/utils/getReactElementRef.d.ts",
			"qualifiedName": "element"
		},
		"2406": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "useControlled"
		},
		"2407": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "useControlled"
		},
		"2408": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "T"
		},
		"2409": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "__0"
		},
		"2410": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "__type"
		},
		"2411": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "__type"
		},
		"2412": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "newValue"
		},
		"2413": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "__type"
		},
		"2414": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "__type"
		},
		"2415": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "prevValue"
		},
		"2416": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "UseControlledProps"
		},
		"2417": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "UseControlledProps.controlled"
		},
		"2418": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "UseControlledProps.default"
		},
		"2419": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "UseControlledProps.name"
		},
		"2420": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "UseControlledProps.state"
		},
		"2421": {
			"sourceFileName": "build/esm/utils/useControlled.d.ts",
			"qualifiedName": "UseControlledProps.T"
		},
		"2422": {
			"sourceFileName": "build/esm/utils/useEnhancedEffect.d.ts",
			"qualifiedName": "useEnhancedEffect"
		},
		"2423": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "useEnhancedEffect"
		},
		"2424": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "effect"
		},
		"2425": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "deps"
		},
		"2426": {
			"sourceFileName": "build/esm/utils/useForkRef.d.ts",
			"qualifiedName": "useForkRef"
		},
		"2427": {
			"sourceFileName": "build/esm/utils/useForkRef.d.ts",
			"qualifiedName": "useForkRef"
		},
		"2428": {
			"sourceFileName": "build/esm/utils/useForkRef.d.ts",
			"qualifiedName": "Instance"
		},
		"2429": {
			"sourceFileName": "build/esm/utils/useForkRef.d.ts",
			"qualifiedName": "refs"
		},
		"2430": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.bivarianceHack"
		},
		"2431": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.bivarianceHack"
		},
		"2432": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "instance"
		},
		"2433": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2434": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@19.0.8/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2435": {
			"sourceFileName": "build/esm/utils/useId.d.ts",
			"qualifiedName": "useId"
		},
		"2436": {
			"sourceFileName": "build/esm/utils/useId.d.ts",
			"qualifiedName": "useId"
		},
		"2437": {
			"sourceFileName": "build/esm/utils/useId.d.ts",
			"qualifiedName": "idOverride"
		},
		"2438": {
			"sourceFileName": "build/esm/utils/useId.d.ts",
			"qualifiedName": "prefix"
		},
		"2439": {
			"sourceFileName": "build/esm/utils/useScrollLock.d.ts",
			"qualifiedName": "useScrollLock"
		},
		"2440": {
			"sourceFileName": "build/esm/utils/useScrollLock.d.ts",
			"qualifiedName": "useScrollLock"
		},
		"2441": {
			"sourceFileName": "build/esm/utils/useScrollLock.d.ts",
			"qualifiedName": "enabled"
		},
		"2442": {
			"sourceFileName": "build/esm/utils/useScrollLock.d.ts",
			"qualifiedName": "referenceElement"
		},
		"2451": {
			"sourceFileName": "build/esm/utils/useTransitionStatus.d.ts",
			"qualifiedName": "TransitionStatus"
		},
		"2452": {
			"sourceFileName": "build/esm/utils/visuallyHidden.d.ts",
			"qualifiedName": "visuallyHidden"
		}
	},
	"files": {
		"entries": {
			"1": "build/esm/index.d.ts",
			"2": "build/esm/accordion/index.d.ts",
			"3": "build/esm/alert-dialog/index.d.ts",
			"4": "build/esm/avatar/index.d.ts",
			"5": "build/esm/checkbox/index.d.ts",
			"6": "build/esm/checkbox-group/index.d.ts",
			"7": "build/esm/collapsible/index.d.ts",
			"8": "build/esm/dialog/index.d.ts",
			"9": "build/esm/direction-provider/index.d.ts",
			"10": "build/esm/field/index.d.ts",
			"11": "build/esm/fieldset/index.d.ts",
			"12": "build/esm/form/index.d.ts",
			"13": "build/esm/input/index.d.ts",
			"14": "build/esm/menu/index.d.ts",
			"15": "build/esm/number-field/index.d.ts",
			"16": "build/esm/popover/index.d.ts",
			"17": "build/esm/preview-card/index.d.ts",
			"18": "build/esm/progress/index.d.ts",
			"19": "build/esm/radio/index.d.ts",
			"20": "build/esm/radio-group/index.d.ts",
			"21": "build/esm/scroll-area/index.d.ts",
			"22": "build/esm/select/index.d.ts",
			"23": "build/esm/separator/index.d.ts",
			"24": "build/esm/slider/index.d.ts",
			"25": "build/esm/switch/index.d.ts",
			"26": "build/esm/tabs/index.d.ts",
			"27": "build/esm/toggle/index.d.ts",
			"28": "build/esm/toggle-group/index.d.ts",
			"29": "build/esm/tooltip/index.d.ts",
			"30": "build/esm/unstable-no-ssr/index.d.ts",
			"31": "build/esm/unstable-use-media-query/index.d.ts",
			"32": "build/esm/utils/index.d.ts",
			"33": "build/esm/accordion/index.parts.d.ts",
			"34": "build/esm/alert-dialog/index.parts.d.ts",
			"35": "build/esm/avatar/index.parts.d.ts",
			"36": "build/esm/checkbox/index.parts.d.ts",
			"37": "build/esm/collapsible/index.parts.d.ts",
			"38": "build/esm/dialog/index.parts.d.ts",
			"39": "build/esm/field/index.parts.d.ts",
			"40": "build/esm/fieldset/index.parts.d.ts",
			"41": "build/esm/menu/index.parts.d.ts",
			"42": "build/esm/number-field/index.parts.d.ts",
			"43": "build/esm/popover/index.parts.d.ts",
			"44": "build/esm/preview-card/index.parts.d.ts",
			"45": "build/esm/progress/index.parts.d.ts",
			"46": "build/esm/radio/index.parts.d.ts",
			"47": "build/esm/scroll-area/index.parts.d.ts",
			"48": "build/esm/select/index.parts.d.ts",
			"49": "build/esm/slider/index.parts.d.ts",
			"50": "build/esm/switch/index.parts.d.ts",
			"51": "build/esm/tabs/index.parts.d.ts",
			"52": "build/esm/tooltip/index.parts.d.ts"
		},
		"reflections": {
			"1": 1,
			"2": 2,
			"3": 3,
			"4": 4,
			"5": 5,
			"6": 6,
			"7": 7,
			"8": 8,
			"9": 9,
			"10": 10,
			"11": 11,
			"12": 12,
			"13": 13,
			"14": 14,
			"15": 15,
			"16": 16,
			"17": 17,
			"18": 18,
			"19": 19,
			"20": 20,
			"21": 21,
			"22": 22,
			"23": 23,
			"24": 24,
			"25": 25,
			"26": 26,
			"27": 27,
			"28": 28,
			"29": 29,
			"30": 30,
			"31": 31,
			"32": 53,
			"33": 55,
			"34": 137,
			"35": 246,
			"36": 284,
			"37": 372,
			"38": 416,
			"39": 535,
			"40": 641,
			"41": 694,
			"42": 984,
			"43": 1170,
			"44": 1322,
			"45": 1434,
			"46": 1514,
			"47": 1577,
			"48": 1641,
			"49": 1896,
			"50": 2066,
			"51": 2120,
			"52": 2251
		}
	}
}
